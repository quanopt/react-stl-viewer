{"version":3,"sources":["webpack:///react-bundle.js","webpack:///webpack/bootstrap 9d446f4ba207451d9eb2","webpack:///./react/app.js","webpack:///./~/react/index.js","webpack:///./~/prop-types/index.js","webpack:///./~/domkit/appendVendorPrefix.js","webpack:///./~/domkit/insertKeyframesRule.js","webpack:///./~/fbjs/lib/emptyFunction.js","webpack:///./~/fbjs/lib/emptyObject.js","webpack:///./~/object-assign/index.js","webpack:///./~/react-dom/index.js","webpack:///./react/containers/App.js","webpack:///./src/Paint.js","webpack:///./src/STLViewer.js","webpack:///./src/Three.js","webpack:///./~/domkit/builtinStyle.js","webpack:///./~/domkit/getVendorPrefix.js","webpack:///./~/domkit/getVendorPropertyName.js","webpack:///./~/domkit/insertRule.js","webpack:///./~/fbjs/lib/EventListener.js","webpack:///./~/fbjs/lib/ExecutionEnvironment.js","webpack:///./~/fbjs/lib/containsNode.js","webpack:///./~/fbjs/lib/focusNode.js","webpack:///./~/fbjs/lib/getActiveElement.js","webpack:///./~/fbjs/lib/invariant.js","webpack:///./~/fbjs/lib/isNode.js","webpack:///./~/fbjs/lib/isTextNode.js","webpack:///./~/fbjs/lib/shallowEqual.js","webpack:///./~/halogenium/lib/BeatLoader.js","webpack:///./~/halogenium/lib/BounceLoader.js","webpack:///./~/halogenium/lib/ClipLoader.js","webpack:///./~/halogenium/lib/DotLoader.js","webpack:///./~/halogenium/lib/FadeLoader.js","webpack:///./~/halogenium/lib/GridLoader.js","webpack:///./~/halogenium/lib/Halogenium.js","webpack:///./~/halogenium/lib/MoonLoader.js","webpack:///./~/halogenium/lib/PacmanLoader.js","webpack:///./~/halogenium/lib/PulseLoader.js","webpack:///./~/halogenium/lib/RingLoader.js","webpack:///./~/halogenium/lib/RiseLoader.js","webpack:///./~/halogenium/lib/RotateLoader.js","webpack:///./~/halogenium/lib/ScaleLoader.js","webpack:///./~/halogenium/lib/SkewLoader.js","webpack:///./~/halogenium/lib/SquareLoader.js","webpack:///./~/halogenium/lib/SyncLoader.js","webpack:///./~/prop-types/factoryWithThrowingShims.js","webpack:///./~/prop-types/lib/ReactPropTypesSecret.js","webpack:///./~/react-dom/cjs/react-dom.production.min.js","webpack:///./~/react/cjs/react.production.min.js","webpack:///./~/three-orbit-controls/index.js","webpack:///./~/three/three.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom","_reactDom2","_App","_App2","render","createElement","document","getElementById","getVendorPropertyName","target","sources","to","Object","hasOwnProperty","prototype","nextIndex","arguments","length","nextSource","from","key","prefixed","insertRule","vendorPrefix","index","keyframes","name","Date","css","property","part","makeEmptyFunction","arg","emptyFunction","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","this","thatReturnsArgument","emptyObject","toObject","val","undefined","TypeError","shouldUseNative","assign","test1","String","getOwnPropertyNames","test2","i","fromCharCode","order2","map","n","join","test3","split","forEach","letter","keys","err","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","source","symbols","s","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","_classCallCheck","instance","Constructor","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_STLViewer","_STLViewer2","App","_Component","_this","getPrototypeOf","onChange","_ref","files","reader","FileReader","readAsArrayBuffer","onload","setState","model","result","state","color","clickBlue","bind","clickRed","e","preventDefault","type","modelColor","lights","rotate","onClick","Component","_toConsumableArray","arr","Array","isArray","arr2","_Three","_Three2","OrbitControls","DIRECTIONAL_LIGHT","Paint","loader","STLLoader","scene","Scene","renderer","WebGLRenderer","antialias","reqNumber","context","component","width","height","backgroundColor","orbitControls","cameraX","cameraY","cameraZ","rotationSpeeds","lightColor","mesh","remove","geometry","dispose","material","grid","directionalLightObj","getObjectByName","directionalLightObj0","directionalLightObj1","animationRequestId","cancelAnimationFrame","distance","hasMultipleLights","reduce","acc","item","addLight","addSTLToScene","_directionalLight$pos","directionalLight","DirectionalLight","position","set","apply","normalize","add","url","reqId","Promise","resolve","crossOrigin","loadFromUrl","file","_this2","loadFromFile","_this3","loadPromise","loadSTLFromUrl","ArrayBuffer","then","computeFaceNormals","computeVertexNormals","center","MeshLambertMaterial","overdraw","hasColors","MeshPhongMaterial","opacity","alpha","vertexColors","VertexColors","Mesh","computeBoundingBox","xDims","boundingBox","max","x","min","yDims","y","zDims","z","rotation","addCamera","addInteractionControls","addToReactComponent","animate","camera","PerspectiveCamera","Math","lookAt","setSize","setClearColor","controls","findDOMNode","enableKeys","addEventListener","orbitRender","replaceChild","domElement","firstChild","requestAnimationFrame","update","forceContextLoss","_propTypes","_propTypes2","_halogenium","_Paint","_Paint2","STLViewer","paint","init","nextProps","nextState","JSON","stringify","clean","_props","className","style","overflow","display","justifyContent","alignItems","ScaleLoader","size","propTypes","string","number","bool","array","arrayOf","oneOfType","instanceOf","isRequired","defaultProps","THREE","manager","DefaultLoadingManager","onLoad","onProgress","onError","scope","XHRLoader","setCrossOrigin","setResponseType","load","text","parse","buffer","data","isBinary","expect","face_size","n_faces","DataView","binData","getUint32","byteLength","fileLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","r","g","b","colors","defaultR","defaultG","defaultB","faces","Float32Array","dataOffset","faceLength","offset","BufferGeometry","vertices","normals","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","addAttribute","BufferAttribute","normal","patternFace","patternNormal","patternVertex","Geometry","exec","Vector3","parseFloat","push","Face3","computeBoundingSphere","buf","array_buffer","Uint8Array","str","charCodeAt","byteOffset","_isString","_getCharCodes","end","codes","_getBytes","littleEndian","_littleEndian","Error","isString","slice","reverse","getFloat64","sign","exponent","mantissa","pow","NaN","Infinity","getInt32","getInt16","getInt8","cssVendorPrefix","styles","window","getComputedStyle","documentElement","pre","match","OLink","domVendorPrefix","builtinStyle","prefixes","prop","isSupportTest","vendorProp","UpperProp","charAt","toUpperCase","substr","extraSheet","getElementsByTagName","appendChild","sheet","styleSheet","cssRules","rules","EventListener","listen","eventType","callback","removeEventListener","attachEvent","detachEvent","capture","registerDefault","canUseDOM","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","canUseViewport","screen","isInWorker","containsNode","outerNode","innerNode","isTextNode","parentNode","contains","compareDocumentPosition","focusNode","node","focus","getActiveElement","doc","activeElement","body","invariant","condition","format","a","d","f","validateFormat","args","argIndex","replace","framesToPop","isNode","object","ownerDocument","defaultView","Node","nodeType","nodeName","is","shallowEqual","objA","objB","keysA","keysB","_extends","_appendVendorPrefix","_appendVendorPrefix2","_insertKeyframesRule","_insertKeyframesRule2","50%","transform","100%","animationName","loading","margin","verticalAlign","ptKeys","BeatLoader","_temp","_ret","_len","_key","concat","getBallStyle","borderRadius","getAnimationStyle","animation","animationFillMode","getStyle","border","klen","0%, 100%","BounceLoader","top","left","0%","ClipLoader","borderColor","borderBottomColor","background","rotateKeyframes","bounceKeyframes","rotateAnimationName","bounceAnimationName","DotLoader","ballSize","bottom","radius","FadeLoader","getLineStyle","getPosStyle","quarter","lines","l1","l2","l3","l4","l5","l6","l7","l8","fontSize","random","GridLoader","animationDuration","animationDelay","SyncLoader","SquareLoader","SkewLoader","RotateLoader","RiseLoader","RingLoader","PulseLoader","PacmanLoader","MoonLoader","_BeatLoader2","_BeatLoader3","_BounceLoader2","_BounceLoader3","_ClipLoader2","_ClipLoader3","_DotLoader2","_DotLoader3","_FadeLoader2","_FadeLoader3","_GridLoader2","_GridLoader3","_MoonLoader2","_MoonLoader3","_PacmanLoader2","_PacmanLoader3","_PulseLoader2","_PulseLoader3","_RingLoader2","_RingLoader3","_RiseLoader2","_RiseLoader3","_RotateLoader2","_RotateLoader3","_ScaleLoader2","_ScaleLoader3","_SkewLoader2","_SkewLoader3","_SquareLoader2","_SquareLoader3","_SyncLoader2","_SyncLoader3","moonSize","animations","75%","s1","s2","borderRight","borderTop","borderLeft","borderBottom","renderLoader","45%","80%","rightRotateKeyframes","leftRotateKeyframes","rightRotateAnimationName","leftRotateAnimationName","getCircleStyle","perspective","parseInt","riseAmount","keyframesEven","25%","keyframesOdd","25","animationNameEven","animationNameOdd","getSharpStyle","getSquareStyle","33%","66%","ReactPropTypesSecret","shim","propName","componentName","location","propFullName","secret","getShim","ReactPropTypes","func","symbol","any","element","objectOf","oneOf","shape","exact","checkPropTypes","PropTypes","E","encodeURIComponent","pa","va","oa","wa","hasBooleanValue","hasStringBooleanValue","hasOverloadedBooleanValue","toLowerCase","ua","Ia","Ja","h","k","P","_hasCaughtError","_caughtError","q","v","Ka","_hasRethrowError","_rethrowError","Na","La","Ma","indexOf","Oa","extractEvents","eventTypes","Pa","phasedRegistrationNames","Qa","registrationName","Ra","Sa","dependencies","Ta","Ua","Za","currentTarget","Ya","invokeGuardedCallbackAndCatchFirstError","$a","ab","cb","_dispatchListeners","_dispatchInstances","isPropagationStopped","isPersistent","release","db","gb","ib","stateNode","Wa","disabled","jb","kb","bb","lb","rethrowCaughtError","pb","Q","tag","pop","qb","rb","ob","tb","return","ub","vb","dispatchConfig","wb","_targetInst","xb","yb","zb","Ab","Bb","alternate","Eb","Db","l","Fb","S","_fallbackText","_startText","Gb","_root","T","nativeEvent","Interface","isDefaultPrevented","defaultPrevented","returnValue","C","Kb","eventPool","Lb","destructor","Jb","getPooled","Mb","Nb","dc","Pb","keyCode","ec","detail","gc","which","cc","ac","hc","fc","Vb","ctrlKey","altKey","metaKey","char","$b","mc","Xa","jc","restoreControlledState","oc","kc","lc","pc","rc","tc","sc","vc","uc","wc","srcElement","correspondingUseElement","yc","setAttribute","xc","implementation","hasFeature","zc","Ac","getOwnPropertyDescriptor","get","getValue","setValue","stopTracking","_valueTracker","Bc","Cc","checked","Ec","Dc","change","Hc","Ic","Jc","Lc","Fc","Mc","Gc","propertyName","Nc","Oc","Pc","$c","bd","dd","getModifierState","cd","ed","fd","jd","displayName","kd","effectTag","ld","_reactInternalFiber","md","nd","child","sibling","current","od","pd","rd","targetInst","ancestors","containerInfo","sd","topLevelType","ud","td","U","ba","vd","wd","qd","yd","Cd","Ad","zd","Bd","Hd","Gd","Fd","Ed","Id","Jd","textContent","nextSibling","Kd","contentEditable","Rd","Qd","Nd","da","selectionStart","selectionEnd","getSelection","anchorNode","anchorOffset","focusOffset","Pd","ea","Md","select","Od","Td","Ud","Vd","Wd","charCode","Zd","$d","ae","be","ce","V","he","ge","W","ke","le","je","ie","me","contextTypes","D","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","ne","X","oe","cursor","pe","getChildContext","B","qe","__reactInternalMemoizedMergedChildContext","re","Y","memoizedState","updateQueue","memoizedProps","pendingProps","ref","internalContextTag","lastEffect","firstEffect","nextEffect","expirationTime","se","te","isReactComponent","ue","ve","we","handler","xe","ye","children","pendingChildren","Be","Ce","isDisabled","supportsFiber","inject","ze","onCommitFiberRoot","Ae","onCommitFiberUnmount","De","Ee","Fe","baseState","first","last","callbackList","hasForceUpdate","isInitialized","Ge","next","He","Ie","partialState","Je","isReplace","isForced","Ke","Le","updater","isMounted","enqueueSetState","nextCallback","enqueueReplaceState","enqueueForceUpdate","adoptClassInstance","constructClassInstance","mountClassInstance","refs","unstable_isAsyncReactComponent","componentWillMount","componentDidMount","updateClassInstance","u","componentWillReceiveProps","componentDidUpdate","G","I","L","shouldComponentUpdate","isPureReactComponent","componentWillUpdate","Xe","We","Ze","_owner","_stringRef","$e","toString","af","Map","$$typeof","Re","Ve","Se","Te","Ue","Ye","A","w","delete","N","done","J","df","cf","bf","pendingContext","shouldSetTextContent","useSyncScheduling","shouldDeprioritizeSubtree","pushHostContext","pushHostContainer","enterHydrationState","resetHydrationState","tryToClaimNextHydratableInstance","Ob","beginWork","hydrate","beginFailedWork","ef","createInstance","createTextInstance","appendInitialChild","finalizeInitialChildren","prepareUpdate","persistence","getRootHostContainer","popHostContext","getHostContext","popHostContainer","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","mutation","completeWork","ff","componentWillUnmount","getPublicInstance","commitMount","commitUpdate","resetTextContent","commitTextUpdate","appendChildToContainer","insertBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitResetTextContent","commitPlacement","commitDeletion","commitWork","commitLifeCycles","commitAttachRef","commitDetachRef","hf","gf","getChildHostContext","getRootHostContext","resetHostContainer","jf","hydration","canHydrateInstance","canHydrateTextInstance","getNextHydratableSibling","getFirstHydratableChild","hydrateInstance","hydrateTextInstance","kf","Qb","ja","isReadyForCommit","yg","t","zg","Ag","Ne","Oe","Sc","Bg","Tc","Cg","Dg","Eg","R","componentDidCatch","componentStack","ca","Qc","ha","qa","Fg","H","rg","Gg","Uc","F","ra","Rc","eb","qg","has","Set","_debugOwner","_debugSource","fileName","lineNumber","errorBoundary","errorBoundaryFound","errorBoundaryName","willRetry","suppressReactErrorLogging","Vc","ka","Hg","Rb","Ig","nextScheduledRoot","remainingExpirationTime","O","sa","Fa","la","Sb","ma","na","Wc","Pe","Tb","Jg","Xc","Kg","timeout","fb","Yc","Ub","Zc","finishedWork","timeRemaining","Lg","Me","now","scheduleDeferredCallback","cancelDeferredCallback","prepareForCommit","resetAfterCommit","computeAsyncExpiration","computeExpirationForFiber","scheduleWork","batchedUpdates","unbatchedUpdates","flushSync","deferredUpdates","lf","createContainer","updateContainer","getPublicRootInstance","findHostInstance","findHostInstanceWithNoPortals","injectIntoDevTools","findFiberByHostInstance","findHostInstanceByFiber","pf","Hf","Gf","Ff","Ef","test","If","mutationMethod","hasNumericValue","isNaN","hasPositiveNumericValue","Jf","mustUseProperty","attributeName","attributeNamespace","setAttributeNS","Kf","removeAttribute","Lf","step","defaultChecked","defaultValue","_wrapperState","initialValue","initialChecked","Mf","controlled","Nf","Of","Pf","Qf","aa","Children","Rf","Sf","options","selected","defaultSelected","Tf","wasMultiple","multiple","Uf","dangerouslySetInnerHTML","Vf","Wf","Xf","Zf","$f","cg","lastChild","nodeValue","fg","dg","trim","setProperty","hg","gg","ig","lg","topBlur","topFocus","topCancel","topClose","Dd","ng","jg","innerHTML","createElementNS","og","createTextNode","pg","mg","kg","__html","bg","onclick","sg","tg","ug","vg","Ng","Og","hasAttribute","Pg","_reactRootContainer","Z","Qg","Rg","fa","ia","suppressContentEditableWarning","suppressHydrationWarning","ta","MUST_USE_PROPERTY","HAS_BOOLEAN_VALUE","HAS_NUMERIC_VALUE","HAS_POSITIVE_NUMERIC_VALUE","HAS_OVERLOADED_BOOLEAN_VALUE","HAS_STRING_BOOLEAN_VALUE","injectDOMPropertyConfig","Properties","DOMAttributeNamespaces","DOMAttributeNames","DOMMutationMethods","xa","ya","K","za","Aa","Ba","Ca","Da","allowFullScreen","async","autoFocus","autoPlay","cols","defer","download","draggable","formNoValidate","hidden","loop","muted","noValidate","open","playsInline","readOnly","required","reversed","rows","rowSpan","scoped","seamless","span","spellCheck","tabIndex","itemScope","acceptCharset","htmlFor","httpEquiv","validity","badInput","Ea","M","xlink","xml","Ga","autoReverse","externalResourcesRequired","preserveAlpha","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","Ha","injection","injectErrorUtils","invokeGuardedCallback","hasCaughtError","clearCaughtError","Va","freeze","plugins","eventNameDispatchConfigs","registrationNameModules","registrationNameDependencies","possibleRegistrationNames","injectEventPluginOrder","injectEventPluginsByName","hb","mb","getListener","enqueueEvents","processEventQueue","nb","sb","precacheFiberNode","getClosestInstanceFromNode","getInstanceFromNode","getNodeFromInstance","getFiberCurrentPropsFromNode","updateFiberProps","Cb","accumulateTwoPhaseDispatches","accumulateTwoPhaseDispatchesSkipTarget","accumulateEnterLeaveDispatches","accumulateDirectDispatches","Hb","Ib","eventPhase","bubbles","cancelable","timeStamp","isTrusted","stopPropagation","cancelBubble","persist","augmentClass","Wb","documentMode","Xb","Yb","opera","version","Zb","bc","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","ic","nc","injectFiberControlledHostComponent","qc","enqueueStateRestore","restoreStateIfNeeded","date","datetime","datetime-local","email","month","password","range","search","tel","time","week","Kc","ad","_isInputEventSupported","getAttribute","view","Alt","Control","Meta","Shift","screenX","screenY","clientX","clientY","pageX","pageY","shiftKey","button","buttons","relatedTarget","fromElement","toElement","gd","mouseEnter","mouseLeave","hd","parentWindow","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","xd","_enabled","_handleTopLevel","setHandleTopLevel","setEnabled","isEnabled","trapBubbledEvent","trapCapturedEvent","dispatchEvent","animationend","animationiteration","animationstart","transitionend","transition","topAbort","topAnimationEnd","topAnimationIteration","topAnimationStart","topCanPlay","topCanPlayThrough","topChange","topClick","topCompositionEnd","topCompositionStart","topCompositionUpdate","topContextMenu","topCopy","topCut","topDoubleClick","topDrag","topDragEnd","topDragEnter","topDragExit","topDragLeave","topDragOver","topDragStart","topDrop","topDurationChange","topEmptied","topEncrypted","topEnded","topError","topInput","topKeyDown","topKeyPress","topKeyUp","topLoadedData","topLoad","topLoadedMetadata","topLoadStart","topMouseDown","topMouseMove","topMouseOut","topMouseOver","topMouseUp","topPaste","topPause","topPlay","topPlaying","topProgress","topRateChange","topScroll","topSeeked","topSeeking","topSelectionChange","topStalled","topSuspend","topTextInput","topTimeUpdate","topToggle","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","topTransitionEnd","topVolumeChange","topWaiting","topWheel","Ld","Sd","onSelect","elapsedTime","pseudoElement","clipboardData","Xd","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Yd","8","9","12","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","45","46","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","repeat","locale","dataTransfer","touches","targetTouches","changedTouches","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","de","ee","fe","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","Qe","Symbol","for","iterator","mf","nf","of","qf","performance","rf","sf","tf","requestIdleCallback","cancelIdleCallback","Bf","uf","vf","wf","xf","yf","zf","Af","didTimeout","Cf","Df","postMessage","setTimeout","clearTimeout","Yf","html","mathml","svg","ag","MSApp","execUnsafeLocalFunction","namespaceURI","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","eg","substring","menuitem","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","wg","setInitialProperties","diffProperties","updateProperties","diffHydratedProperties","diffHydratedText","warnForUnmatchedText","warnForDeletedHydratableElement","warnForDeletedHydratableText","warnForInsertedHydratedElement","warnForInsertedHydratedText","querySelectorAll","form","xg","Mg","tagName","rangeCount","focusedElem","selectionRange","extend","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","didNotMatchHydratedContainerTextInstance","didNotMatchHydratedTextInstance","didNotHydrateContainerInstance","didNotHydrateInstance","didNotFindHydratableContainerInstance","didNotFindHydratableContainerTextInstance","didNotFindHydratableInstance","didNotFindHydratableTextInstance","unmount","Sg","createPortal","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_deferredUpdates","EventPluginHub","EventPluginRegistry","EventPropagators","ReactControlledComponent","ReactDOMComponentTree","ReactDOMEventListener","bundleType","rendererPackageName","Tg","Ug","escape","=",":","keyPrefix","count","forceUpdate","__self","__source","toArray","only","PureComponent","unstable_AsyncComponent","Fragment","cloneElement","createFactory","isValidElement","OrbitConstraint","minDistance","maxDistance","minZoom","maxZoom","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","theta","phi","EPS","phiDelta","thetaDelta","scale","panOffset","zoomChanged","getPolarAngle","getAzimuthalAngle","rotateLeft","angle","rotateUp","panLeft","matrix","elements","multiplyScalar","panUp","pan","screenWidth","screenHeight","clone","sub","targetDistance","tan","fov","OrthographicCamera","right","warn","dollyIn","dollyScale","updateProjectionMatrix","dollyOut","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","copy","applyQuaternion","atan2","sqrt","sin","cos","distanceToSquared","dot","quaternion","constraint","clientWidth","clientHeight","getAutoRotationAngle","autoRotateSpeed","getZoomScale","zoomSpeed","onMouseDown","event","enabled","mouseButtons","ORBIT","enableRotate","STATE","ROTATE","rotateStart","ZOOM","enableZoom","DOLLY","dollyStart","PAN","enablePan","panStart","NONE","onMouseMove","onMouseUp","startEvent","rotateEnd","rotateDelta","subVectors","rotateSpeed","dollyEnd","dollyDelta","panEnd","panDelta","endEvent","onMouseWheel","delta","onKeyDown","UP","keyPanSpeed","BOTTOM","LEFT","RIGHT","touchstart","TOUCH_ROTATE","TOUCH_DOLLY","dx","dy","TOUCH_PAN","touchmove","touchend","contextmenu","autoRotate","MOUSE","MIDDLE","Vector2","target0","position0","zoom0","changeEvent","reset","EventDispatcher","noZoom","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","REVISION","lastTime","vendors","currTime","timeToCall","Function","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","Projector","projectVector","vector","project","unprojectVector","unproject","pickingRay","CanvasRenderer","clear","Color","setRGB","setHex","setStyle","hex","floor","setHSL","hue2rgb","euclideanModulo","clamp","parseAlpha","strAlpha","components","ColorKeywords","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","offsetHSL","addColors","color1","color2","addScalar","multiply","lerp","equals","fromArray","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","_x","_y","_z","_w","onChangeCallback","setFromEuler","euler","Euler","c1","c2","c3","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","v1","vFrom","vTo","abs","crossVectors","conjugate","lengthSq","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","multiplyVector3","slerp","cosHalfTheta","halfTheta","acos","sinHalfTheta","ratioA","ratioB","qm","setX","setY","setComponent","getComponent","addVectors","addScaledVector","subScalar","divide","divideScalar","scalar","invScalar","clampScalar","minVal","maxVal","ceil","round","roundToZero","negate","lengthManhattan","distanceTo","setLength","oldLength","lerpVectors","v2","fromAttribute","attribute","itemSize","setZ","multiplyVectors","applyEuler","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","dz","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","setFromMatrixPosition","getScaleFromMatrix","setFromMatrixScale","getColumnFromMatrix","setFromMatrixColumn","sx","sy","sz","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","empty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","isIntersectionBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromObject","updateMatrixWorld","traverse","attributes","positions","getBoundingSphere","Sphere","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","multiplyVector3Array","applyToVector3Array","j","applyToBuffer","getX","getY","getZ","setXYZ","determinant","throwOnInvertible","det","msg","transpose","tmp","flattenToArrayOffset","getNormalMatrix","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","extractPosition","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","setRotationFromQuaternion","x2","y2","z2","wx","wy","wz","eye","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","multiplyVector4","rotateAxis","crossVector","getPosition","setPosition","rotateX","rotateY","rotateZ","rotateByAxis","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","tx","ty","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","aspect","ymax","degToRad","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","isIntersectionSphere","sphere","intersectSphere","tca","d2","radius2","thc","t0","t1","isIntersectionPlane","plane","distToPoint","denominator","distanceToPlane","constant","intersectPlane","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","matrix4","optionalCenter","maxRadiusSq","intersectsSphere","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p1","p2","p3","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","negRadius","intersectsBox","d1","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","isIntersectionLine","startSign","endSign","intersectLine","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","newNormal","newCoplanarPoint","generateUUID","chars","uuid","rnd","clampBottom","mapLinear","a1","a2","b2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","degreeToRadiansFactor","degrees","radToDeg","radianToDegreesFactor","radians","isPowerOfTwo","nextPowerOfTwo","Spline","interpolate","t2","t3","intPoint","weight","w2","w3","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","total","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","midpoint","Clock","autoStart","startTime","oldTime","running","stop","getElapsedTime","getDelta","newTime","hasEventListener","listener","_listeners","listeners","listenerArray","splice","descSort","Raycaster","params","Line","LOD","Points","threshold","Sprite","PointCloud","intersectObject","raycaster","intersects","recursive","visible","raycast","linePrecision","setFromCamera","sort","intersectObjects","objects","Object3D","Object3DIdCount","parent","DefaultUp","onRotationChange","onQuaternionChange","modelViewMatrix","rotationAutoUpdate","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","eulerOrder","useQuaternion","renderDepth","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","rotateOnAxis","q1","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getChildByName","getObjectById","getObjectByProperty","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","force","toJSON","extractFromCache","cache","values","metadata","isRootObject","geometries","materials","textures","images","generator","output","materialIndex","vertexNormals","Face4","dynamic","updateRange","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","stride","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faceVertexUvs","morphTargets","morphColors","morphNormals","skinWeights","skinIndices","lineDistances","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","jl","fromBufferGeometry","uvs","uv","uvs2","uv2","tempNormals","tempUVs","tempUVs2","addFace","groups","group","fl","vA","vB","vC","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","DirectGeometry","computeGroups","fromGeometry","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","addIndex","setIndex","getIndex","drawcalls","offsets","addDrawCall","indexOffset","addGroup","clearDrawCalls","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","computeOffsets","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","magFilter","minFilter","updateCubeMap","generateMipmaps","activeCubeFace","setRenderTarget","cx","cy","setLens","focalLength","frameHeight","atan","setViewOffset","fullWidth","fullHeight","Light","AmbientLight","intensity","onlyShadow","shadowCameraNear","shadowCameraFar","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowBias","shadowDarkness","shadowMapWidth","shadowMapHeight","shadowMap","shadowMapSize","shadowCamera","shadowMatrix","HemisphereLight","skyColor","groundColor","PointLight","decay","SpotLight","shadowCameraFov","Cache","Loader","onLoadStart","onLoadProgress","onLoadComplete","extractUrlBase","parts","initMaterials","texturePath","createMaterial","imageLoader","nearest_pow2","log","LN2","create_texture","where","sourceFile","wrap","anisotropy","texture","fullPath","Handlers","Texture","image","canvas","getContext","drawImage","wrapS","wrapT","wrapMap","mirror","rgb2hex","rgb","ImageLoader","mtype","mpars","shading","blending","transparent","depthTest","depthWrite","flipSided","side","doubleSided","wireframe","colorDiffuse","DbgColor","colorEmissive","emissive","colorSpecular","specular","specularCoef","shininess","transparency","mapDiffuse","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapLight","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAO","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBump","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormal","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecular","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapAlpha","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","mapBumpScale","bumpScale","mapNormalFactor","normalScale","DbgName","handlers","regex","cached","request","XMLHttpRequest","response","itemEnd","itemError","responseType","withCredentials","send","itemStart","setWithCredentials","src","JSONLoader","statusDomElement","_statusDomElement","json","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","bones","parseMorphing","dstVertices","srcVertices","cl","dstColors","srcColors","LoadingManager","isLoading","itemsLoaded","itemsTotal","onStart","BufferGeometryLoader","typedArray","MaterialLoader","setTextures","getTexture","uniforms","vertexShader","fragmentShader","alphaTest","wireframeLinewidth","sizeAttenuation","alphaMap","bumpMap","normalMap","displacementMap","displacementScale","displacementBias","specularMap","envMap","combine","reflectivity","lightMap","lightMapIntensity","aoMap","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","BoxGeometry","depth","depthSegments","CircleBufferGeometry","segments","thetaStart","thetaLength","CircleGeometry","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","SphereGeometry","phiStart","phiLength","SphereBufferGeometry","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","heightScale","TextGeometry","loadImage","path","parseConstant","mapping","getGeometry","getMaterial","mode","Group","levels","level","addLevel","TextureLoader","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","CompressedTexture","loadTexture","texDatas","isCubemap","Material","MaterialIdCount","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","colorWrite","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","_needsUpdate","setValues","newValue","currentValue","Number","wrapAround","boolean","wrapRGB","LineBasicMaterial","linewidth","linecap","linejoin","fog","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","metal","emissiveMap","MeshDepthMaterial","MeshNormalMaterial","MultiMaterial","MeshFaceMaterial","PointsMaterial","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","ShaderMaterial","defines","derivatives","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","TextureIdCount","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","onUpdate","getDataURL","toDataURL","transformUv","CanvasTexture","CubeTexture","VideoTexture","video","readyState","HAVE_ENOUGH_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","ParticleSystem","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","distSq","faceIndex","nbVertices","LineStrip","LinePieces","updateMorphTargets","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","tempA","tempB","tempC","uvA","uvB","uvC","intersectionPoint","intersectionPointWorld","isFaceMaterial","faceMaterial","morphInfluences","tl","influence","targets","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","bone","offsetMatrix","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","skeleton","sw","MorphAnimMesh","duration","mirroredLoop","lastKeyframe","currentKeyframe","directionBackwards","setFrameRange","startKeyframe","endKeyframe","setDirectionForward","setDirectionBackward","parseAnimations","firstAnimation","pattern","morph","label","setAnimationLabel","playAnimation","fps","updateAnimation","frameTime","keyframe","influences","mix","interpolateTargets","getObjectForDistance","matrixPosition","guessSizeSq","Particle","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","ShaderChunk","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bumpmap_pars_fragment","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","defaultnormal_vertex","displacementmap_vertex","displacementmap_pars_vertex","emissivemap_fragment","emissivemap_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_fragment","fog_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_pars_vertex","lights_lambert_vertex","lights_phong_fragment","lights_phong_pars_fragment","lights_phong_pars_vertex","lights_phong_vertex","linear_to_gamma_fragment","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normalmap_pars_fragment","project_vertex","shadowmap_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","merged","uniforms_src","uniforms_dst","parameter_src","UniformsLib","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLightDirection","directionalLightColor","hemisphereLightDirection","hemisphereLightSkyColor","hemisphereLightGroundColor","pointLightColor","pointLightPosition","pointLightDistance","pointLightDecay","spotLightColor","spotLightPosition","spotLightDirection","spotLightDistance","spotLightAngleCos","spotLightExponent","spotLightDecay","psColor","shadowmap","ShaderLib","basic","lambert","phong","dashed","totalSize","mNear","mFar","cube","tCube","tFlip","equirect","tEquirect","depthRGBA","glClearColor","_premultipliedAlpha","_gl","clearColor","setDefaultGLState","viewport","_viewportX","_viewportY","_viewportWidth","_viewportHeight","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","_lightsNeedUpdate","onContextLost","properties","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","deleteRenderbuffer","__webglRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","extensions","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","enableAttribute","getAttributeBuffer","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","FLOAT","BYTES_PER_ELEMENT","vertexAttribDivisorANGLE","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","numericalSort","painterSortStable","reversePainterSortStable","pushImmediateRenderItem","transparentImmediateObjects","transparentImmediateObjectsLastIndex","opaqueImmediateObjects","opaqueImmediateObjectsLastIndex","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","projectObject","sprites","ImmediateRenderObject","_frustum","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","renderBufferDirect","renderObjectsImmediate","setMaterial","setProgram","renderBufferImmediate","initMaterial","materialProperties","getParameters","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","uniformsList","uniformLocations","getUniforms","setMaterialFaces","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","enable","CULL_FACE","disable","setFlipSided","_usedTextureUnits","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","uniformMatrix4fv","capabilities","logarithmicDepthBuffer","uniform1f","logDepthBufFC","cameraPosition","uniform3f","viewMatrix","floatVertexTextures","textureUnit","getTextureUnit","uniform1i","setTexture","boneGlobalMatrices","refreshUniformsFog","setupLights","refreshUniformsLights","_lights","markUniformsLightsNeedsUpdate","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsParticle","refreshUniformsPhong","_shadowPass","refreshUniformsShadow","loadUniformsGeneric","loadUniformsMatrices","modelMatrix","uvScaleMap","_canvas","ambient","directional","distances","decays","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","light","uniformMatrix3fv","maxTextures","uniform","uniform2f","uniform4f","uniform1iv","uniform3iv","uniform1fv","uniform2fv","uniform3fv","uniform4fv","_array","i3","i4","setCubeTexture","setCubeTextureDynamic","setColorLinear","ll","zlights","dirColors","dirPositions","pointColors","pointPositions","pointDistances","pointDecays","spotColors","spotPositions","spotDistances","spotDirections","spotAnglesCos","spotExponents","spotDecays","hemiSkyColors","hemiGroundColors","hemiPositions","dirLength","pointLength","spotLength","hemiLength","dirCount","pointCount","spotCount","hemiCount","dirOffset","pointOffset","spotOffset","hemiOffset","_direction","setTextureParameters","textureType","isImagePowerOfTwo","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","glFormat","glType","mipmap","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","maxSize","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setupFrameBuffer","framebuffer","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","setupRenderBuffer","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","MIN_EXT","MAX_EXT","_context","_width","_height","pixelRatio","_alpha","_depth","_stencil","stencil","_antialias","premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","autoClear","autoClearColor","autoClearDepth","autoClearStencil","gammaInput","gammaOutput","_currentFramebuffer","_currentWidth","_currentHeight","_infoRender","calls","info","memory","programs","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","getSize","updateStyle","setViewport","setScissor","scissor","enableScissorTest","setScissorTest","getClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","setLineWidth","setMode","LINES","renderInstances","lineWidth","LINE_STRIP","POINTS","forceClear","setFaceCulling","cullFace","frontFaceDirection","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","complete","isCube","isTargetPowerOfTwo","createFramebuffer","createRenderbuffer","shareDepthFrom","vx","vy","readRenderTargetPixels","WebGLRenderTarget","restore","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsVertexTextures","vertexTextures","supportsInstancedArrays","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapEnabled","shadowMapType","shadowMapCullFace","shadowMapDebug","debug","drawArraysInstancedANGLE","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttributes","deleteAttribute","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","bufferType","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","subarray","edges","checkEdge","list","WebGLProgram","generateDefines","fetchUniformLocations","identifiers","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","suffixPos","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","filterEmptyLine","programIdCount","shadowMapTypeDefine","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customDefines","createProgram","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","maxBones","flatShading","filter","useFog","fogExp","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","allocateLights","dirLights","pointLights","spotLights","hemiLights","allocateShadows","shaderIDs","parameterNames","maxLightCount","envMapMode","parameterName","pl","addLineNumbers","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","_objects","getDepthMaterial","depthMaterial","useMorphing","useSkinning","customDepthMaterial","_depthMaterialMorphSkin","_depthMaterialSkin","_depthMaterialMorph","_depthMaterial","_renderList","_state","_matrixPosition","depthShader","depthUniforms","BLEND","shadowFilter","pars","cameraHelper","CameraHelper","clearAlpha","newAttributes","enabledAttributes","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentDepthFunc","currentDepthWrite","currentColorWrite","currentFlipSided","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentTextureSlot","currentBoundTextures","DEPTH_TEST","LEQUAL","blendFunc","enableVertexAttribArray","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","NEVER","ALWAYS","LESS","EQUAL","GEQUAL","GREATER","NOTEQUAL","depthMask","colorMask","factor","units","POLYGON_OFFSET_FILL","scissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","flares","vertexBuffer","elementBuffer","hasVertexTexture","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","viewportWidth","viewportHeight","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","TEXTURE1","copyTexImage2D","sprite","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","fogType","fillStyle","fillRect","oldFogType","sceneFogType","GeometryUtils","geometry1","geometry2","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","getNormalMap","subtract","getImageData","imageData","createImageData","ly","uy","lx","ux","num_points","putImageData","generateDataTexture","SceneUtils","createMultiMaterialObject","detach","attach","FontUtils","divisions","getFace","loadFace","family","familyName","ThreeFont","cssFontWeight","cssFontStyle","drawText","resolution","fontPaths","Path","ret","extractGlyphPoints","paths","outline","action","cpx","cpy","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","pts","glyph","glyphs","o","_cachedOutline","moveTo","lineTo","quadraticCurveTo","Shape","Utils","bezierCurveTo","b3","generateShapes","curveSegments","font","shapes","toShapes","namespace","EPSILON","process","contour","verts","vertIndices","nv","snip","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cCROSSap","bCROSScp","aCROSSbp","Triangulate","typeface_js","_typeface_js","Audio","createBufferSource","onended","onEnded","gain","createGain","connect","destination","panner","createPanner","autoplay","playbackRate","isPlaying","decodeAudioData","play","pause","currentTime","disconnect","setFilter","getFilter","setPlaybackRate","getPlaybackRate","setLoop","getLoop","setRefDistance","refDistance","getRefDistance","setRolloffFactor","rolloffFactor","getRolloffFactor","setVolume","getVolume","AudioListener","AudioContext","webkitAudioContext","orientation","setOrientation","Curve","getPointAt","getUtoTmapping","getPoints","getSpacedPoints","lengths","getLengths","__arcLengthDivisions","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","vec","getTangentAt","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","getPointFunc","CurvePath","curves","bends","autoClose","curve","checkConnection","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","maxX","maxY","maxZ","minX","minY","minZ","NEGATIVE_INFINITY","POSITIVE_INFINITY","createPointsGeometry","createGeometry","createSpacedPointsGeometry","addWrapPath","bendpath","getTransformedPoints","oldPts","getWrapPoints","getTransformedSpacedPoints","oldX","oldY","xNorm","bounds","pathPt","actions","fromPoints","PathActions","MOVE_TO","LINE_TO","QUADRATIC_CURVE_TO","BEZIER_CURVE_TO","CSPLINE_THRU","ARC","ELLIPSE","vlen","lastargs","x0","y0","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","closedPath","useSpacedPoints","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","isClockWise","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","hole","tmpHoles","holes","extrude","extruded","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","getSpacedPointsHoles","extractAllPoints","extractPoints","extractAllSpacedPoints","triangulateShape","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","nextIdx","intersection","intersectsHoleEdge","ihIdx","chkHole","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","b2p0","b2p1","b2p2","b3p0","b3p1","b3p2","b3p3","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","x1","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","calc","ClosedSplineCurve3","AnimationHandler","CATMULLROM","CATMULLROM_FORWARD","initialized","hierarchy","rot","usedMorphTargets","morphTargetName","morphTargetsInfluences","root","parseRecurseHierarchy","deltaTimeMS","resetBlendWeights","Animation","timeScale","interpolationType","keyTypes","animationCache","positionWeight","quaternionWeight","scaleWeight","prevKey","nextKey","originalMatrix","getNextKeyWith","newVector","newQuat","interpolateCatmullRom","prevXYZ","nextXYZ","proportionalWeight","getPrevKeyWith","currentPoint","forwardPoint","KeyFrameAnimation","isPaused","sids","sid","endTime","original","hasTarget","MorphAnimation","frames","lastFrame","currentFrame","frame","buildPlane","udir","vdir","gridX","gridY","width_half","height_half","gridX1","gridY1","segment_width","segment_height","uva","uvb","uvc","uvd","depth_half","CubeGeometry","centerUV","segment","ii","heightHalf","verticesRow","uvsRow","tanTheta","v4","n1","n2","n3","n4","uv4","EdgesGeometry","thresholdAngle","thresholdDot","edge","sortFunction","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","pt","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","flen","f3","steps","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","amount","bevelThickness","bevelSize","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","TubeGeometry","FrenetFrames","shapePoints","bs","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheGeometry","inversePointLength","inverseSegments","np","u0","u1","PlaneGeometry","PlaneBufferGeometry","offset2","radiusStep","thetaSegment","thetaEnd","vertexCount","textShapes","getPos","in_q","in_p","cu","su","quOverP","cs","tz","tang","bitan","ip","jp","closed","taper","NoTaper","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","aj","bj","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","drawcall","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","dir","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","colorCenterLine","colorGrid","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","active","autoCreateAnimations","frameRanges","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","stopAnimation"],"mappings":"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","file":"react-bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _reactDom = __webpack_require__(8);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _App = __webpack_require__(9);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t_reactDom2.default.render(_react2.default.createElement(_App2.default, null), document.getElementById('react-app'));\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tif (true) {\n\t  module.exports = __webpack_require__(46);\n\t} else {\n\t  module.exports = require('./cjs/react.development.js');\n\t}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\tif (false) {\n\t  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n\t    Symbol.for &&\n\t    Symbol.for('react.element')) ||\n\t    0xeac7;\n\t\n\t  var isValidElement = function(object) {\n\t    return typeof object === 'object' &&\n\t      object !== null &&\n\t      object.$$typeof === REACT_ELEMENT_TYPE;\n\t  };\n\t\n\t  // By explicitly using `prop-types` you are opting into new development behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  var throwOnDirectAccess = true;\n\t  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n\t} else {\n\t  // By explicitly using `prop-types` you are opting into new production behavior.\n\t  // http://fb.me/prop-types-in-prod\n\t  module.exports = __webpack_require__(43)();\n\t}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar getVendorPropertyName = __webpack_require__(15);\n\t\n\tmodule.exports = function(target, sources) {\n\t  var to = Object(target);\n\t  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t    var nextSource = arguments[nextIndex];\n\t    if (nextSource == null) {\n\t      continue;\n\t    }\n\t\n\t    var from = Object(nextSource);\n\t\n\t    for (var key in from) {\n\t      if (hasOwnProperty.call(from, key)) {\n\t        to[key] = from[key];\n\t      }\n\t    }\n\t  }\n\t\n\t  var prefixed = {};\n\t  for (var key in to) {\n\t    prefixed[getVendorPropertyName(key)] = to[key]\n\t  }\n\t\n\t  return prefixed\n\t}\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar insertRule = __webpack_require__(16);\n\tvar vendorPrefix = __webpack_require__(14)();\n\tvar index = 0;\n\t\n\tmodule.exports = function(keyframes) {\n\t  // random name\n\t  var name = 'anim_' + (++index) + (+new Date);\n\t  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\t\n\t  for (var key in keyframes) {\n\t    css += key + \" {\";\n\t\n\t    for (var property in keyframes[key]) {\n\t      var part = \":\" + keyframes[key][property] + \";\";\n\t      // We do vendor prefix for every property\n\t      css += vendorPrefix + property + part;\n\t      css += property + part;\n\t    }\n\t\n\t    css += \"}\";\n\t  }\n\t\n\t  css += \"}\";\n\t\n\t  insertRule(css);\n\t\n\t  return name\n\t}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tfunction makeEmptyFunction(arg) {\n\t  return function () {\n\t    return arg;\n\t  };\n\t}\n\t\n\t/**\n\t * This function accepts and discards inputs; it has no side effects. This is\n\t * primarily useful idiomatically for overridable function endpoints which\n\t * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n\t */\n\tvar emptyFunction = function emptyFunction() {};\n\t\n\temptyFunction.thatReturns = makeEmptyFunction;\n\temptyFunction.thatReturnsFalse = makeEmptyFunction(false);\n\temptyFunction.thatReturnsTrue = makeEmptyFunction(true);\n\temptyFunction.thatReturnsNull = makeEmptyFunction(null);\n\temptyFunction.thatReturnsThis = function () {\n\t  return this;\n\t};\n\temptyFunction.thatReturnsArgument = function (arg) {\n\t  return arg;\n\t};\n\t\n\tmodule.exports = emptyFunction;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyObject = {};\n\t\n\tif (false) {\n\t  Object.freeze(emptyObject);\n\t}\n\t\n\tmodule.exports = emptyObject;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n\t/*\n\tobject-assign\n\t(c) Sindre Sorhus\n\t@license MIT\n\t*/\n\t\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (err) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (getOwnPropertySymbols) {\n\t\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tfunction checkDCE() {\n\t  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n\t  if (\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n\t    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n\t  ) {\n\t    return;\n\t  }\n\t  if (false) {\n\t    // This branch is unreachable because this function is only called\n\t    // in production, but the condition is true only in development.\n\t    // Therefore if the branch is still here, dead code elimination wasn't\n\t    // properly applied.\n\t    // Don't change the message. React DevTools relies on it. Also make sure\n\t    // this message doesn't occur elsewhere in this function, or it will cause\n\t    // a false positive.\n\t    throw new Error('^_^');\n\t  }\n\t  try {\n\t    // Verify that the code above has been dead code eliminated (DCE'd).\n\t    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n\t  } catch (err) {\n\t    // DevTools shouldn't crash React, no matter what.\n\t    // We should still report in case we break this code.\n\t    console.error(err);\n\t  }\n\t}\n\t\n\tif (true) {\n\t  // DCE check should happen before ReactDOM bundle executes so that\n\t  // DevTools can report bad minification during injection.\n\t  checkDCE();\n\t  module.exports = __webpack_require__(45);\n\t} else {\n\t  module.exports = require('./cjs/react-dom.development.js');\n\t}\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _STLViewer = __webpack_require__(11);\n\t\n\tvar _STLViewer2 = _interopRequireDefault(_STLViewer);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar App = function (_Component) {\n\t  _inherits(App, _Component);\n\t\n\t  function App(props) {\n\t    _classCallCheck(this, App);\n\t\n\t    var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));\n\t\n\t    _this.onChange = function (_ref) {\n\t      var target = _ref.target;\n\t      var files = target.files;\n\t\n\t      var reader = new FileReader();\n\t      reader.readAsArrayBuffer(files[0]);\n\t      reader.onload = function () {\n\t        _this.setState({ model: reader.result });\n\t      };\n\t    };\n\t\n\t    _this.state = {\n\t      color: '#FF0000',\n\t      model: undefined\n\t    };\n\t\n\t    _this.clickBlue = _this.clickBlue.bind(_this);\n\t    _this.clickRed = _this.clickRed.bind(_this);\n\t    return _this;\n\t  }\n\t\n\t  _createClass(App, [{\n\t    key: 'clickBlue',\n\t    value: function clickBlue(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#0000FF' });\n\t    }\n\t  }, {\n\t    key: 'clickRed',\n\t    value: function clickRed(e) {\n\t      e.preventDefault();\n\t      this.setState({ color: '#FF0000' });\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      return _react2.default.createElement(\n\t        'div',\n\t        null,\n\t        _react2.default.createElement('input', { id: 'image-file', type: 'file', onChange: this.onChange }),\n\t        _react2.default.createElement(_STLViewer2.default, {\n\t          modelColor: this.state.color,\n\t          lights: [[0.5, 1, -1], [1, 1, 1]],\n\t          rotate: true,\n\t          model: this.state.model\n\t        }),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickRed },\n\t          'red'\n\t        ),\n\t        _react2.default.createElement(\n\t          'button',\n\t          { onClick: this.clickBlue },\n\t          'blue'\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}(_react.Component);\n\t\n\texports.default = App;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _reactDom = __webpack_require__(8);\n\t\n\tvar _reactDom2 = _interopRequireDefault(_reactDom);\n\t\n\tvar _Three = __webpack_require__(12);\n\t\n\tvar _Three2 = _interopRequireDefault(_Three);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar OrbitControls = __webpack_require__(47)(_Three2.default);\n\t\n\tvar DIRECTIONAL_LIGHT = 'directionalLight';\n\t\n\tvar Paint = function () {\n\t  function Paint() {\n\t    _classCallCheck(this, Paint);\n\t\n\t    this.loader = new _Three2.default.STLLoader();\n\t    this.scene = new _Three2.default.Scene();\n\t    this.renderer = new _Three2.default.WebGLRenderer({\n\t      antialias: true\n\t    });\n\t    this.reqNumber = 0;\n\t  }\n\t\n\t  _createClass(Paint, [{\n\t    key: 'init',\n\t    value: function init(context) {\n\t      this.component = context;\n\t      this.width = context.props.width;\n\t      this.height = context.props.height;\n\t      this.modelColor = context.props.modelColor;\n\t      this.backgroundColor = context.props.backgroundColor;\n\t      this.orbitControls = context.props.orbitControls;\n\t      this.rotate = context.props.rotate;\n\t      this.cameraX = context.props.cameraX;\n\t      this.cameraY = context.props.cameraY;\n\t      this.cameraZ = context.props.cameraZ;\n\t      this.rotationSpeeds = context.props.rotationSpeeds;\n\t      this.lights = context.props.lights;\n\t      this.lightColor = context.props.lightColor;\n\t      this.model = context.props.model;\n\t\n\t      if (this.mesh !== undefined) {\n\t        this.scene.remove(this.mesh);\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.grid);\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t      var directionalLightObj0 = this.scene.getObjectByName(DIRECTIONAL_LIGHT + '0');\n\t      if (directionalLightObj0) {\n\t        this.scene.remove(directionalLightObj0);\n\t      }\n\t      var directionalLightObj1 = this.scene.getObjectByName(DIRECTIONAL_LIGHT + '1');\n\t      if (directionalLightObj1) {\n\t        this.scene.remove(directionalLightObj1);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t\n\t      //Detector.addGetWebGLMessage();\n\t      this.distance = 10000;\n\t\n\t      // lights processing\n\t      var hasMultipleLights = this.lights.reduce(function (acc, item) {\n\t        return acc && Array.isArray(item);\n\t      }, true);\n\t      if (hasMultipleLights) {\n\t        this.lights.forEach(this.addLight.bind(this));\n\t      } else {\n\t        this.addLight(this.lights);\n\t      }\n\t\n\t      this.reqNumber += 1;\n\t      this.addSTLToScene(this.reqNumber);\n\t    }\n\t  }, {\n\t    key: 'addLight',\n\t    value: function addLight(lights) {\n\t      var _directionalLight$pos;\n\t\n\t      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\t\n\t      var directionalLight = new _Three2.default.DirectionalLight(this.lightColor);\n\t      (_directionalLight$pos = directionalLight.position).set.apply(_directionalLight$pos, _toConsumableArray(lights));\n\t      directionalLight.name = DIRECTIONAL_LIGHT + index;\n\t      directionalLight.position.normalize();\n\t      this.scene.add(directionalLight);\n\t    }\n\t  }, {\n\t    key: 'loadSTLFromUrl',\n\t    value: function loadSTLFromUrl(url, reqId) {\n\t      var _this = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this.loader.crossOrigin = '';\n\t        _this.loader.loadFromUrl(url, function (geometry) {\n\t          if (_this.reqNumber !== reqId) {\n\t            return;\n\t          }\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'loadFromFile',\n\t    value: function loadFromFile(file) {\n\t      var _this2 = this;\n\t\n\t      return new Promise(function (resolve) {\n\t        _this2.loader.loadFromFile(file, function (geometry) {\n\t          resolve(geometry);\n\t        });\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addSTLToScene',\n\t    value: function addSTLToScene(reqId) {\n\t      var _this3 = this;\n\t\n\t      var loadPromise = void 0;\n\t      if (typeof this.model === 'string') {\n\t        loadPromise = this.loadSTLFromUrl(this.model, reqId);\n\t      } else if (this.model instanceof ArrayBuffer) {\n\t        loadPromise = this.loadFromFile(this.model);\n\t      } else {\n\t        return Promise.resolve(null);\n\t      }\n\t      return loadPromise.then(function (geometry) {\n\t        // Calculate mesh noramls for MeshLambertMaterial.\n\t        geometry.computeFaceNormals();\n\t        geometry.computeVertexNormals();\n\t\n\t        // Center the object\n\t        geometry.center();\n\t\n\t        var material = new _Three2.default.MeshLambertMaterial({\n\t          overdraw: true,\n\t          color: _this3.modelColor\n\t        });\n\t\n\t        if (geometry.hasColors) {\n\t          material = new _Three2.default.MeshPhongMaterial({\n\t            opacity: geometry.alpha,\n\t            vertexColors: _Three2.default.VertexColors\n\t          });\n\t        }\n\t\n\t        _this3.mesh = new _Three2.default.Mesh(geometry, material);\n\t        // Set the object's dimensions\n\t        geometry.computeBoundingBox();\n\t        _this3.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n\t        _this3.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n\t        _this3.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\t\n\t        if (_this3.rotate) {\n\t          _this3.mesh.rotation.x = _this3.rotationSpeeds[0];\n\t          _this3.mesh.rotation.y = _this3.rotationSpeeds[1];\n\t          _this3.mesh.rotation.z = _this3.rotationSpeeds[2];\n\t        }\n\t\n\t        _this3.scene.add(_this3.mesh);\n\t\n\t        _this3.addCamera();\n\t        _this3.addInteractionControls();\n\t        _this3.addToReactComponent();\n\t\n\t        // Start the animation\n\t        _this3.animate();\n\t      });\n\t    }\n\t  }, {\n\t    key: 'addCamera',\n\t    value: function addCamera() {\n\t      // Add the camera\n\t      this.camera = new _Three2.default.PerspectiveCamera(30, this.width / this.height, 1, this.distance);\n\t\n\t      if (this.cameraZ === null) {\n\t        this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n\t      }\n\t\n\t      this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\t\n\t      this.scene.add(this.camera);\n\t\n\t      this.camera.lookAt(this.mesh);\n\t\n\t      this.renderer.set;\n\t      this.renderer.setSize(this.width, this.height);\n\t      this.renderer.setClearColor(this.backgroundColor, 1);\n\t    }\n\t  }, {\n\t    key: 'addInteractionControls',\n\t    value: function addInteractionControls() {\n\t      // Add controls for mouse interaction\n\t      if (this.orbitControls) {\n\t        this.controls = new OrbitControls(this.camera, _reactDom2.default.findDOMNode(this.component));\n\t        this.controls.enableKeys = false;\n\t        this.controls.addEventListener('change', this.orbitRender.bind(this));\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addToReactComponent',\n\t    value: function addToReactComponent() {\n\t      // Add to the React Component\n\t      _reactDom2.default.findDOMNode(this.component).replaceChild(this.renderer.domElement, _reactDom2.default.findDOMNode(this.component).firstChild);\n\t    }\n\t\n\t    /**\n\t     * Animate the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'animate',\n\t    value: function animate() {\n\t      // note: three.js includes requestAnimationFrame shim\n\t      if (this.rotate) {\n\t        this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n\t      }\n\t\n\t      if (this.orbitControls) {\n\t        this.controls.update();\n\t      }\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Render the scene after turning off the rotation\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'orbitRender',\n\t    value: function orbitRender() {\n\t      if (this.rotate) {\n\t        this.rotate = false;\n\t      }\n\t\n\t      this.render();\n\t    }\n\t\n\t    /**\n\t     * Deallocate Mesh, renderer context.\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'clean',\n\t    value: function clean() {\n\t      if (this.mesh !== undefined) {\n\t        this.mesh.geometry.dispose();\n\t        this.mesh.material.dispose();\n\t        this.scene.remove(this.mesh);\n\t        delete this.mesh;\n\t      }\n\t      var directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n\t      if (directionalLightObj) {\n\t        this.scene.remove(directionalLightObj);\n\t      }\n\t\n\t      if (this.animationRequestId) {\n\t        cancelAnimationFrame(this.animationRequestId);\n\t      }\n\t      this.renderer.dispose();\n\t      this.renderer.forceContextLoss();\n\t    }\n\t\n\t    /**\n\t     * Render the scene\n\t     * @returns {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      if (this.mesh && this.rotate) {\n\t        this.mesh.rotation.x += this.rotationSpeeds[0];\n\t        this.mesh.rotation.y += this.rotationSpeeds[1];\n\t        this.mesh.rotation.z += this.rotationSpeeds[2];\n\t      }\n\t\n\t      this.renderer.render(this.scene, this.camera);\n\t    }\n\t  }]);\n\t\n\t  return Paint;\n\t}();\n\t\n\texports.default = Paint;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _halogenium = __webpack_require__(32);\n\t\n\tvar _Paint = __webpack_require__(10);\n\t\n\tvar _Paint2 = _interopRequireDefault(_Paint);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar STLViewer = function (_Component) {\n\t  _inherits(STLViewer, _Component);\n\t\n\t  function STLViewer() {\n\t    _classCallCheck(this, STLViewer);\n\t\n\t    return _possibleConstructorReturn(this, (STLViewer.__proto__ || Object.getPrototypeOf(STLViewer)).apply(this, arguments));\n\t  }\n\t\n\t  _createClass(STLViewer, [{\n\t    key: 'componentDidMount',\n\t    value: function componentDidMount() {\n\t      this.paint = new _Paint2.default();\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'shouldComponentUpdate',\n\t    value: function shouldComponentUpdate(nextProps, nextState) {\n\t      return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n\t    }\n\t  }, {\n\t    key: 'componentWillUpdate',\n\t    value: function componentWillUpdate(nextProps, nextState) {\n\t      this.props = nextProps;\n\t      this.paint.init(this);\n\t    }\n\t  }, {\n\t    key: 'componentWillUnmount',\n\t    value: function componentWillUnmount() {\n\t      this.paint.clean();\n\t      delete this.paint;\n\t    }\n\t  }, {\n\t    key: 'render',\n\t    value: function render() {\n\t      var _props = this.props,\n\t          width = _props.width,\n\t          height = _props.height,\n\t          modelColor = _props.modelColor;\n\t\n\t      return _react2.default.createElement(\n\t        'div',\n\t        {\n\t          className: this.props.className,\n\t          style: {\n\t            width: width,\n\t            height: height,\n\t            overflow: 'hidden'\n\t          }\n\t        },\n\t        _react2.default.createElement(\n\t          'div',\n\t          {\n\t            style: {\n\t              height: '100%',\n\t              display: 'flex',\n\t              justifyContent: 'center',\n\t              alignItems: 'center'\n\t            }\n\t          },\n\t          _react2.default.createElement(_halogenium.ScaleLoader, { color: modelColor, size: '16px' })\n\t        )\n\t      );\n\t    }\n\t  }]);\n\t\n\t  return STLViewer;\n\t}(_react.Component);\n\t\n\tSTLViewer.propTypes = {\n\t  className: _propTypes2.default.string,\n\t  url: _propTypes2.default.string,\n\t  width: _propTypes2.default.number,\n\t  height: _propTypes2.default.number,\n\t  backgroundColor: _propTypes2.default.string,\n\t  modelColor: _propTypes2.default.string,\n\t  rotate: _propTypes2.default.bool,\n\t  orbitControls: _propTypes2.default.bool,\n\t  cameraX: _propTypes2.default.number,\n\t  cameraY: _propTypes2.default.number,\n\t  cameraZ: _propTypes2.default.number,\n\t  lights: _propTypes2.default.array,\n\t  lightColor: _propTypes2.default.string,\n\t  rotationSpeeds: _propTypes2.default.arrayOf(_propTypes2.default.number),\n\t  model: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.instanceOf(ArrayBuffer)]).isRequired\n\t};\n\tSTLViewer.defaultProps = {\n\t  backgroundColor: '#EAEAEA',\n\t  modelColor: '#B92C2C',\n\t  height: 400,\n\t  width: 400,\n\t  rotate: true,\n\t  orbitControls: true,\n\t  cameraX: 0,\n\t  cameraY: 0,\n\t  cameraZ: null,\n\t  lights: [0, 0, 1],\n\t  lightColor: '#ffffff',\n\t  rotationSpeeds: [0, 0, 0.02],\n\t  model: undefined\n\t};\n\t\n\t\n\tmodule.exports = STLViewer;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar THREE = __webpack_require__(48);\n\t\n\t//\n\t// STL Loader added\n\t//\n\t/**\n\t * @author aleeper / http://adamleeper.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author gero3 / https://github.com/gero3\n\t *\n\t * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n\t *\n\t * Supports both binary and ASCII encoded files, with automatic detection of type.\n\t *\n\t * Limitations:\n\t *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n\t *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n\t *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n\t *\n\t * Usage:\n\t *  var loader = new THREE.STLLoader();\n\t *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n\t *    scene.add( new THREE.Mesh( geometry ) );\n\t *  });\n\t *\n\t * For binary STLs geometry might contain colors for vertices. To use it:\n\t *  // use the same code to load STL as above\n\t *  if (geometry.hasColors) {\n\t *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n\t *  } else { .... }\n\t *  var mesh = new THREE.Mesh( geometry, material );\n\t */\n\t\n\tTHREE.STLLoader = function (manager) {\n\t  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n\t};\n\t\n\tTHREE.STLLoader.prototype = {\n\t  constructor: THREE.STLLoader,\n\t\n\t  loadFromUrl: function loadFromUrl(url, onLoad, onProgress, onError) {\n\t    var scope = this;\n\t\n\t    var loader = new THREE.XHRLoader(scope.manager);\n\t    loader.setCrossOrigin(this.crossOrigin);\n\t    loader.setResponseType('arraybuffer');\n\t    loader.load(url, function (text) {\n\t      onLoad(scope.parse(text));\n\t    }, onProgress, onError);\n\t  },\n\t\n\t  loadFromFile: function loadFromFile(buffer, onLoad) {\n\t    var scope = this;\n\t    onLoad(scope.parse(buffer));\n\t  },\n\t\n\t  parse: function parse(data) {\n\t    var isBinary = function isBinary() {\n\t      var expect, face_size, n_faces, reader;\n\t      reader = new DataView(binData);\n\t      face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n\t      n_faces = reader.getUint32(80, true);\n\t      expect = 80 + 32 / 8 + n_faces * face_size;\n\t\n\t      if (expect === reader.byteLength) {\n\t        return true;\n\t      }\n\t\n\t      // some binary files will have different size from expected,\n\t      // checking characters higher than ASCII to confirm is binary\n\t      var fileLength = reader.byteLength;\n\t      for (var index = 0; index < fileLength; index++) {\n\t        if (reader.getUint8(index, false) > 127) {\n\t          return true;\n\t        }\n\t      }\n\t\n\t      return false;\n\t    };\n\t\n\t    var binData = this.ensureBinary(data);\n\t\n\t    return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n\t  },\n\t\n\t  parseBinary: function parseBinary(data) {\n\t    var reader = new DataView(data);\n\t    var faces = reader.getUint32(80, true);\n\t\n\t    var r,\n\t        g,\n\t        b,\n\t        hasColors = false,\n\t        colors;\n\t    var defaultR, defaultG, defaultB, alpha;\n\t\n\t    // process STL header\n\t    // check for default color in header (\"COLOR=rgba\" sequence).\n\t\n\t    for (var index = 0; index < 80 - 10; index++) {\n\t      if (reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ && reader.getUint8(index + 4) == 0x52 /*'R'*/ && reader.getUint8(index + 5) == 0x3d /*'='*/\n\t      ) {\n\t          hasColors = true;\n\t          colors = new Float32Array(faces * 3 * 3);\n\t\n\t          defaultR = reader.getUint8(index + 6) / 255;\n\t          defaultG = reader.getUint8(index + 7) / 255;\n\t          defaultB = reader.getUint8(index + 8) / 255;\n\t          alpha = reader.getUint8(index + 9) / 255;\n\t        }\n\t    }\n\t\n\t    var dataOffset = 84;\n\t    var faceLength = 12 * 4 + 2;\n\t\n\t    var offset = 0;\n\t\n\t    var geometry = new THREE.BufferGeometry();\n\t\n\t    var vertices = new Float32Array(faces * 3 * 3);\n\t    var normals = new Float32Array(faces * 3 * 3);\n\t\n\t    for (var face = 0; face < faces; face++) {\n\t      var start = dataOffset + face * faceLength;\n\t      var normalX = reader.getFloat32(start, true);\n\t      var normalY = reader.getFloat32(start + 4, true);\n\t      var normalZ = reader.getFloat32(start + 8, true);\n\t\n\t      if (hasColors) {\n\t        var packedColor = reader.getUint16(start + 48, true);\n\t\n\t        if ((packedColor & 0x8000) === 0) {\n\t          // facet has its own unique color\n\t\n\t          r = (packedColor & 0x1f) / 31;\n\t          g = (packedColor >> 5 & 0x1f) / 31;\n\t          b = (packedColor >> 10 & 0x1f) / 31;\n\t        } else {\n\t          r = defaultR;\n\t          g = defaultG;\n\t          b = defaultB;\n\t        }\n\t      }\n\t\n\t      for (var i = 1; i <= 3; i++) {\n\t        var vertexstart = start + i * 12;\n\t\n\t        vertices[offset] = reader.getFloat32(vertexstart, true);\n\t        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n\t        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\t\n\t        normals[offset] = normalX;\n\t        normals[offset + 1] = normalY;\n\t        normals[offset + 2] = normalZ;\n\t\n\t        if (hasColors) {\n\t          colors[offset] = r;\n\t          colors[offset + 1] = g;\n\t          colors[offset + 2] = b;\n\t        }\n\t\n\t        offset += 3;\n\t      }\n\t    }\n\t\n\t    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n\t    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\t\n\t    if (hasColors) {\n\t      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n\t      geometry.hasColors = true;\n\t      geometry.alpha = alpha;\n\t    }\n\t\n\t    return geometry;\n\t  },\n\t\n\t  parseASCII: function parseASCII(data) {\n\t    var geometry, length, normal, patternFace, patternNormal, patternVertex, result, text;\n\t    geometry = new THREE.Geometry();\n\t    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\n\t    while ((result = patternFace.exec(data)) !== null) {\n\t      text = result[0];\n\t      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternNormal.exec(text)) !== null) {\n\t        normal = new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n\t      }\n\t\n\t      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\t\n\t      while ((result = patternVertex.exec(text)) !== null) {\n\t        geometry.vertices.push(new THREE.Vector3(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5])));\n\t      }\n\t\n\t      length = geometry.vertices.length;\n\t\n\t      geometry.faces.push(new THREE.Face3(length - 3, length - 2, length - 1, normal));\n\t    }\n\t\n\t    geometry.computeBoundingBox();\n\t    geometry.computeBoundingSphere();\n\t\n\t    return geometry;\n\t  },\n\t\n\t  ensureString: function ensureString(buf) {\n\t    if (typeof buf !== 'string') {\n\t      var array_buffer = new Uint8Array(buf);\n\t      var str = '';\n\t      for (var i = 0; i < buf.byteLength; i++) {\n\t        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n\t      }\n\t      return str;\n\t    } else {\n\t      return buf;\n\t    }\n\t  },\n\t\n\t  ensureBinary: function ensureBinary(buf) {\n\t    if (typeof buf === 'string') {\n\t      var array_buffer = new Uint8Array(buf.length);\n\t      for (var i = 0; i < buf.length; i++) {\n\t        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n\t      }\n\t      return array_buffer.buffer || array_buffer;\n\t    } else {\n\t      return buf;\n\t    }\n\t  }\n\t};\n\t\n\tif (typeof DataView === 'undefined') {\n\t  DataView = function DataView(buffer, byteOffset, byteLength) {\n\t    this.buffer = buffer;\n\t    this.byteOffset = byteOffset || 0;\n\t    this.byteLength = byteLength || buffer.byteLength || buffer.length;\n\t    this._isString = typeof buffer === 'string';\n\t  };\n\t\n\t  DataView.prototype = {\n\t    _getCharCodes: function _getCharCodes(buffer, start, length) {\n\t      start = start || 0;\n\t      length = length || buffer.length;\n\t      var end = start + length;\n\t      var codes = [];\n\t      for (var i = start; i < end; i++) {\n\t        codes.push(buffer.charCodeAt(i) & 0xff);\n\t      }\n\t      return codes;\n\t    },\n\t\n\t    _getBytes: function _getBytes(length, byteOffset, littleEndian) {\n\t      var result;\n\t\n\t      // Handle the lack of endianness\n\t      if (littleEndian === undefined) {\n\t        littleEndian = this._littleEndian;\n\t      }\n\t\n\t      // Handle the lack of byteOffset\n\t      if (byteOffset === undefined) {\n\t        byteOffset = this.byteOffset;\n\t      } else {\n\t        byteOffset = this.byteOffset + byteOffset;\n\t      }\n\t\n\t      if (length === undefined) {\n\t        length = this.byteLength - byteOffset;\n\t      }\n\t\n\t      // Error Checking\n\t      if (typeof byteOffset !== 'number') {\n\t        throw new TypeError('DataView byteOffset is not a number');\n\t      }\n\t\n\t      if (length < 0 || byteOffset + length > this.byteLength) {\n\t        throw new Error('DataView length or (byteOffset+length) value is out of bounds');\n\t      }\n\t\n\t      if (this.isString) {\n\t        result = this._getCharCodes(this.buffer, byteOffset, byteOffset + length);\n\t      } else {\n\t        result = this.buffer.slice(byteOffset, byteOffset + length);\n\t      }\n\t\n\t      if (!littleEndian && length > 1) {\n\t        if (!(result instanceof Array)) {\n\t          result = Array.prototype.slice.call(result);\n\t        }\n\t\n\t        result.reverse();\n\t      }\n\t\n\t      return result;\n\t    },\n\t\n\t    // Compatibility functions on a String Buffer\n\t\n\t    getFloat64: function getFloat64(byteOffset, littleEndian) {\n\t      var b = this._getBytes(8, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[7] >> 7),\n\t          exponent = ((b[7] << 1 & 0xff) << 3 | b[6] >> 4) - ((1 << 10) - 1),\n\t\n\t      // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t      mantissa = (b[6] & 0x0f) * Math.pow(2, 48) + b[5] * Math.pow(2, 40) + b[4] * Math.pow(2, 32) + b[3] * Math.pow(2, 24) + b[2] * Math.pow(2, 16) + b[1] * Math.pow(2, 8) + b[0];\n\t\n\t      if (exponent === 1024) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -1023) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -1022 - 52);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getFloat32: function getFloat32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian),\n\t          sign = 1 - 2 * (b[3] >> 7),\n\t          exponent = (b[3] << 1 & 0xff | b[2] >> 7) - 127,\n\t          mantissa = (b[2] & 0x7f) << 16 | b[1] << 8 | b[0];\n\t\n\t      if (exponent === 128) {\n\t        if (mantissa !== 0) {\n\t          return NaN;\n\t        } else {\n\t          return sign * Infinity;\n\t        }\n\t      }\n\t\n\t      if (exponent === -127) {\n\t        // Denormalized\n\t        return sign * mantissa * Math.pow(2, -126 - 23);\n\t      }\n\t\n\t      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n\t    },\n\t\n\t    getInt32: function getInt32(byteOffset, littleEndian) {\n\t      var b = this._getBytes(4, byteOffset, littleEndian);\n\t      return b[3] << 24 | b[2] << 16 | b[1] << 8 | b[0];\n\t    },\n\t\n\t    getUint32: function getUint32(byteOffset, littleEndian) {\n\t      return this.getInt32(byteOffset, littleEndian) >>> 0;\n\t    },\n\t\n\t    getInt16: function getInt16(byteOffset, littleEndian) {\n\t      return this.getUint16(byteOffset, littleEndian) << 16 >> 16;\n\t    },\n\t\n\t    getUint16: function getUint16(byteOffset, littleEndian) {\n\t      var b = this._getBytes(2, byteOffset, littleEndian);\n\t      return b[1] << 8 | b[0];\n\t    },\n\t\n\t    getInt8: function getInt8(byteOffset) {\n\t      return this.getUint8(byteOffset) << 24 >> 24;\n\t    },\n\t\n\t    getUint8: function getUint8(byteOffset) {\n\t      return this._getBytes(1, byteOffset)[0];\n\t    }\n\t  };\n\t}\n\t\n\tmodule.exports = THREE;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = document.createElement('div').style;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar cssVendorPrefix;\n\t\n\tmodule.exports = function() {\n\t\n\t  if (cssVendorPrefix) return cssVendorPrefix;\n\t\n\t  var styles = window.getComputedStyle(document.documentElement, '');\n\t  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\t\n\t  return cssVendorPrefix = '-' + pre + '-';\n\t}\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar builtinStyle = __webpack_require__(13);\n\tvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\n\tvar domVendorPrefix;\n\t\n\t// Helper function to get the proper vendor property name. (transition => WebkitTransition)\n\tmodule.exports = function(prop, isSupportTest) {\n\t\n\t  var vendorProp;\n\t  if (prop in builtinStyle) return prop;\n\t\n\t  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\t\n\t  if (domVendorPrefix) {\n\t\n\t    vendorProp = domVendorPrefix + UpperProp;\n\t    if (vendorProp in builtinStyle) {\n\t      return vendorProp;\n\t    }\n\t  } else {\n\t\n\t    for (var i = 0; i < prefixes.length; ++i) {\n\t      vendorProp = prefixes[i] + UpperProp;\n\t      if (vendorProp in builtinStyle) {\n\t        domVendorPrefix = prefixes[i];\n\t        return vendorProp;\n\t      }\n\t    }\n\t  }\n\t\n\t  // if support test, not fallback to origin prop name\n\t  if (!isSupportTest) {\n\t    return prop;\n\t  }\n\t\n\t}\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar extraSheet;\n\t\n\tmodule.exports = function(css) {\n\t\n\t  if (!extraSheet) {\n\t    // First time, create an extra stylesheet for adding rules\n\t    extraSheet = document.createElement('style');\n\t    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n\t    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n\t    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n\t  }\n\t\n\t  var index = (extraSheet.cssRules || extraSheet.rules).length;\n\t  extraSheet.insertRule(css, index);\n\t\n\t  return extraSheet;\n\t}\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar emptyFunction = __webpack_require__(5);\n\t\n\t/**\n\t * Upstream version of event listener. Does not take into account specific\n\t * nature of platform.\n\t */\n\tvar EventListener = {\n\t  /**\n\t   * Listen to DOM events during the bubble phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  listen: function listen(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, false);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, false);\n\t        }\n\t      };\n\t    } else if (target.attachEvent) {\n\t      target.attachEvent('on' + eventType, callback);\n\t      return {\n\t        remove: function remove() {\n\t          target.detachEvent('on' + eventType, callback);\n\t        }\n\t      };\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Listen to DOM events during the capture phase.\n\t   *\n\t   * @param {DOMEventTarget} target DOM element to register listener on.\n\t   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n\t   * @param {function} callback Callback function.\n\t   * @return {object} Object with a `remove` method.\n\t   */\n\t  capture: function capture(target, eventType, callback) {\n\t    if (target.addEventListener) {\n\t      target.addEventListener(eventType, callback, true);\n\t      return {\n\t        remove: function remove() {\n\t          target.removeEventListener(eventType, callback, true);\n\t        }\n\t      };\n\t    } else {\n\t      if (false) {\n\t        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n\t      }\n\t      return {\n\t        remove: emptyFunction\n\t      };\n\t    }\n\t  },\n\t\n\t  registerDefault: function registerDefault() {}\n\t};\n\t\n\tmodule.exports = EventListener;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\tvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\t\n\t/**\n\t * Simple, lightweight module assisting with the detection and context of\n\t * Worker. Helps avoid circular dependencies and allows code to reason about\n\t * whether or not they are in a Worker, even if they never include the main\n\t * `ReactWorker` dependency.\n\t */\n\tvar ExecutionEnvironment = {\n\t\n\t  canUseDOM: canUseDOM,\n\t\n\t  canUseWorkers: typeof Worker !== 'undefined',\n\t\n\t  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\t\n\t  canUseViewport: canUseDOM && !!window.screen,\n\t\n\t  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\t\n\t};\n\t\n\tmodule.exports = ExecutionEnvironment;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * \n\t */\n\t\n\tvar isTextNode = __webpack_require__(24);\n\t\n\t/*eslint-disable no-bitwise */\n\t\n\t/**\n\t * Checks if a given DOM node contains or is another DOM node.\n\t */\n\tfunction containsNode(outerNode, innerNode) {\n\t  if (!outerNode || !innerNode) {\n\t    return false;\n\t  } else if (outerNode === innerNode) {\n\t    return true;\n\t  } else if (isTextNode(outerNode)) {\n\t    return false;\n\t  } else if (isTextNode(innerNode)) {\n\t    return containsNode(outerNode, innerNode.parentNode);\n\t  } else if ('contains' in outerNode) {\n\t    return outerNode.contains(innerNode);\n\t  } else if (outerNode.compareDocumentPosition) {\n\t    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\tmodule.exports = containsNode;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * @param {DOMElement} node input/textarea to focus\n\t */\n\t\n\tfunction focusNode(node) {\n\t  // IE8 can throw \"Can't move focus to the control because it is invisible,\n\t  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n\t  // reasons that are too expensive and fragile to test.\n\t  try {\n\t    node.focus();\n\t  } catch (e) {}\n\t}\n\t\n\tmodule.exports = focusNode;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/* eslint-disable fb-www/typeof-undefined */\n\t\n\t/**\n\t * Same as document.activeElement but wraps in a try-catch block. In IE it is\n\t * not safe to call document.activeElement if there is nothing focused.\n\t *\n\t * The activeElement will be null only if the document or document body is not\n\t * yet defined.\n\t *\n\t * @param {?DOMDocument} doc Defaults to current document.\n\t * @return {?DOMElement}\n\t */\n\tfunction getActiveElement(doc) /*?DOMElement*/{\n\t  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n\t  if (typeof doc === 'undefined') {\n\t    return null;\n\t  }\n\t  try {\n\t    return doc.activeElement || doc.body;\n\t  } catch (e) {\n\t    return doc.body;\n\t  }\n\t}\n\t\n\tmodule.exports = getActiveElement;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Use invariant() to assert state which your program assumes to be true.\n\t *\n\t * Provide sprintf-style format (only %s is supported) and arguments\n\t * to provide information about what broke and what you were\n\t * expecting.\n\t *\n\t * The invariant message will be stripped in production, but the invariant\n\t * will remain to ensure logic does not differ in production.\n\t */\n\t\n\tvar validateFormat = function validateFormat(format) {};\n\t\n\tif (false) {\n\t  validateFormat = function validateFormat(format) {\n\t    if (format === undefined) {\n\t      throw new Error('invariant requires an error message argument');\n\t    }\n\t  };\n\t}\n\t\n\tfunction invariant(condition, format, a, b, c, d, e, f) {\n\t  validateFormat(format);\n\t\n\t  if (!condition) {\n\t    var error;\n\t    if (format === undefined) {\n\t      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n\t    } else {\n\t      var args = [a, b, c, d, e, f];\n\t      var argIndex = 0;\n\t      error = new Error(format.replace(/%s/g, function () {\n\t        return args[argIndex++];\n\t      }));\n\t      error.name = 'Invariant Violation';\n\t    }\n\t\n\t    error.framesToPop = 1; // we don't care about invariant's own frame\n\t    throw error;\n\t  }\n\t}\n\t\n\tmodule.exports = invariant;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM node.\n\t */\n\tfunction isNode(object) {\n\t  var doc = object ? object.ownerDocument || object : document;\n\t  var defaultView = doc.defaultView || window;\n\t  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n\t}\n\t\n\tmodule.exports = isNode;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t */\n\t\n\tvar isNode = __webpack_require__(23);\n\t\n\t/**\n\t * @param {*} object The object to check.\n\t * @return {boolean} Whether or not the object is a DOM text node.\n\t */\n\tfunction isTextNode(object) {\n\t  return isNode(object) && object.nodeType == 3;\n\t}\n\t\n\tmodule.exports = isTextNode;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t *\n\t * @typechecks\n\t * \n\t */\n\t\n\t/*eslint-disable no-self-compare */\n\t\n\t'use strict';\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t/**\n\t * inlined Object.is polyfill to avoid requiring consumers ship their own\n\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n\t */\n\tfunction is(x, y) {\n\t  // SameValue algorithm\n\t  if (x === y) {\n\t    // Steps 1-5, 7-10\n\t    // Steps 6.b-6.e: +0 != -0\n\t    // Added the nonzero y check to make Flow happy, but it is redundant\n\t    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n\t  } else {\n\t    // Step 6.a: NaN == NaN\n\t    return x !== x && y !== y;\n\t  }\n\t}\n\t\n\t/**\n\t * Performs equality by iterating through keys on an object and returning false\n\t * when any key has values which are not strictly equal between the arguments.\n\t * Returns true when the values of all keys are strictly equal.\n\t */\n\tfunction shallowEqual(objA, objB) {\n\t  if (is(objA, objB)) {\n\t    return true;\n\t  }\n\t\n\t  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t    return false;\n\t  }\n\t\n\t  var keysA = Object.keys(objA);\n\t  var keysB = Object.keys(objB);\n\t\n\t  if (keysA.length !== keysB.length) {\n\t    return false;\n\t  }\n\t\n\t  // Test for A's keys different from B.\n\t  for (var i = 0; i < keysA.length; i++) {\n\t    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\t\n\tmodule.exports = shallowEqual;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    transform: 'scale(0.75)',\n\t    opacity: 0.2\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BeatLoader = function (_Component) {\n\t  _inherits(BeatLoader, _Component);\n\t\n\t  function BeatLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BeatLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BeatLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BeatLoader;\n\t}(_react.Component);\n\t\n\tBeatLoader.propTypes = propTypes;\n\tBeatLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = BeatLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BeatLoader.js.map\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar keyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t};\n\t\n\tvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar BounceLoader = function (_Component) {\n\t  _inherits(BounceLoader, _Component);\n\t\n\t  function BounceLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, BounceLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        borderRadius: '100%',\n\t        opacity: 0.6,\n\t        position: 'absolute',\n\t        top: 0,\n\t        left: 0,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)({\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(BounceLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle() },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return BounceLoader;\n\t}(_react.Component);\n\t\n\tBounceLoader.propTypes = propTypes;\n\tBounceLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px'\n\t};\n\texports.default = BounceLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=BounceLoader.js.map\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg) scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg) scale(0.8)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg) scale(1)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ClipLoader = function (_Component) {\n\t  _inherits(ClipLoader, _Component);\n\t\n\t  function ClipLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ClipLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        border: '2px solid',\n\t        borderColor: _this.props.color,\n\t        borderBottomColor: 'transparent',\n\t        borderRadius: '100%',\n\t        background: 'transparent !important',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(ClipLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return ClipLoader;\n\t}(_react.Component);\n\t\n\tClipLoader.propTypes = propTypes;\n\tClipLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '35px'\n\t};\n\texports.default = ClipLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ClipLoader.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rotateKeyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var bounceKeyframes = {\n\t  '0%, 100%': {\n\t    transform: 'scale(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar DotLoader = function (_Component) {\n\t  _inherits(DotLoader, _Component);\n\t\n\t  function DotLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, DotLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var ballSize = size / 2;\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: i % 2 ? 0 : 'auto',\n\t          bottom: i % 2 ? 'auto' : 0,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(DotLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return DotLoader;\n\t}(_react.Component);\n\t\n\tDotLoader.propTypes = propTypes;\n\tDotLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = DotLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=DotLoader.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '50%': {\n\t    opacity: 0.3\n\t  },\n\t  '100%': {\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar FadeLoader = function (_Component) {\n\t  _inherits(FadeLoader, _Component);\n\t\n\t  function FadeLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, FadeLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getPosStyle = function (i) {\n\t      var radius = 20;\n\t      var quarter = radius / 2 + radius / 5.5;\n\t\n\t      var lines = {\n\t        l1: {\n\t          top: radius,\n\t          left: 0\n\t        },\n\t        l2: {\n\t          top: quarter,\n\t          left: quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l3: {\n\t          top: 0,\n\t          left: radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l4: {\n\t          top: -quarter,\n\t          left: quarter,\n\t          transform: 'rotate(45deg)'\n\t        },\n\t        l5: {\n\t          top: -radius,\n\t          left: 0\n\t        },\n\t        l6: {\n\t          top: -quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(-45deg)'\n\t        },\n\t        l7: {\n\t          top: 0,\n\t          left: -radius,\n\t          transform: 'rotate(90deg)'\n\t        },\n\t        l8: {\n\t          top: quarter,\n\t          left: -quarter,\n\t          transform: 'rotate(45deg)'\n\t        }\n\t      };\n\t\n\t      return lines['l' + i];\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n\t        position: 'absolute',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(FadeLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return FadeLoader;\n\t}(_react.Component);\n\t\n\tFadeLoader.propTypes = propTypes;\n\tFadeLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  height: '15px',\n\t  width: '5px',\n\t  margin: '2px',\n\t  radius: '2px'\n\t};\n\texports.default = FadeLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=FadeLoader.js.map\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.5)',\n\t    opacity: 0.7\n\t  },\n\t  '100%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\t/**\n\t * @param  {Number} top\n\t * @return {Number}\n\t */\n\tfunction random(top) {\n\t  return Math.random() * top;\n\t}\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar GridLoader = function (_Component) {\n\t  _inherits(GridLoader, _Component);\n\t\n\t  function GridLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, GridLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animationDuration = random(100) / 100 + 0.6 + 's';\n\t      var animationDelay = random(100) / 100 - 0.2 + 's';\n\t\n\t      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(GridLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var style = {\n\t          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n\t          fontSize: 0\n\t        };\n\t\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(5) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(6) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(7) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(8) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(9) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return GridLoader;\n\t}(_react.Component);\n\t\n\tGridLoader.propTypes = propTypes;\n\tGridLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px'\n\t};\n\texports.default = GridLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=GridLoader.js.map\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\t\n\tvar _BeatLoader2 = __webpack_require__(26);\n\t\n\tvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\t\n\tvar _BounceLoader2 = __webpack_require__(27);\n\t\n\tvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\t\n\tvar _ClipLoader2 = __webpack_require__(28);\n\t\n\tvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\t\n\tvar _DotLoader2 = __webpack_require__(29);\n\t\n\tvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\t\n\tvar _FadeLoader2 = __webpack_require__(30);\n\t\n\tvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\t\n\tvar _GridLoader2 = __webpack_require__(31);\n\t\n\tvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\t\n\tvar _MoonLoader2 = __webpack_require__(33);\n\t\n\tvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\t\n\tvar _PacmanLoader2 = __webpack_require__(34);\n\t\n\tvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\t\n\tvar _PulseLoader2 = __webpack_require__(35);\n\t\n\tvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\t\n\tvar _RingLoader2 = __webpack_require__(36);\n\t\n\tvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\t\n\tvar _RiseLoader2 = __webpack_require__(37);\n\t\n\tvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\t\n\tvar _RotateLoader2 = __webpack_require__(38);\n\t\n\tvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\t\n\tvar _ScaleLoader2 = __webpack_require__(39);\n\t\n\tvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\t\n\tvar _SkewLoader2 = __webpack_require__(40);\n\t\n\tvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\t\n\tvar _SquareLoader2 = __webpack_require__(41);\n\t\n\tvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\t\n\tvar _SyncLoader2 = __webpack_require__(42);\n\t\n\tvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.BeatLoader = _BeatLoader3.default;\n\texports.BounceLoader = _BounceLoader3.default;\n\texports.ClipLoader = _ClipLoader3.default;\n\texports.DotLoader = _DotLoader3.default;\n\texports.FadeLoader = _FadeLoader3.default;\n\texports.GridLoader = _GridLoader3.default;\n\texports.MoonLoader = _MoonLoader3.default;\n\texports.PacmanLoader = _PacmanLoader3.default;\n\texports.PulseLoader = _PulseLoader3.default;\n\texports.RingLoader = _RingLoader3.default;\n\texports.RiseLoader = _RiseLoader3.default;\n\texports.RotateLoader = _RotateLoader3.default;\n\texports.ScaleLoader = _ScaleLoader3.default;\n\texports.SkewLoader = _SkewLoader3.default;\n\texports.SquareLoader = _SquareLoader3.default;\n\texports.SyncLoader = _SyncLoader3.default;\n\t//# sourceMappingURL=Halogenium.js.map\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar MoonLoader = function (_Component) {\n\t  _inherits(MoonLoader, _Component);\n\t\n\t  function MoonLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, MoonLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'forwards';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = _this.props.size | 0;\n\t      var moonSize = size / 7;\n\t\n\t      if (i === 1) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n\t          backgroundColor: _this.props.color,\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: size / 2 - moonSize / 2\n\t        });\n\t      } else if (i === 2) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getBallStyle(size), {\n\t          border: moonSize + 'px solid ' + _this.props.color,\n\t          opacity: 0.1\n\t        });\n\t      }\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getAnimationStyle(i), {\n\t        position: 'relative'\n\t      });\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @param  {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(MoonLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      var loading = this.props.loading;\n\t\n\t\n\t      if (loading) {\n\t        var props = _extends({}, this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }]);\n\t\n\t  return MoonLoader;\n\t}(_react.Component);\n\t\n\tMoonLoader.propTypes = propTypes;\n\tMoonLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = MoonLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=MoonLoader.js.map\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar animations = {};\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PacmanLoader = function (_Component) {\n\t  _inherits(PacmanLoader, _Component);\n\t\n\t  function PacmanLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PacmanLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign,\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var size = _this.props.size;\n\t      var animationName = animations[size];\n\t\n\t      if (!animationName) {\n\t        var keyframes = {\n\t          '75%': {\n\t            opacity: 0.7\n\t          },\n\t          '100%': {\n\t            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n\t          }\n\t        };\n\t        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n\t      }\n\t\n\t      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i | 0 === 1) {\n\t        var s1 = _this.props.size + 'px solid transparent';\n\t        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\t\n\t        return {\n\t          width: 0,\n\t          height: 0,\n\t          borderRight: s1,\n\t          borderTop: s2,\n\t          borderLeft: s2,\n\t          borderBottom: s2,\n\t          borderRadius: _this.props.size\n\t        };\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        width: 10,\n\t        height: 10,\n\t        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n\t        position: 'absolute',\n\t        top: 25,\n\t        left: 100\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var style = {\n\t          position: 'relative',\n\t          fontSize: 0\n\t        };\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: style },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  _createClass(PacmanLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PacmanLoader;\n\t}(_react.Component);\n\t\n\tPacmanLoader.propTypes = propTypes;\n\tPacmanLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: 25,\n\t  margin: 2 };\n\texports.default = PacmanLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PacmanLoader.js.map\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  },\n\t  '45%': {\n\t    transform: 'scale(0.1)',\n\t    opacity: 0.7\n\t  },\n\t  '80%': {\n\t    transform: 'scale(1)',\n\t    opacity: 1\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar PulseLoader = function (_Component) {\n\t  _inherits(PulseLoader, _Component);\n\t\n\t  function PulseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, PulseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(PulseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return PulseLoader;\n\t}(_react.Component);\n\t\n\tPulseLoader.propTypes = propTypes;\n\tPulseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = PulseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=PulseLoader.js.map\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar rightRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var leftRotateKeyframes = {\n\t  '0%': {\n\t    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RingLoader = function (_Component) {\n\t  _inherits(RingLoader, _Component);\n\t\n\t  function RingLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RingLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        border: size / 10 + 'px solid ' + _this.props.color,\n\t        opacity: 0.4,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\t\n\t      var animationFillMode = 'forwards';\n\t      var perspective = '800px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      var size = parseInt(_this.props.size, 10);\n\t\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)({\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: 0\n\t        });\n\t      }\n\t\n\t      return {\n\t        width: size,\n\t        height: size,\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      };\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle(0) },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param {String} size\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RingLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RingLoader;\n\t}(_react.Component);\n\t\n\tRingLoader.propTypes = propTypes;\n\tRingLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '60px' };\n\texports.default = RingLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RingLoader.js.map\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Number}\n\t */\n\tvar riseAmount = 30;\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframesEven = {\n\t  '0%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '25%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {Object}\n\t   */\n\t};var keyframesOdd = {\n\t  '0%': {\n\t    transform: 'scale(0.4)'\n\t  },\n\t  25: {\n\t    transform: 'translateY(' + riseAmount + 'px)'\n\t  },\n\t  '50%': {\n\t    transform: 'scale(1.1)'\n\t  },\n\t  '75%': {\n\t    transform: 'translateY(-' + riseAmount + 'px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0) scale(0.75)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\t\n\t/**\n\t * @type {String}\n\t */\n\tvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RiseLoader = function (_Component) {\n\t  _inherits(RiseLoader, _Component);\n\t\n\t  function RiseLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RiseLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RiseLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RiseLoader;\n\t}(_react.Component);\n\t\n\tRiseLoader.propTypes = propTypes;\n\tRiseLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RiseLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RiseLoader.js.map\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'rotate(0deg)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotate(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotate(360deg)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar RotateLoader = function (_Component) {\n\t  _inherits(RotateLoader, _Component);\n\t\n\t  function RotateLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, RotateLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      if (i) {\n\t        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n\t          opacity: '0.8',\n\t          position: 'absolute',\n\t          top: 0,\n\t          left: i % 2 ? -28 : 25,\n\t          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t        });\n\t      }\n\t\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        position: 'relative',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement(\n\t            'div',\n\t            { style: _this.getStyle() },\n\t            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t            _react2.default.createElement('div', { style: _this.getStyle(2) })\n\t          )\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(RotateLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return RotateLoader;\n\t}(_react.Component);\n\t\n\tRotateLoader.propTypes = propTypes;\n\tRotateLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = RotateLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=RotateLoader.js.map\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '0%': {\n\t    transform: 'scaley(1.0)'\n\t  },\n\t  '50%': {\n\t    transform: 'scaley(0.4)'\n\t  },\n\t  '100%': {\n\t    transform: 'scaley(1.0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  radius: _propTypes2.default.string,\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar ScaleLoader = function (_Component) {\n\t  _inherits(ScaleLoader, _Component);\n\t\n\t  function ScaleLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, ScaleLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        height: _this.props.height,\n\t        width: _this.props.width,\n\t        margin: _this.props.margin,\n\t        borderRadius: _this.props.radius,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(5) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(ScaleLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return ScaleLoader;\n\t}(_react.Component);\n\t\n\tScaleLoader.propTypes = propTypes;\n\tScaleLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  height: '35px',\n\t  width: '4px',\n\t  margin: '2px',\n\t  radius: '2px' };\n\texports.default = ScaleLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=ScaleLoader.js.map\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SkewLoader = function (_Component) {\n\t  _inherits(SkewLoader, _Component);\n\t\n\t  function SkewLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SkewLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n\t      return {\n\t        width: 0,\n\t        height: 0,\n\t        borderLeft: _this.props.size + ' solid transparent',\n\t        borderRight: _this.props.size + ' solid transparent',\n\t        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)({\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block'\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SkewLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SkewLoader;\n\t}(_react.Component);\n\t\n\tSkewLoader.propTypes = propTypes;\n\tSkewLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#fff',\n\t  size: '20px' };\n\texports.default = SkewLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SkewLoader.js.map\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '25%': {\n\t    transform: 'rotateX(180deg) rotateY(0)'\n\t  },\n\t  '50%': {\n\t    transform: 'rotateX(180deg) rotateY(180deg)'\n\t  },\n\t  '75%': {\n\t    transform: 'rotateX(0) rotateY(180deg)'\n\t  },\n\t  '100%': {\n\t    transform: 'rotateX(0) rotateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SquareLoader = function (_Component) {\n\t  _inherits(SquareLoader, _Component);\n\t\n\t  function SquareLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SquareLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function () {\n\t      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n\t      var animationFillMode = 'both';\n\t      var perspective = '100px';\n\t\n\t      return {\n\t        perspective: perspective,\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle() })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SquareLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SquareLoader;\n\t}(_react.Component);\n\t\n\tSquareLoader.propTypes = propTypes;\n\tSquareLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '50px' };\n\texports.default = SquareLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SquareLoader.js.map\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _propTypes = __webpack_require__(2);\n\t\n\tvar _propTypes2 = _interopRequireDefault(_propTypes);\n\t\n\tvar _appendVendorPrefix = __webpack_require__(3);\n\t\n\tvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\t\n\tvar _insertKeyframesRule = __webpack_require__(4);\n\t\n\tvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\t/**\n\t * @type {Object}\n\t */\n\tvar keyframes = {\n\t  '33%': {\n\t    transform: 'translateY(10px)'\n\t  },\n\t  '66%': {\n\t    transform: 'translateY(-10px)'\n\t  },\n\t  '100%': {\n\t    transform: 'translateY(0)'\n\t  }\n\t\n\t  /**\n\t   * @type {String}\n\t   */\n\t};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\t\n\tvar propTypes = {\n\t  loading: _propTypes2.default.bool,\n\t  color: _propTypes2.default.string,\n\t  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n\t  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n\t};\n\t\n\tvar ptKeys = Object.keys(propTypes);\n\t\n\tvar SyncLoader = function (_Component) {\n\t  _inherits(SyncLoader, _Component);\n\t\n\t  function SyncLoader() {\n\t    var _ref;\n\t\n\t    var _temp, _this, _ret;\n\t\n\t    _classCallCheck(this, SyncLoader);\n\t\n\t    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n\t      args[_key] = arguments[_key];\n\t    }\n\t\n\t    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n\t      return {\n\t        backgroundColor: _this.props.color,\n\t        width: _this.props.size,\n\t        height: _this.props.size,\n\t        margin: _this.props.margin,\n\t        borderRadius: '100%',\n\t        verticalAlign: _this.props.verticalAlign\n\t      };\n\t    }, _this.getAnimationStyle = function (i) {\n\t      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n\t      var animationFillMode = 'both';\n\t\n\t      return {\n\t        animation: animation,\n\t        animationFillMode: animationFillMode\n\t      };\n\t    }, _this.getStyle = function (i) {\n\t      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n\t        display: 'inline-block',\n\t        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n\t      });\n\t    }, _this.renderLoader = function (loading) {\n\t      if (loading) {\n\t        var props = Object.assign({}, _this.props);\n\t\n\t        if (propTypes && ptKeys) {\n\t          var klen = ptKeys.length;\n\t          for (var i = 0; i < klen; i++) {\n\t            delete props[ptKeys[i]];\n\t          }\n\t        }\n\t\n\t        return _react2.default.createElement(\n\t          'div',\n\t          props,\n\t          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n\t          _react2.default.createElement('div', { style: _this.getStyle(3) })\n\t        );\n\t      }\n\t\n\t      return null;\n\t    }, _temp), _possibleConstructorReturn(_this, _ret);\n\t  }\n\t  /**\n\t   * @type {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Number} i\n\t   * @return {Object}\n\t   */\n\t\n\t\n\t  /**\n\t   * @param  {Boolean} loading\n\t   * @return {ReactComponent || null}\n\t   */\n\t\n\t\n\t  _createClass(SyncLoader, [{\n\t    key: 'render',\n\t    value: function render() {\n\t      return this.renderLoader(this.props.loading);\n\t    }\n\t  }]);\n\t\n\t  return SyncLoader;\n\t}(_react.Component);\n\t\n\tSyncLoader.propTypes = propTypes;\n\tSyncLoader.defaultProps = {\n\t  loading: true,\n\t  color: '#ffffff',\n\t  size: '15px',\n\t  margin: '2px' };\n\texports.default = SyncLoader;\n\tmodule.exports = exports['default'];\n\t//# sourceMappingURL=SyncLoader.js.map\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar emptyFunction = __webpack_require__(5);\n\tvar invariant = __webpack_require__(22);\n\tvar ReactPropTypesSecret = __webpack_require__(44);\n\t\n\tmodule.exports = function() {\n\t  function shim(props, propName, componentName, location, propFullName, secret) {\n\t    if (secret === ReactPropTypesSecret) {\n\t      // It is still safe when called from React.\n\t      return;\n\t    }\n\t    invariant(\n\t      false,\n\t      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n\t      'Use PropTypes.checkPropTypes() to call them. ' +\n\t      'Read more at http://fb.me/use-check-prop-types'\n\t    );\n\t  };\n\t  shim.isRequired = shim;\n\t  function getShim() {\n\t    return shim;\n\t  };\n\t  // Important!\n\t  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\t  var ReactPropTypes = {\n\t    array: shim,\n\t    bool: shim,\n\t    func: shim,\n\t    number: shim,\n\t    object: shim,\n\t    string: shim,\n\t    symbol: shim,\n\t\n\t    any: shim,\n\t    arrayOf: getShim,\n\t    element: shim,\n\t    instanceOf: getShim,\n\t    node: shim,\n\t    objectOf: getShim,\n\t    oneOf: getShim,\n\t    oneOfType: getShim,\n\t    shape: getShim,\n\t    exact: getShim\n\t  };\n\t\n\t  ReactPropTypes.checkPropTypes = emptyFunction;\n\t  ReactPropTypes.PropTypes = ReactPropTypes;\n\t\n\t  return ReactPropTypes;\n\t};\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';\n\t\n\tvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\t\n\tmodule.exports = ReactPropTypesSecret;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.2.0\n\t * react-dom.production.min.js\n\t *\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t/*\n\t Modernizr 3.0.0pre (Custom Build) | MIT\n\t*/\n\t'use strict';var aa=__webpack_require__(1),l=__webpack_require__(18),B=__webpack_require__(7),C=__webpack_require__(5),ba=__webpack_require__(17),da=__webpack_require__(21),ea=__webpack_require__(25),fa=__webpack_require__(19),ia=__webpack_require__(20),D=__webpack_require__(6);\n\tfunction E(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:E(\"227\");\n\tvar oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}\n\tvar ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),\n\thasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};\n\tfunction va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}\n\tvar xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,\"default\":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,\n\tscoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\n\ta.setAttribute(\"value\",\"\"+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,\n\txmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\\-\\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}\n\t\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ha,\n\tIa);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);\n\tvar P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?E(\"197\"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=\n\tq)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E(\"198\")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}\n\tfunction Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};\n\tfunction Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E(\"96\",a);if(!Oa[c]){b.extractEvents?void 0:E(\"97\",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E(\"99\",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E(\"98\",d,a)}}}}\n\tfunction Qa(a,b,c){Ra[a]?E(\"100\",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E(\"101\"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E(\"102\",c):void 0,Ma[c]=d,b=!0)}b&&Na()}\n\tvar Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\n\tfunction $a(a,b){null==b?E(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;\n\tfunction cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};\n\tfunction ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?E(\"231\",b,typeof c):void 0;\n\treturn c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E(\"95\"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q=\"__reactInternalInstance$\"+nb,ob=\"__reactEventHandlers$\"+nb;\n\tfunction pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E(\"33\")}function rb(a){return a[ob]||null}\n\tvar sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\n\tfunction vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}\n\tfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}\n\tfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\n\tvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var S={_root:null,_startText:null,_fallbackText:null};\n\tfunction Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return\"value\"in S._root?S._root.value:S._root[Eb()]}\n\tvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\n\tfunction T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\n\tB(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\n\tdestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\n\tfunction Lb(a){a instanceof this?void 0:E(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&\"CompositionEvent\"in window,Wb=null;l.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\n\tif(Xb=l.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\n\tvar Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\n\tcaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\n\tfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Pb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\n\tfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\n\tvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=\n\te:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:E(\"194\");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\n\tfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\n\tfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\n\tfunction yc(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\n\tfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\n\tfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\n\tfunction Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Mc),Gc=Fc=null)}function Mc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\n\tfunction Nc(a,b,c){\"topFocus\"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Mc)):\"topBlur\"===a&&Lc()}function Oc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Pc(a,b){if(\"topClick\"===a)return Ic(b)}function $c(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\n\tvar ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\n\ta&&e.setAttribute(\"value\",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}\n\tbd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\n\tvar gd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===\n\tb)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\n\tfunction kd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E(\"188\"):void 0}\n\tfunction nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\n\tvoid 0:E(\"189\")}}c.alternate!==d?E(\"190\"):void 0}3!==c.tag?E(\"188\"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\n\tfunction pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var qd=[];\n\tfunction rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}\n\tfunction vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}\n\tvar xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\n\tvar zd={animationend:yd(\"Animation\",\"AnimationEnd\"),animationiteration:yd(\"Animation\",\"AnimationIteration\"),animationstart:yd(\"Animation\",\"AnimationStart\"),transitionend:yd(\"Transition\",\"TransitionEnd\")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),\"TransitionEvent\"in window||delete zd.transitionend.transition);\n\tfunction Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return\"\"}\n\tvar Dd={topAbort:\"abort\",topAnimationEnd:Cd(\"animationend\")||\"animationend\",topAnimationIteration:Cd(\"animationiteration\")||\"animationiteration\",topAnimationStart:Cd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\n\ttopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\n\ttopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\n\ttopTouchStart:\"touchstart\",topTransitionEnd:Cd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ed={},Fd=0,Gd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\n\tfunction Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\n\tvar Ld=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Nd=null,Od=null,Pd=null,Qd=!1;\n\tfunction Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;\"selectionStart\"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type=\"select\",a.target=Nd,Ab(a),a)}\n\tvar Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case \"topBlur\":Pd=Od=Nd=null;break;case \"topMouseDown\":Qd=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Qd=!1,Rd(c,d);case \"topSelectionChange\":if(Ld)break;\n\tcase \"topKeyDown\":case \"topKeyUp\":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});\n\tfunction Wd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\n\tvar Xd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Yd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n\t116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}\n\tbd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Wd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Yd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===a.type?Wd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\n\ta.type?Wd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});\n\tfunction ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};\n\t\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\n\ta.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};de[a]=c;ee[b]=c});\n\tvar fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Wd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Zd;break;case \"topBlur\":case \"topFocus\":a=Vd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=fd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\n\t$d;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=ae;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Td;break;case \"topTransitionEnd\":a=be;break;case \"topScroll\":a=bd;break;case \"topWheel\":a=ce;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\n\tWa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}\n\tfunction me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}\n\tfunction oe(a,b,c){null!=ie.cursor?E(\"168\"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E(\"108\",jd(a)||\"Unknown\",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}\n\tfunction re(a,b){var c=a.stateNode;c?void 0:E(\"169\");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}\n\tfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\n\tfunction se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\n\tfunction te(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):E(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\n\tfunction ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;\n\tfunction Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){\"function\"===typeof ze&&ze(a)}function Ee(a){\"function\"===typeof Ae&&Ae(a)}\n\tfunction Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\n\tfunction He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\n\tfunction Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===\n\tc.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}\n\tfunction Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?E(\"191\",e):void 0;e.call(b)}}\n\tfunction Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\n\ta(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\n\tb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E(\"158\");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n\t4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E(\"159\"):void 0);var u=g.context,z=ke(b);z=me(b,z);\"function\"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\n\ttypeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\n\th===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe=\"function\"===typeof Symbol&&Symbol[\"for\"],Re=Qe?Symbol[\"for\"](\"react.element\"):60103,Se=Qe?Symbol[\"for\"](\"react.call\"):60104,Te=Qe?Symbol[\"for\"](\"react.return\"):60105,Ue=Qe?Symbol[\"for\"](\"react.portal\"):60106,Ve=Qe?Symbol[\"for\"](\"react.fragment\"):60107,We=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction Xe(a){if(null===a||\"undefined\"===typeof a)return null;a=We&&a[We]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ye=Array.isArray;\n\tfunction Ze(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E(\"110\"):void 0,d=b.stateNode);d?void 0:E(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?E(\"148\"):void 0;b._owner?void 0:E(\"149\",c)}return c}\n\tfunction $e(a,b){\"textarea\"!==a.type&&E(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\n\tfunction af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n\t2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d[\"return\"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d[\"return\"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);\n\tb[\"return\"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=e(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,\n\td,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function z(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ve(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c[\"return\"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b[\"return\"]=a,b;case Te:return c=xe(b,a.internalContextTag,\n\tc),c.type=b.value,c[\"return\"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b[\"return\"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===\n\te?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=\n\ta.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=\n\td(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n[\"delete\"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);\"function\"!==typeof h?E(\"150\"):void 0;m=h.call(m);null==m?E(\"151\"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,\n\tg,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n[\"delete\"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);\n\tvar m=\"object\"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d[\"return\"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d[\"return\"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h[\"return\"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===\n\tm)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d[\"return\"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d[\"return\"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===\n\tf.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d[\"return\"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E(\"152\",h.displayName||\n\th.name||\"Component\")}return c(a,d)}}var bf=af(!0),cf=af(!1);\n\tfunction df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,\n\tb.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E(\"153\"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,\n\tG=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E(\"155\"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=\n\t1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E(\"153\"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),\n\te=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E(\"154\"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),\n\t2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;\n\tcase 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E(\"156\")}},beginFailedWork:function(a,b,\n\tc){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\n\tfunction ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E(\"235\"):E(\"236\");\n\treturn{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=\n\tk(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E(\"166\"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child[\"return\"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&\n\t(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if(\"string\"!==typeof m)return null===b.stateNode?E(\"166\"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E(\"165\");b.tag=8;A=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E(\"247\");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===\n\tp[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E(\"167\");default:E(\"156\")}}}}\n\tfunction ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){\"function\"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\n\tb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?E(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);\n\telse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E(\"235\"):E(\"236\"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,\n\tN=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}E(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\n\tnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\n\ta)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\n\tc,c);break;case 3:break;default:E(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,\n\tb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};\n\tfunction hf(a){function b(a){a===gf?E(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);\n\td=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}\n\tfunction jf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\n\ta=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E(\"175\")},prepareToHydrateHostTextInstance:function(){E(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=\n\tk(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\n\ty)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}\n\tfunction kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E(\"177\"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,\n\tt);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E(\"178\"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R[\"delete\"](e))),null==f?E(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\n\tbreak;case 3:null===ca&&(ca=f.error);break;default:E(\"157\")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E(\"178\"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;\"function\"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\n\te.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\n\tif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E(\"243\"):void 0;ja=!0;a.isReadyForCommit=\n\t!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E(\"183\"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g[\"return\"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=\n\tnull;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\n\tg._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m=\"\\n    in \"+(m||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:m=\"\"}h+=m;g=g[\"return\"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&\n\tVc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||\n\ta.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E(\"185\");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?\n\tSb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a[\"return\"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E(\"244\"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,\n\tO.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=\n\tnull,Ub=!1,a;}function m(a,c){Fa?E(\"245\"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E(\"246\"):\n\tvoid 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,\n\tPe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=\n\tka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E(\"187\"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}\n\tfunction lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=\n\tc._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E(\"170\");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:E(\"171\")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\n\tnextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},\n\ta,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf[\"default\"]?nf[\"default\"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var qf=\"object\"===typeof performance&&\"function\"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};\n\tvar sf=void 0,tf=void 0;\n\tif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=\n\ta)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,\"*\"))};sf=function(a,b){uf=a;null!=b&&\"number\"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},\n\ttf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Ff={},Gf={};\n\tfunction Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}\n\tfunction If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Kf(a,b,va(b,c)?c:null)}\n\tfunction Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\n\tfunction Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\n\tfunction Nf(a,b){b=b.checked;null!=b&&If(a,\"checked\",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\n\tfunction Pf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Qf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\n\tfunction Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\n\tfunction Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E(\"91\"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\n\tfunction Wf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\n\tfunction Zf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function $f(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Zf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\n\tvar ag=void 0,bg=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||\"innerHTML\"in a)a.innerHTML=b;else{ag=ag||document.createElement(\"div\");ag.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\n\tfunction cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\n\tvar dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\n\tstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});\n\tfunction fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\n\tfunction hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:E(\"61\")),null!=b.style&&\"object\"!==typeof b.style?E(\"62\",c()):void 0)}\n\tfunction ig(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns(\"\");\n\tfunction lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?wd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(wd(\"topFocus\",\"focus\",a),wd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&wd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(yc(\"close\",!0)&&wd(\"topClose\",\"close\",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}\n\tvar mg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\n\ttopWaiting:\"waiting\"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\n\tfunction pg(a,b,c,d){var e=ig(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Mf(a,c);f=Lf(a,c);U(\"topInvalid\",\"invalid\",a);\n\tlg(d,\"onChange\");break;case \"option\":f=Rf(a,c);break;case \"select\":Tf(a,c);f=B({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;case \"textarea\":Vf(a,c);f=Uf(a,c);U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?fg(a,k,kg):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&cg(a,k):\"number\"===typeof k&&cg(a,\n\t\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\n\tC)}}\n\tfunction sg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Lf(a,c);d=Lf(a,d);f=[];break;case \"option\":c=Rf(a,c);d=Rf(a,d);f=[];break;case \"select\":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case \"textarea\":c=Uf(a,c);d=Uf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\n\t\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===\n\tg?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f}\n\tfunction tg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?fg(a,h,kg):\"dangerouslySetInnerHTML\"===g?bg(a,h):\"children\"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case \"input\":Of(a,e);break;case \"textarea\":Wf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,\n\t!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\n\tfunction ug(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":Mf(a,c);U(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"select\":Tf(a,c);\n\tU(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"textarea\":Vf(a,c),U(\"topInvalid\",\"invalid\",a),lg(e,\"onChange\")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n\t(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}\n\tvar wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Of(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\n\tc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E(\"90\");Cc(d);Of(d,e)}}}break;case \"textarea\":Wf(a,c);break;case \"select\":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\n\tfunction Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\n\tvar Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\n\tif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:\n\t{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\n\td&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\n\ta.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\n\ttypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\n\tb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\n\tb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\n\tdidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;\n\tfunction Pg(a,b,c,d,e){Ng(c)?void 0:E(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E(\"200\");return pf(a,b,null,c)}\n\tfunction Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\n\tvar Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?E(\"188\"):E(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E(\"38\"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:\n\tE(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};\n\tZ.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:\"16.2.0\",rendererPackageName:\"react-dom\"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug[\"default\"]?Ug[\"default\"]:Ug;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/** @license React v16.2.0\n\t * react.production.min.js\n\t *\n\t * Copyright (c) 2013-present, Facebook, Inc.\n\t *\n\t * This source code is licensed under the MIT license found in the\n\t * LICENSE file in the root directory of this source tree.\n\t */\n\t\n\t'use strict';var m=__webpack_require__(7),n=__webpack_require__(6),p=__webpack_require__(5),q=\"function\"===typeof Symbol&&Symbol[\"for\"],r=q?Symbol[\"for\"](\"react.element\"):60103,t=q?Symbol[\"for\"](\"react.call\"):60104,u=q?Symbol[\"for\"](\"react.return\"):60105,v=q?Symbol[\"for\"](\"react.portal\"):60106,w=q?Symbol[\"for\"](\"react.fragment\"):60107,x=\"function\"===typeof Symbol&&Symbol.iterator;\n\tfunction y(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\n\tvar z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?y(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\n\tfunction B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\n\tfunction J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===r}\n\tfunction escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}\n\tfunction P(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+Q(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=x&&a[x]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=\n\tf.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else\"object\"===d&&(e=\"\"+a,y(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}\n\tfunction S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(L,\"$\\x26/\")+\"/\")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(L,\"$\\x26/\")+\"/\");b=N(b,g,c,d);null==a||P(a,\"\",S,b);O(b)}\n\tvar U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,\"\",R,b);O(b)},count:function(a){return null==a?0:P(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y(\"143\");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),\n\td=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},\n\tisValidElement:K,version:\"16.2.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W[\"default\"]?W[\"default\"]:W;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(THREE) {\n\t\tvar MOUSE = THREE.MOUSE\n\t\tif (!MOUSE)\n\t\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\t\n\t\t/**\n\t\t * @author qiao / https://github.com/qiao\n\t\t * @author mrdoob / http://mrdoob.com\n\t\t * @author alteredq / http://alteredqualia.com/\n\t\t * @author WestLangley / http://github.com/WestLangley\n\t\t * @author erich666 / http://erichaines.com\n\t\t */\n\t\t/*global THREE, console */\n\t\n\t\tfunction OrbitConstraint ( object ) {\n\t\n\t\t\tthis.object = object;\n\t\n\t\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t\t// and where it pans with respect to.\n\t\t\tthis.target = new THREE.Vector3();\n\t\n\t\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\t\tthis.minDistance = 0;\n\t\t\tthis.maxDistance = Infinity;\n\t\n\t\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\t\tthis.minZoom = 0;\n\t\t\tthis.maxZoom = Infinity;\n\t\n\t\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t\t// Range is 0 to Math.PI radians.\n\t\t\tthis.minPolarAngle = 0; // radians\n\t\t\tthis.maxPolarAngle = Math.PI; // radians\n\t\n\t\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\t\tthis.maxAzimuthAngle = Infinity; // radians\n\t\n\t\t\t// Set to true to enable damping (inertia)\n\t\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.enableDamping = false;\n\t\t\tthis.dampingFactor = 0.25;\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar EPS = 0.000001;\n\t\n\t\t\t// Current position in spherical coordinate system.\n\t\t\tvar theta;\n\t\t\tvar phi;\n\t\n\t\t\t// Pending changes\n\t\t\tvar phiDelta = 0;\n\t\t\tvar thetaDelta = 0;\n\t\t\tvar scale = 1;\n\t\t\tvar panOffset = new THREE.Vector3();\n\t\t\tvar zoomChanged = false;\n\t\n\t\t\t// API\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn phi;\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn theta;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateLeft = function ( angle ) {\n\t\n\t\t\t\tthetaDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\tthis.rotateUp = function ( angle ) {\n\t\n\t\t\t\tphiDelta -= angle;\n\t\n\t\t\t};\n\t\n\t\t\t// pass in distance in world space to move left\n\t\t\tthis.panLeft = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panLeft ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get X column of matrix\n\t\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\t\tv.multiplyScalar( - distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in distance in world space to move up\n\t\t\tthis.panUp = function() {\n\t\n\t\t\t\tvar v = new THREE.Vector3();\n\t\n\t\t\t\treturn function panUp ( distance ) {\n\t\n\t\t\t\t\tvar te = this.object.matrix.elements;\n\t\n\t\t\t\t\t// get Y column of matrix\n\t\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\t\tv.multiplyScalar( distance );\n\t\n\t\t\t\t\tpanOffset.add( v );\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\t// perspective\n\t\t\t\t\tvar position = scope.object.position;\n\t\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\t\tvar targetDistance = offset.length();\n\t\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\t\n\t\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\t// orthographic\n\t\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyIn = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale /= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.dollyOut = function ( dollyScale ) {\n\t\n\t\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\t\n\t\t\t\t\tscale *= dollyScale;\n\t\n\t\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\t\n\t\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\t\n\t\t\t\t} else {\n\t\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.update = function() {\n\t\n\t\t\t\tvar offset = new THREE.Vector3();\n\t\n\t\t\t\t// so camera.up is the orbit axis\n\t\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\t\tvar quatInverse = quat.clone().inverse();\n\t\n\t\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\t\n\t\t\t\treturn function () {\n\t\n\t\t\t\t\tvar position = this.object.position;\n\t\n\t\t\t\t\toffset.copy( position ).sub( this.target );\n\t\n\t\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quat );\n\t\n\t\t\t\t\t// angle from z-axis around y-axis\n\t\n\t\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\t\n\t\t\t\t\t// angle from y-axis\n\t\n\t\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\t\n\t\t\t\t\ttheta += thetaDelta;\n\t\t\t\t\tphi += phiDelta;\n\t\n\t\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\t\n\t\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\t\n\t\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\t\n\t\t\t\t\tvar radius = offset.length() * scale;\n\t\n\t\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\n\t\t\t\t\t// move target to panned location\n\t\t\t\t\tthis.target.add( panOffset );\n\t\n\t\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\t\n\t\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\t\toffset.applyQuaternion( quatInverse );\n\t\n\t\t\t\t\tposition.copy( this.target ).add( offset );\n\t\n\t\t\t\t\tthis.object.lookAt( this.target );\n\t\n\t\t\t\t\tif ( this.enableDamping === true ) {\n\t\n\t\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\t\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\t\tphiDelta = 0;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tscale = 1;\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\t\n\t\t\t\t\t// update condition is:\n\t\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\t\n\t\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\t\n\t\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\t\tzoomChanged = false;\n\t\n\t\t\t\t\t\treturn true;\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn false;\n\t\n\t\t\t\t};\n\t\n\t\t\t}();\n\t\n\t\t};\n\t\n\t\n\t\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t\t// supported.\n\t\t//\n\t\t//    Orbit - left mouse / touch: one finger move\n\t\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\t\n\t\tfunction OrbitControls ( object, domElement ) {\n\t\n\t\t\tvar constraint = new OrbitConstraint( object );\n\t\n\t\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\t\n\t\t\t// API\n\t\n\t\t\tObject.defineProperty( this, 'constraint', {\n\t\n\t\t\t\tget: function() {\n\t\n\t\t\t\t\treturn constraint;\n\t\n\t\t\t\t}\n\t\n\t\t\t} );\n\t\n\t\t\tthis.getPolarAngle = function () {\n\t\n\t\t\t\treturn constraint.getPolarAngle();\n\t\n\t\t\t};\n\t\n\t\t\tthis.getAzimuthalAngle = function () {\n\t\n\t\t\t\treturn constraint.getAzimuthalAngle();\n\t\n\t\t\t};\n\t\n\t\t\t// Set to false to disable this control\n\t\t\tthis.enabled = true;\n\t\n\t\t\t// center is old, deprecated; use \"target\" instead\n\t\t\tthis.center = this.target;\n\t\n\t\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t\t// backwards compatibility.\n\t\t\t// Set to false to disable zooming\n\t\t\tthis.enableZoom = true;\n\t\t\tthis.zoomSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable rotating\n\t\t\tthis.enableRotate = true;\n\t\t\tthis.rotateSpeed = 1.0;\n\t\n\t\t\t// Set to false to disable panning\n\t\t\tthis.enablePan = true;\n\t\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\n\t\t\t// Set to true to automatically rotate around the target\n\t\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\t\tthis.autoRotate = false;\n\t\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\t\n\t\t\t// Set to false to disable use of the keys\n\t\t\tthis.enableKeys = true;\n\t\n\t\t\t// The four arrow keys\n\t\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\t\n\t\t\t// Mouse buttons\n\t\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\t\n\t\t\t////////////\n\t\t\t// internals\n\t\n\t\t\tvar scope = this;\n\t\n\t\t\tvar rotateStart = new THREE.Vector2();\n\t\t\tvar rotateEnd = new THREE.Vector2();\n\t\t\tvar rotateDelta = new THREE.Vector2();\n\t\n\t\t\tvar panStart = new THREE.Vector2();\n\t\t\tvar panEnd = new THREE.Vector2();\n\t\t\tvar panDelta = new THREE.Vector2();\n\t\n\t\t\tvar dollyStart = new THREE.Vector2();\n\t\t\tvar dollyEnd = new THREE.Vector2();\n\t\t\tvar dollyDelta = new THREE.Vector2();\n\t\n\t\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\t\n\t\t\tvar state = STATE.NONE;\n\t\n\t\t\t// for reset\n\t\n\t\t\tthis.target0 = this.target.clone();\n\t\t\tthis.position0 = this.object.position.clone();\n\t\t\tthis.zoom0 = this.object.zoom;\n\t\n\t\t\t// events\n\t\n\t\t\tvar changeEvent = { type: 'change' };\n\t\t\tvar startEvent = { type: 'start' };\n\t\t\tvar endEvent = { type: 'end' };\n\t\n\t\t\t// pass in x,y of change desired in pixel space,\n\t\t\t// right and down are positive\n\t\t\tfunction pan( deltaX, deltaY ) {\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\t\n\t\t\t}\n\t\n\t\t\tthis.update = function () {\n\t\n\t\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\t\n\t\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( constraint.update() === true ) {\n\t\n\t\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t};\n\t\n\t\t\tthis.reset = function () {\n\t\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\tthis.target.copy( this.target0 );\n\t\t\t\tthis.object.position.copy( this.position0 );\n\t\t\t\tthis.object.zoom = this.zoom0;\n\t\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\t\n\t\t\t\tthis.update();\n\t\n\t\t\t};\n\t\n\t\t\tfunction getAutoRotationAngle() {\n\t\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\t\n\t\t\t}\n\t\n\t\t\tfunction getZoomScale() {\n\t\n\t\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\tstate = STATE.ROTATE;\n\t\n\t\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tstate = STATE.DOLLY;\n\t\n\t\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tstate = STATE.PAN;\n\t\n\t\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) {\n\t\n\t\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\t\tscope.dispatchEvent( startEvent );\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseMove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tif ( state === STATE.ROTATE ) {\n\t\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t} else if ( state === STATE.DOLLY ) {\n\t\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t}\n\t\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t} else if ( state === STATE.PAN ) {\n\t\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.update();\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseUp( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction onMouseWheel( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar delta = 0;\n\t\n\t\t\t\tif ( event.wheelDelta !== undefined ) {\n\t\n\t\t\t\t\t// WebKit / Opera / Explorer 9\n\t\n\t\t\t\t\tdelta = event.wheelDelta;\n\t\n\t\t\t\t} else if ( event.detail !== undefined ) {\n\t\n\t\t\t\t\t// Firefox\n\t\n\t\t\t\t\tdelta = - event.detail;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( delta > 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t} else if ( delta < 0 ) {\n\t\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t}\n\t\n\t\t\t\tscope.update();\n\t\t\t\tscope.dispatchEvent( startEvent );\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction onKeyDown( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\t\n\t\t\t\tswitch ( event.keyCode ) {\n\t\n\t\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchstart( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\t\n\t\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\n\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\t\n\t\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchmove( event ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tevent.preventDefault();\n\t\t\t\tevent.stopPropagation();\n\t\n\t\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\t\n\t\t\t\tswitch ( event.touches.length ) {\n\t\n\t\t\t\t\tcase 1: // one-fingered touch: rotate\n\t\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\t\n\t\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\t\n\t\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\t\n\t\t\t\t\t\trotateStart.copy( rotateEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 2: // two-fingered touch: dolly\n\t\n\t\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\t\n\t\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\n\t\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\t\n\t\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\t\n\t\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\t\n\t\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\t\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdollyStart.copy( dollyEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tcase 3: // three-fingered touch: pan\n\t\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\t\n\t\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\n\t\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\t\n\t\t\t\t\t\tpanStart.copy( panEnd );\n\t\n\t\t\t\t\t\tscope.update();\n\t\t\t\t\t\tbreak;\n\t\n\t\t\t\t\tdefault:\n\t\n\t\t\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t\tfunction touchend( /* event */ ) {\n\t\n\t\t\t\tif ( scope.enabled === false ) return;\n\t\n\t\t\t\tscope.dispatchEvent( endEvent );\n\t\t\t\tstate = STATE.NONE;\n\t\n\t\t\t}\n\t\n\t\t\tfunction contextmenu( event ) {\n\t\n\t\t\t\tevent.preventDefault();\n\t\n\t\t\t}\n\t\n\t\t\tthis.dispose = function() {\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\n\t\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t}\n\t\n\t\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\t\n\t\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\t\n\t\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\t\n\t\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\t\n\t\t\t// force an update at start\n\t\t\tthis.update();\n\t\n\t\t};\n\t\n\t\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\t\tOrbitControls.prototype.constructor = OrbitControls;\n\t\n\t\tObject.defineProperties( OrbitControls.prototype, {\n\t\n\t\t\tobject: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.object;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\ttarget: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.target;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\t\tthis.constraint.target.copy( value );\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxDistance : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxDistance;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxDistance = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxZoom : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxZoom = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxPolarAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxPolarAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxPolarAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tminAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.minAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tmaxAzimuthAngle : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tenableDamping : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.enableDamping = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\t// backward compatibility\n\t\n\t\t\tnoZoom: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\treturn ! this.enableZoom;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\t\tthis.enableZoom = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoRotate: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\treturn ! this.enableRotate;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\t\tthis.enableRotate = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoPan: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\treturn ! this.enablePan;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\t\tthis.enablePan = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tnoKeys: {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\treturn ! this.enableKeys;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\t\tthis.enableKeys = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tstaticMoving : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\treturn ! this.constraint.enableDamping;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\t\tthis.constraint.enableDamping = ! value;\n\t\n\t\t\t\t}\n\t\n\t\t\t},\n\t\n\t\t\tdynamicDampingFactor : {\n\t\n\t\t\t\tget: function () {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\treturn this.constraint.dampingFactor;\n\t\n\t\t\t\t},\n\t\n\t\t\t\tset: function ( value ) {\n\t\n\t\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\t\tthis.constraint.dampingFactor = value;\n\t\n\t\t\t\t}\n\t\n\t\t\t}\n\t\n\t\t} );\n\t\n\t\treturn OrbitControls;\n\t}\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;var self = self || {};// File:src/Three.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tvar THREE = { REVISION: '72' };\r\n\t\r\n\t//\r\n\t\r\n\tif ( true ) {\r\n\t\r\n\t\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (THREE), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t\r\n\t} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\t\r\n\t\t\tmodule.exports = THREE;\r\n\t\r\n\t}\r\n\t\r\n\t\r\n\t// polyfills\r\n\t\r\n\tif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\t\r\n\t\t// Missing in Android stock browser.\r\n\t\r\n\t\t( function () {\r\n\t\r\n\t\t\tvar lastTime = 0;\r\n\t\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\t\r\n\t\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\t\r\n\t\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\t\tvar id = self.setTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tcallback( currTime + timeToCall );\r\n\t\r\n\t\t\t\t\t}, timeToCall );\r\n\t\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\t\treturn id;\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\t\r\n\t\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\t\r\n\t\t\t\t\tself.clearTimeout( id );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}() );\r\n\t\r\n\t}\r\n\t\r\n\tif ( Math.sign === undefined ) {\r\n\t\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\t\r\n\t\tMath.sign = function ( x ) {\r\n\t\r\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\t\r\n\t\t};\r\n\t\r\n\t}\r\n\t\r\n\tif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\t\r\n\t\t// Missing in IE9-11.\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\t\r\n\t\tObject.defineProperty( Function.prototype, 'name', {\r\n\t\r\n\t\t\tget: function () {\r\n\t\r\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} );\r\n\t\r\n\t}\r\n\t\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\t\r\n\tTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\t\r\n\t// GL STATE CONSTANTS\r\n\t\r\n\tTHREE.CullFaceNone = 0;\r\n\tTHREE.CullFaceBack = 1;\r\n\tTHREE.CullFaceFront = 2;\r\n\tTHREE.CullFaceFrontBack = 3;\r\n\t\r\n\tTHREE.FrontFaceDirectionCW = 0;\r\n\tTHREE.FrontFaceDirectionCCW = 1;\r\n\t\r\n\t// SHADOWING TYPES\r\n\t\r\n\tTHREE.BasicShadowMap = 0;\r\n\tTHREE.PCFShadowMap = 1;\r\n\tTHREE.PCFSoftShadowMap = 2;\r\n\t\r\n\t// MATERIAL CONSTANTS\r\n\t\r\n\t// side\r\n\t\r\n\tTHREE.FrontSide = 0;\r\n\tTHREE.BackSide = 1;\r\n\tTHREE.DoubleSide = 2;\r\n\t\r\n\t// shading\r\n\t\r\n\tTHREE.FlatShading = 1;\r\n\tTHREE.SmoothShading = 2;\r\n\t\r\n\t// colors\r\n\t\r\n\tTHREE.NoColors = 0;\r\n\tTHREE.FaceColors = 1;\r\n\tTHREE.VertexColors = 2;\r\n\t\r\n\t// blending modes\r\n\t\r\n\tTHREE.NoBlending = 0;\r\n\tTHREE.NormalBlending = 1;\r\n\tTHREE.AdditiveBlending = 2;\r\n\tTHREE.SubtractiveBlending = 3;\r\n\tTHREE.MultiplyBlending = 4;\r\n\tTHREE.CustomBlending = 5;\r\n\t\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\t\r\n\tTHREE.AddEquation = 100;\r\n\tTHREE.SubtractEquation = 101;\r\n\tTHREE.ReverseSubtractEquation = 102;\r\n\tTHREE.MinEquation = 103;\r\n\tTHREE.MaxEquation = 104;\r\n\t\r\n\t// custom blending destination factors\r\n\t\r\n\tTHREE.ZeroFactor = 200;\r\n\tTHREE.OneFactor = 201;\r\n\tTHREE.SrcColorFactor = 202;\r\n\tTHREE.OneMinusSrcColorFactor = 203;\r\n\tTHREE.SrcAlphaFactor = 204;\r\n\tTHREE.OneMinusSrcAlphaFactor = 205;\r\n\tTHREE.DstAlphaFactor = 206;\r\n\tTHREE.OneMinusDstAlphaFactor = 207;\r\n\t\r\n\t// custom blending source factors\r\n\t\r\n\t//THREE.ZeroFactor = 200;\r\n\t//THREE.OneFactor = 201;\r\n\t//THREE.SrcAlphaFactor = 204;\r\n\t//THREE.OneMinusSrcAlphaFactor = 205;\r\n\t//THREE.DstAlphaFactor = 206;\r\n\t//THREE.OneMinusDstAlphaFactor = 207;\r\n\tTHREE.DstColorFactor = 208;\r\n\tTHREE.OneMinusDstColorFactor = 209;\r\n\tTHREE.SrcAlphaSaturateFactor = 210;\r\n\t\r\n\t// depth modes\r\n\t\r\n\tTHREE.NeverDepth = 0;\r\n\tTHREE.AlwaysDepth = 1;\r\n\tTHREE.LessDepth = 2;\r\n\tTHREE.LessEqualDepth = 3;\r\n\tTHREE.EqualDepth = 4;\r\n\tTHREE.GreaterEqualDepth = 5;\r\n\tTHREE.GreaterDepth = 6;\r\n\tTHREE.NotEqualDepth = 7;\r\n\t\r\n\t\r\n\t// TEXTURE CONSTANTS\r\n\t\r\n\tTHREE.MultiplyOperation = 0;\r\n\tTHREE.MixOperation = 1;\r\n\tTHREE.AddOperation = 2;\r\n\t\r\n\t// Mapping modes\r\n\t\r\n\tTHREE.UVMapping = 300;\r\n\t\r\n\tTHREE.CubeReflectionMapping = 301;\r\n\tTHREE.CubeRefractionMapping = 302;\r\n\t\r\n\tTHREE.EquirectangularReflectionMapping = 303;\r\n\tTHREE.EquirectangularRefractionMapping = 304;\r\n\t\r\n\tTHREE.SphericalReflectionMapping = 305;\r\n\t\r\n\t// Wrapping modes\r\n\t\r\n\tTHREE.RepeatWrapping = 1000;\r\n\tTHREE.ClampToEdgeWrapping = 1001;\r\n\tTHREE.MirroredRepeatWrapping = 1002;\r\n\t\r\n\t// Filters\r\n\t\r\n\tTHREE.NearestFilter = 1003;\r\n\tTHREE.NearestMipMapNearestFilter = 1004;\r\n\tTHREE.NearestMipMapLinearFilter = 1005;\r\n\tTHREE.LinearFilter = 1006;\r\n\tTHREE.LinearMipMapNearestFilter = 1007;\r\n\tTHREE.LinearMipMapLinearFilter = 1008;\r\n\t\r\n\t// Data types\r\n\t\r\n\tTHREE.UnsignedByteType = 1009;\r\n\tTHREE.ByteType = 1010;\r\n\tTHREE.ShortType = 1011;\r\n\tTHREE.UnsignedShortType = 1012;\r\n\tTHREE.IntType = 1013;\r\n\tTHREE.UnsignedIntType = 1014;\r\n\tTHREE.FloatType = 1015;\r\n\tTHREE.HalfFloatType = 1025;\r\n\t\r\n\t// Pixel types\r\n\t\r\n\t//THREE.UnsignedByteType = 1009;\r\n\tTHREE.UnsignedShort4444Type = 1016;\r\n\tTHREE.UnsignedShort5551Type = 1017;\r\n\tTHREE.UnsignedShort565Type = 1018;\r\n\t\r\n\t// Pixel formats\r\n\t\r\n\tTHREE.AlphaFormat = 1019;\r\n\tTHREE.RGBFormat = 1020;\r\n\tTHREE.RGBAFormat = 1021;\r\n\tTHREE.LuminanceFormat = 1022;\r\n\tTHREE.LuminanceAlphaFormat = 1023;\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\t\r\n\t// DDS / ST3C Compressed texture formats\r\n\t\r\n\tTHREE.RGB_S3TC_DXT1_Format = 2001;\r\n\tTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\n\tTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\n\tTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\t\r\n\t\r\n\t// PVRTC compressed texture formats\r\n\t\r\n\tTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\n\tTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\n\tTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\n\tTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\t\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.Projector = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\t\r\n\t\tthis.projectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\t\tvector.project( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.unprojectVector = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\t\tvector.unproject( camera );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.pickingRay = function ( vector, camera ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasRenderer = function () {\r\n\t\r\n\t\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\t\r\n\t\tthis.domElement = document.createElement( 'canvas' );\r\n\t\tthis.clear = function () {};\r\n\t\tthis.render = function () {};\r\n\t\tthis.setClearColor = function () {};\r\n\t\tthis.setSize = function () {};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Color.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Color = function ( color ) {\r\n\t\r\n\t\tif ( arguments.length === 3 ) {\r\n\t\r\n\t\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.set( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Color.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Color,\r\n\t\r\n\t\tr: 1, g: 1, b: 1,\r\n\t\r\n\t\tset: function ( value ) {\r\n\t\r\n\t\t\tif ( value instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\tthis.copy( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'number' ) {\r\n\t\r\n\t\t\t\tthis.setHex( value );\r\n\t\r\n\t\t\t} else if ( typeof value === 'string' ) {\r\n\t\r\n\t\t\t\tthis.setStyle( value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHex: function ( hex ) {\r\n\t\r\n\t\t\thex = Math.floor( hex );\r\n\t\r\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\t\tthis.b = ( hex & 255 ) / 255;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRGB: function ( r, g, b ) {\r\n\t\r\n\t\t\tthis.r = r;\r\n\t\t\tthis.g = g;\r\n\t\t\tthis.b = b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetHSL: function () {\r\n\t\r\n\t\t\tfunction hue2rgb ( p, q, t ) {\r\n\t\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn function ( h, s, l ) {\r\n\t\r\n\t\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\t\r\n\t\t\t\tif ( s === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.r = this.g = this.b = l;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\t\tvar q = ( 2 * l ) - p;\r\n\t\r\n\t\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetStyle: function ( style ) {\r\n\t\r\n\t\t\tvar parseAlpha = function ( strAlpha ) {\r\n\t\r\n\t\t\t\tvar alpha = parseFloat( strAlpha );\r\n\t\r\n\t\t\t\tif ( alpha < 1 ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn alpha;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar m;\r\n\t\r\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// rgb / hsl\r\n\t\r\n\t\t\t\tvar color;\r\n\t\t\t\tvar name = m[ 1 ];\r\n\t\t\t\tvar components = m[ 2 ];\r\n\t\r\n\t\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\t\tcase 'rgb':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'rgba':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsl':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'hsla':\r\n\t\r\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\t\r\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\t\r\n\t\t\t\t// hex color\r\n\t\r\n\t\t\t\tvar hex = m[ 1 ];\r\n\t\t\t\tvar size = hex.length;\r\n\t\r\n\t\t\t\tif ( size === 3 ) {\r\n\t\r\n\t\t\t\t\t// #ff0\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t} else if ( size === 6 ) {\r\n\t\r\n\t\t\t\t\t// #ff0000\r\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\t\r\n\t\t\t\t\treturn this;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( style && style.length > 0 ) {\r\n\t\r\n\t\t\t\t// color keywords\r\n\t\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\t\r\n\t\t\t\tif ( hex !== undefined ) {\r\n\t\r\n\t\t\t\t\t// red\r\n\t\t\t\t\tthis.setHex( hex );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// unknown color\r\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( color ) {\r\n\t\r\n\t\t\tthis.r = color.r;\r\n\t\t\tthis.g = color.g;\r\n\t\t\tthis.b = color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\t\r\n\t\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\t\r\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\t\r\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertGammaToLinear: function () {\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tthis.r = r * r;\r\n\t\t\tthis.g = g * g;\r\n\t\t\tthis.b = b * b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconvertLinearToGamma: function () {\r\n\t\r\n\t\t\tthis.r = Math.sqrt( this.r );\r\n\t\t\tthis.g = Math.sqrt( this.g );\r\n\t\t\tthis.b = Math.sqrt( this.b );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHex: function () {\r\n\t\r\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHexString: function () {\r\n\t\r\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetHSL: function ( optionalTarget ) {\r\n\t\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\r\n\t\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\t\r\n\t\t\tvar r = this.r, g = this.g, b = this.b;\r\n\t\r\n\t\t\tvar max = Math.max( r, g, b );\r\n\t\t\tvar min = Math.min( r, g, b );\r\n\t\r\n\t\t\tvar hue, saturation;\r\n\t\t\tvar lightness = ( min + max ) / 2.0;\r\n\t\r\n\t\t\tif ( min === max ) {\r\n\t\r\n\t\t\t\thue = 0;\r\n\t\t\t\tsaturation = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar delta = max - min;\r\n\t\r\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\t\r\n\t\t\t\tswitch ( max ) {\r\n\t\r\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\thue /= 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\thsl.h = hue;\r\n\t\t\thsl.s = saturation;\r\n\t\t\thsl.l = lightness;\r\n\t\r\n\t\t\treturn hsl;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetStyle: function () {\r\n\t\r\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\t\r\n\t\t},\r\n\t\r\n\t\toffsetHSL: function ( h, s, l ) {\r\n\t\r\n\t\t\tvar hsl = this.getHSL();\r\n\t\r\n\t\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\t\r\n\t\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( color ) {\r\n\t\r\n\t\t\tthis.r += color.r;\r\n\t\t\tthis.g += color.g;\r\n\t\t\tthis.b += color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddColors: function ( color1, color2 ) {\r\n\t\r\n\t\t\tthis.r = color1.r + color2.r;\r\n\t\t\tthis.g = color1.g + color2.g;\r\n\t\t\tthis.b = color1.b + color2.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r += s;\r\n\t\t\tthis.g += s;\r\n\t\t\tthis.b += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( color ) {\r\n\t\r\n\t\t\tthis.r *= color.r;\r\n\t\t\tthis.g *= color.g;\r\n\t\t\tthis.b *= color.b;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.r *= s;\r\n\t\t\tthis.g *= s;\r\n\t\t\tthis.b *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( color, alpha ) {\r\n\t\r\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( c ) {\r\n\t\r\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.r = array[ 0 ];\r\n\t\t\tthis.g = array[ 1 ];\r\n\t\t\tthis.b = array[ 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.r;\r\n\t\t\tarray[ offset + 1 ] = this.g;\r\n\t\t\tarray[ offset + 2 ] = this.b;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\t\r\n\t// File:src/math/Quaternion.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Quaternion = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Quaternion,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget w () {\r\n\t\r\n\t\t\treturn this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset w ( value ) {\r\n\t\r\n\t\t\tthis._w = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._w = w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( quaternion ) {\r\n\t\r\n\t\t\tthis._x = quaternion.x;\r\n\t\t\tthis._y = quaternion.y;\r\n\t\t\tthis._z = quaternion.z;\r\n\t\t\tthis._w = quaternion.w;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromEuler: function ( euler, update ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t\t//\tcontent/SpinCalc.m\r\n\t\r\n\t\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\t\r\n\t\t\tvar order = euler.order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\t\r\n\t\t\tthis._x = axis.x * s;\r\n\t\t\tthis._y = axis.y * s;\r\n\t\t\tthis._z = axis.z * s;\r\n\t\t\tthis._w = Math.cos( halfAngle );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\t\r\n\t\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\t\ts;\r\n\t\r\n\t\t\tif ( trace > 0 ) {\r\n\t\r\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\t\r\n\t\t\t\tthis._w = 0.25 / s;\r\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\t\r\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\t\tthis._x = 0.25 * s;\r\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\t\r\n\t\t\t} else if ( m22 > m33 ) {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\t\r\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\t\tthis._y = 0.25 * s;\r\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\t\r\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\t\tthis._z = 0.25 * s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromUnitVectors: function () {\r\n\t\r\n\t\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\t\r\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\t\r\n\t\t\tvar v1, r;\r\n\t\r\n\t\t\tvar EPS = 0.000001;\r\n\t\r\n\t\t\treturn function ( vFrom, vTo ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\t\r\n\t\t\t\tif ( r < EPS ) {\r\n\t\r\n\t\t\t\t\tr = 0;\r\n\t\r\n\t\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\t\r\n\t\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis._x = v1.x;\r\n\t\t\t\tthis._y = v1.y;\r\n\t\t\t\tthis._z = v1.z;\r\n\t\t\t\tthis._w = r;\r\n\t\r\n\t\t\t\tthis.normalize();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tinverse: function () {\r\n\t\r\n\t\t\tthis.conjugate().normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tconjugate: function () {\r\n\t\r\n\t\t\tthis._x *= - 1;\r\n\t\t\tthis._y *= - 1;\r\n\t\t\tthis._z *= - 1;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tvar l = this.length();\r\n\t\r\n\t\t\tif ( l === 0 ) {\r\n\t\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = 0;\r\n\t\t\t\tthis._w = 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tl = 1 / l;\r\n\t\r\n\t\t\t\tthis._x = this._x * l;\r\n\t\t\t\tthis._y = this._y * l;\r\n\t\t\t\tthis._z = this._z * l;\r\n\t\t\t\tthis._w = this._w * l;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( q, p ) {\r\n\t\r\n\t\t\tif ( p !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyQuaternions( q, p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyQuaternions( this, q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyQuaternions: function ( a, b ) {\r\n\t\r\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\t\r\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\t\r\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\t\treturn vector.applyQuaternion( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tslerp: function ( qb, t ) {\r\n\t\r\n\t\t\tif ( t === 0 ) return this;\r\n\t\t\tif ( t === 1 ) return this.copy( qb );\r\n\t\r\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\t\r\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\t\r\n\t\t\tif ( cosHalfTheta < 0 ) {\r\n\t\r\n\t\t\t\tthis._w = - qb._w;\r\n\t\t\t\tthis._x = - qb._x;\r\n\t\t\t\tthis._y = - qb._y;\r\n\t\t\t\tthis._z = - qb._z;\r\n\t\r\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.copy( qb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\t\r\n\t\t\t\tthis._w = w;\r\n\t\t\t\tthis._x = x;\r\n\t\t\t\tthis._y = y;\r\n\t\t\t\tthis._z = z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\t\r\n\t\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\t\r\n\t\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\t\r\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( quaternion ) {\r\n\t\r\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis._x = array[ offset ];\r\n\t\t\tthis._y = array[ offset + 1 ];\r\n\t\t\tthis._z = array[ offset + 2 ];\r\n\t\t\tthis._w = array[ offset + 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\t\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.Vector2 = function ( x, y ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector2,\r\n\t\r\n\t\tset: function ( x, y ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v ) {\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x *= s;\r\n\t\t\tthis.y *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\t\tmax = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function() {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\t\treturn dx * dx + dy * dy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author *kile / http://kile.stravaganza.org/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector3 = function ( x, y, z ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector3,\r\n\t\r\n\t\tset: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiply: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x *= v.x;\r\n\t\t\tthis.y *= v.y;\r\n\t\t\tthis.z *= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x * b.x;\r\n\t\t\tthis.y = a.y * b.y;\r\n\t\t\tthis.z = a.z * b.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyEuler: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyEuler( euler ) {\r\n\t\r\n\t\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyAxisAngle: function () {\r\n\t\r\n\t\t\tvar quaternion;\r\n\t\r\n\t\t\treturn function applyAxisAngle( axis, angle ) {\r\n\t\r\n\t\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix3: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyProjection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 projection matrix\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\t\r\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\r\n\t\t\tvar qx = q.x;\r\n\t\t\tvar qy = q.y;\r\n\t\t\tvar qz = q.z;\r\n\t\t\tvar qw = q.w;\r\n\t\r\n\t\t\t// calculate quat * vector\r\n\t\r\n\t\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\t\r\n\t\t\t// calculate result * inverse quat\r\n\t\r\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function project( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tunproject: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function unproject( camera ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\t\treturn this.applyProjection( matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttransformDirection: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t\t// vector interpreted as a direction\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\t\r\n\t\t\tthis.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivide: function ( v ) {\r\n\t\r\n\t\t\tthis.x /= v.x;\r\n\t\t\tthis.y /= v.y;\r\n\t\t\tthis.z /= v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\t\tmax = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcross: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.crossVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\r\n\t\t\tthis.x = y * v.z - z * v.y;\r\n\t\t\tthis.y = z * v.x - x * v.z;\r\n\t\t\tthis.z = x * v.y - y * v.x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVectors: function ( a, b ) {\r\n\t\r\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\t\r\n\t\t\tthis.x = ay * bz - az * by;\r\n\t\t\tthis.y = az * bx - ax * bz;\r\n\t\t\tthis.z = ax * by - ay * bx;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectOnVector: function () {\r\n\t\r\n\t\t\tvar v1, dot;\r\n\t\r\n\t\t\treturn function projectOnVector( vector ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( vector ).normalize();\r\n\t\r\n\t\t\t\tdot = this.dot( v1 );\r\n\t\r\n\t\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tprojectOnPlane: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function projectOnPlane( planeNormal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\t\r\n\t\t\t\treturn this.sub( v1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\treflect: function () {\r\n\t\r\n\t\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t\t// normal is assumed to have unit length\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function reflect( normal ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tangleTo: function ( v ) {\r\n\t\r\n\t\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\t\r\n\t\t\t// clamp, to handle numerical problems\r\n\t\r\n\t\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceTo: function ( v ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSquared: function ( v ) {\r\n\t\r\n\t\t\tvar dx = this.x - v.x;\r\n\t\t\tvar dy = this.y - v.y;\r\n\t\t\tvar dz = this.z - v.z;\r\n\t\r\n\t\t\treturn dx * dx + dy * dy + dz * dz;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetEulerFromQuaternion: function ( q, order ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPositionFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetScaleFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixScale( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\r\n\t\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixPosition: function ( m ) {\r\n\t\r\n\t\t\tthis.x = m.elements[ 12 ];\r\n\t\t\tthis.y = m.elements[ 13 ];\r\n\t\t\tthis.z = m.elements[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixScale: function ( m ) {\r\n\t\r\n\t\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\t\r\n\t\t\tthis.x = sx;\r\n\t\t\tthis.y = sy;\r\n\t\t\tthis.z = sz;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\r\n\t\t\tvar offset = index * 4;\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tthis.x = me[ offset ];\r\n\t\t\tthis.y = me[ offset + 1 ];\r\n\t\t\tthis.z = me[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Vector4.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author egraether / http://egraether.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Vector4 = function ( x, y, z, w ) {\r\n\t\r\n\t\tthis.x = x || 0;\r\n\t\tthis.y = y || 0;\r\n\t\tthis.z = z || 0;\r\n\t\tthis.w = ( w !== undefined ) ? w : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Vector4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Vector4,\r\n\t\r\n\t\tset: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\t\tthis.y = y;\r\n\t\t\tthis.z = z;\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( x ) {\r\n\t\r\n\t\t\tthis.x = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( y ) {\r\n\t\r\n\t\t\tthis.y = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( z ) {\r\n\t\r\n\t\t\tthis.z = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( w ) {\r\n\t\r\n\t\t\tthis.w = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponent: function ( index, value ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: this.x = value; break;\r\n\t\t\t\tcase 1: this.y = value; break;\r\n\t\t\t\tcase 2: this.z = value; break;\r\n\t\t\t\tcase 3: this.w = value; break;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetComponent: function ( index ) {\r\n\t\r\n\t\t\tswitch ( index ) {\r\n\t\r\n\t\t\t\tcase 0: return this.x;\r\n\t\t\t\tcase 1: return this.y;\r\n\t\t\t\tcase 2: return this.z;\r\n\t\t\t\tcase 3: return this.w;\r\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( v ) {\r\n\t\r\n\t\t\tthis.x = v.x;\r\n\t\t\tthis.y = v.y;\r\n\t\t\tthis.z = v.z;\r\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tadd: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.addVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x += v.x;\r\n\t\t\tthis.y += v.y;\r\n\t\t\tthis.z += v.z;\r\n\t\t\tthis.w += v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x += s;\r\n\t\t\tthis.y += s;\r\n\t\t\tthis.z += s;\r\n\t\t\tthis.w += s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x + b.x;\r\n\t\t\tthis.y = a.y + b.y;\r\n\t\t\tthis.z = a.z + b.z;\r\n\t\t\tthis.w = a.w + b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddScaledVector: function ( v, s ) {\r\n\t\r\n\t\t\tthis.x += v.x * s;\r\n\t\t\tthis.y += v.y * s;\r\n\t\t\tthis.z += v.z * s;\r\n\t\t\tthis.w += v.w * s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsub: function ( v, w ) {\r\n\t\r\n\t\t\tif ( w !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\t\treturn this.subVectors( v, w );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.x -= v.x;\r\n\t\t\tthis.y -= v.y;\r\n\t\t\tthis.z -= v.z;\r\n\t\t\tthis.w -= v.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubScalar: function ( s ) {\r\n\t\r\n\t\t\tthis.x -= s;\r\n\t\t\tthis.y -= s;\r\n\t\t\tthis.z -= s;\r\n\t\t\tthis.w -= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsubVectors: function ( a, b ) {\r\n\t\r\n\t\t\tthis.x = a.x - b.x;\r\n\t\t\tthis.y = a.y - b.y;\r\n\t\t\tthis.z = a.z - b.z;\r\n\t\t\tthis.w = a.w - b.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( m ) {\r\n\t\r\n\t\t\tvar x = this.x;\r\n\t\t\tvar y = this.y;\r\n\t\t\tvar z = this.z;\r\n\t\t\tvar w = this.w;\r\n\t\r\n\t\t\tvar e = m.elements;\r\n\t\r\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdivideScalar: function ( scalar ) {\r\n\t\r\n\t\t\tif ( scalar !== 0 ) {\r\n\t\r\n\t\t\t\tvar invScalar = 1 / scalar;\r\n\t\r\n\t\t\t\tthis.x *= invScalar;\r\n\t\t\t\tthis.y *= invScalar;\r\n\t\t\t\tthis.z *= invScalar;\r\n\t\t\t\tthis.w *= invScalar;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.x = 0;\r\n\t\t\t\tthis.y = 0;\r\n\t\t\t\tthis.z = 0;\r\n\t\t\t\tthis.w = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\t\r\n\t\t\t// q is assumed to be normalized\r\n\t\r\n\t\t\tthis.w = 2 * Math.acos( q.w );\r\n\t\r\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\t\r\n\t\t\tif ( s < 0.0001 ) {\r\n\t\r\n\t\t\t\t this.x = 1;\r\n\t\t\t\t this.y = 0;\r\n\t\t\t\t this.z = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t this.x = q.x / s;\r\n\t\t\t\t this.y = q.y / s;\r\n\t\t\t\t this.z = q.z / s;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\t\r\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\t\r\n\t\t\t\tte = m.elements,\r\n\t\r\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\t\r\n\t\t\t\t// singularity found\r\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t\t// in leading diagonal and zero in other terms\r\n\t\r\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\t\r\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\t\r\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// otherwise this singularity is angle = 180\r\n\t\r\n\t\t\t\tangle = Math.PI;\r\n\t\r\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\t\r\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\t\r\n\t\t\t\t\t// m11 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( xx < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\t\tz = xz / x;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( yy > zz ) {\r\n\t\r\n\t\t\t\t\t// m22 is the largest diagonal term\r\n\t\r\n\t\t\t\t\tif ( yy < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0;\r\n\t\t\t\t\t\tz = 0.707106781;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\t\tz = yz / y;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\t\r\n\t\t\t\t\tif ( zz < epsilon ) {\r\n\t\r\n\t\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\t\tz = 0;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\t\ty = yz / z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.set( x, y, z, angle );\r\n\t\r\n\t\t\t\treturn this; // return 180 deg rotation\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// as we have reached here there are no singularities so we can handle normally\r\n\t\r\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\t\r\n\t\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\t\r\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t\t// caught by singularity test above, but I've left it in just in case\r\n\t\r\n\t\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmin: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x > v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y > v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z > v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w > v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmax: function ( v ) {\r\n\t\r\n\t\t\tif ( this.x < v.x ) {\r\n\t\r\n\t\t\t\tthis.x = v.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < v.y ) {\r\n\t\r\n\t\t\t\tthis.y = v.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < v.z ) {\r\n\t\r\n\t\t\t\tthis.z = v.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < v.w ) {\r\n\t\r\n\t\t\t\tthis.w = v.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclamp: function ( min, max ) {\r\n\t\r\n\t\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\t\r\n\t\t\tif ( this.x < min.x ) {\r\n\t\r\n\t\t\t\tthis.x = min.x;\r\n\t\r\n\t\t\t} else if ( this.x > max.x ) {\r\n\t\r\n\t\t\t\tthis.x = max.x;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.y < min.y ) {\r\n\t\r\n\t\t\t\tthis.y = min.y;\r\n\t\r\n\t\t\t} else if ( this.y > max.y ) {\r\n\t\r\n\t\t\t\tthis.y = max.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.z < min.z ) {\r\n\t\r\n\t\t\t\tthis.z = min.z;\r\n\t\r\n\t\t\t} else if ( this.z > max.z ) {\r\n\t\r\n\t\t\t\tthis.z = max.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.w < min.w ) {\r\n\t\r\n\t\t\t\tthis.w = min.w;\r\n\t\r\n\t\t\t} else if ( this.w > max.w ) {\r\n\t\r\n\t\t\t\tthis.w = max.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampScalar: function () {\r\n\t\r\n\t\t\tvar min, max;\r\n\t\r\n\t\t\treturn function clampScalar( minVal, maxVal ) {\r\n\t\r\n\t\t\t\tif ( min === undefined ) {\r\n\t\r\n\t\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\t\tmax = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\t\r\n\t\t\t\treturn this.clamp( min, max );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfloor: function () {\r\n\t\r\n\t\t\tthis.x = Math.floor( this.x );\r\n\t\t\tthis.y = Math.floor( this.y );\r\n\t\t\tthis.z = Math.floor( this.z );\r\n\t\t\tthis.w = Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tceil: function () {\r\n\t\r\n\t\t\tthis.x = Math.ceil( this.x );\r\n\t\t\tthis.y = Math.ceil( this.y );\r\n\t\t\tthis.z = Math.ceil( this.z );\r\n\t\t\tthis.w = Math.ceil( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tround: function () {\r\n\t\r\n\t\t\tthis.x = Math.round( this.x );\r\n\t\t\tthis.y = Math.round( this.y );\r\n\t\t\tthis.z = Math.round( this.z );\r\n\t\t\tthis.w = Math.round( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\troundToZero: function () {\r\n\t\r\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.x = - this.x;\r\n\t\t\tthis.y = - this.y;\r\n\t\t\tthis.z = - this.z;\r\n\t\t\tthis.w = - this.w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdot: function ( v ) {\r\n\t\r\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthSq: function () {\r\n\t\r\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlength: function () {\r\n\t\r\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlengthManhattan: function () {\r\n\t\r\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\treturn this.divideScalar( this.length() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetLength: function ( l ) {\r\n\t\r\n\t\t\tvar oldLength = this.length();\r\n\t\r\n\t\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\t\r\n\t\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerp: function ( v, alpha ) {\r\n\t\r\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlerpVectors: function ( v1, v2, alpha ) {\r\n\t\r\n\t\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( v ) {\r\n\t\r\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.x = array[ offset ];\r\n\t\t\tthis.y = array[ offset + 1 ];\r\n\t\t\tthis.z = array[ offset + 2 ];\r\n\t\t\tthis.w = array[ offset + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this.x;\r\n\t\t\tarray[ offset + 1 ] = this.y;\r\n\t\t\tarray[ offset + 2 ] = this.z;\r\n\t\t\tarray[ offset + 3 ] = this.w;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromAttribute: function ( attribute, index, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tindex = index * attribute.itemSize + offset;\r\n\t\r\n\t\t\tthis.x = attribute.array[ index ];\r\n\t\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\t\tthis.w = attribute.array[ index + 3 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Euler.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Euler = function ( x, y, z, order ) {\r\n\t\r\n\t\tthis._x = x || 0;\r\n\t\tthis._y = y || 0;\r\n\t\tthis._z = z || 0;\r\n\t\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\t\r\n\tTHREE.Euler.DefaultOrder = 'XYZ';\r\n\t\r\n\tTHREE.Euler.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Euler,\r\n\t\r\n\t\tget x () {\r\n\t\r\n\t\t\treturn this._x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset x ( value ) {\r\n\t\r\n\t\t\tthis._x = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget y () {\r\n\t\r\n\t\t\treturn this._y;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset y ( value ) {\r\n\t\r\n\t\t\tthis._y = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget z () {\r\n\t\r\n\t\t\treturn this._z;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset z ( value ) {\r\n\t\r\n\t\t\tthis._z = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget order () {\r\n\t\r\n\t\t\treturn this._order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset order ( value ) {\r\n\t\r\n\t\t\tthis._order = value;\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( x, y, z, order ) {\r\n\t\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\t\t\tthis._order = order || this._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( euler ) {\r\n\t\r\n\t\t\tthis._x = euler._x;\r\n\t\t\tthis._y = euler._y;\r\n\t\t\tthis._z = euler._z;\r\n\t\t\tthis._order = euler._order;\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\t\r\n\t\t\tvar clamp = THREE.Math.clamp;\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tvar te = m.elements;\r\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\t\r\n\t\t\torder = order || this._order;\r\n\t\r\n\t\t\tif ( order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\t\tthis._z = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._y = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'YZX' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = 0;\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( order === 'XZY' ) {\r\n\t\r\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\t\r\n\t\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\t\tthis._y = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis._order = order;\r\n\t\r\n\t\t\tif ( update !== false ) this.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromQuaternion: function () {\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\treturn function ( q, order, update ) {\r\n\t\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromVector3: function ( v, order ) {\r\n\t\r\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treorder: function () {\r\n\t\r\n\t\t\t// WARNING: this discards revolution information -bhouston\r\n\t\r\n\t\t\tvar q = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( newOrder ) {\r\n\t\r\n\t\t\t\tq.setFromEuler( this );\r\n\t\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tequals: function ( euler ) {\r\n\t\r\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis._x = array[ 0 ];\r\n\t\t\tthis._y = array[ 1 ];\r\n\t\t\tthis._z = array[ 2 ];\r\n\t\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\t\r\n\t\t\tthis.onChangeCallback();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function ( array, offset ) {\r\n\t\r\n\t\t\tif ( array === undefined ) array = [];\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tarray[ offset ] = this._x;\r\n\t\t\tarray[ offset + 1 ] = this._y;\r\n\t\t\tarray[ offset + 2 ] = this._z;\r\n\t\t\tarray[ offset + 3 ] = this._order;\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoVector3: function ( optionalResult ) {\r\n\t\r\n\t\t\tif ( optionalResult ) {\r\n\t\r\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChange: function ( callback ) {\r\n\t\r\n\t\t\tthis.onChangeCallback = callback;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tonChangeCallback: function () {}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Line3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Line3 = function ( start, end ) {\r\n\t\r\n\t\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\t\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Line3,\r\n\t\r\n\t\tset: function ( start, end ) {\r\n\t\r\n\t\t\tthis.start.copy( start );\r\n\t\t\tthis.end.copy( end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( line ) {\r\n\t\r\n\t\t\tthis.start.copy( line.start );\r\n\t\t\tthis.end.copy( line.end );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdelta: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.end, this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSq: function () {\r\n\t\r\n\t\t\treturn this.start.distanceToSquared( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistance: function () {\r\n\t\r\n\t\t\treturn this.start.distanceTo( this.end );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclosestPointToPointParameter: function () {\r\n\t\r\n\t\t\tvar startP = new THREE.Vector3();\r\n\t\t\tvar startEnd = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point, clampToLine ) {\r\n\t\r\n\t\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\t\r\n\t\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\t\r\n\t\t\t\tvar t = startEnd_startP / startEnd2;\r\n\t\r\n\t\t\t\tif ( clampToLine ) {\r\n\t\r\n\t\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn t;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.start.applyMatrix4( matrix );\r\n\t\t\tthis.end.applyMatrix4( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( line ) {\r\n\t\r\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box2.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Box2 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box2.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box2,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] )\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = Infinity;\r\n\t\t\tthis.max.x = this.max.y = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector2();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Box3.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Box3 = function ( min, max ) {\r\n\t\r\n\t\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\t\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Box3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Box3,\r\n\t\r\n\t\tset: function ( min, max ) {\r\n\t\r\n\t\t\tthis.min.copy( min );\r\n\t\t\tthis.max.copy( max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function ( points ) {\r\n\t\r\n\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.expandByPoint( points[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCenterAndSize: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( center, size ) {\r\n\t\r\n\t\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\t\tthis.max.copy( center ).add( halfSize );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetFromObject: function () {\r\n\t\r\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t\t// accounting for both the object's, and children's, world transforms\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tobject.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\r\n\t\t\t\tobject.traverse( function ( node ) {\r\n\t\r\n\t\t\t\t\tvar geometry = node.geometry;\r\n\t\r\n\t\t\t\t\tif ( geometry !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\t\r\n\t\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( box ) {\r\n\t\r\n\t\t\tthis.min.copy( box.min );\r\n\t\t\tthis.max.copy( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeEmpty: function () {\r\n\t\r\n\t\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\t\r\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsize: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.subVectors( this.max, this.min );\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByPoint: function ( point ) {\r\n\t\r\n\t\t\tthis.min.min( point );\r\n\t\t\tthis.max.max( point );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByVector: function ( vector ) {\r\n\t\r\n\t\t\tthis.min.sub( vector );\r\n\t\t\tthis.max.add( vector );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\texpandByScalar: function ( scalar ) {\r\n\t\r\n\t\t\tthis.min.addScalar( - scalar );\r\n\t\t\tthis.max.addScalar( scalar );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsBox: function ( box ) {\r\n\t\r\n\t\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetParameter: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\t// This can potentially have a divide by zero if the box\r\n\t\t\t// has a size dimension of 0.\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.set(\r\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function ( box ) {\r\n\t\r\n\t\t\t// using 6 splitting planes to rule out intersections.\r\n\t\r\n\t\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\t\r\n\t\t\t\treturn false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\t\treturn clampedPoint.sub( point ).length();\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetBoundingSphere: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\t\r\n\t\t\t\tresult.center = this.center();\r\n\t\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersect: function ( box ) {\r\n\t\r\n\t\t\tthis.min.max( box.min );\r\n\t\t\tthis.max.min( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tunion: function ( box ) {\r\n\t\r\n\t\t\tthis.min.min( box.min );\r\n\t\t\tthis.max.max( box.max );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar points = [\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3(),\r\n\t\t\t\tnew THREE.Vector3()\r\n\t\t\t];\r\n\t\r\n\t\t\treturn function ( matrix ) {\r\n\t\r\n\t\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\t\r\n\t\t\t\tthis.makeEmpty();\r\n\t\t\t\tthis.setFromPoints( points );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.min.add( offset );\r\n\t\t\tthis.max.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( box ) {\r\n\t\r\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix3.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Matrix3 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix3,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0,\r\n\t\t\t\t0, 1, 0,\r\n\t\t\t\t0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix3( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix3( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\t\r\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\t\r\n\t\t\tvar me = matrix.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\t\r\n\t\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\t\r\n\t\t\t// no inverse\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1.0 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar tmp, m = this.elements;\r\n\t\r\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMatrix: function ( m ) {\r\n\t\r\n\t\t\t// input: THREE.Matrix4\r\n\t\r\n\t\t\tthis.getInverse( m ).transpose();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransposeIntoArray: function ( r ) {\r\n\t\r\n\t\t\tvar m = this.elements;\r\n\t\r\n\t\t\tr[ 0 ] = m[ 0 ];\r\n\t\t\tr[ 1 ] = m[ 3 ];\r\n\t\t\tr[ 2 ] = m[ 6 ];\r\n\t\t\tr[ 3 ] = m[ 1 ];\r\n\t\t\tr[ 4 ] = m[ 4 ];\r\n\t\t\tr[ 5 ] = m[ 7 ];\r\n\t\t\tr[ 6 ] = m[ 2 ];\r\n\t\t\tr[ 7 ] = m[ 5 ];\r\n\t\t\tr[ 8 ] = m[ 8 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Matrix4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author philogb / http://blog.thejit.org/\r\n\t * @author jordi_ros / http://plattsoft.com\r\n\t * @author D1plo1d / http://github.com/D1plo1d\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author timknip / http://www.floorplanner.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.Matrix4 = function () {\r\n\t\r\n\t\tthis.elements = new Float32Array( [\r\n\t\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t] );\r\n\t\r\n\t\tif ( arguments.length > 0 ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Matrix4.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Matrix4,\r\n\t\r\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tidentity: function () {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, 0,\r\n\t\t\t\t0, 1, 0, 0,\r\n\t\t\t\t0, 0, 1, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( m ) {\r\n\t\r\n\t\t\tthis.elements.set( m.elements );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractPosition: function ( m ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\t\treturn this.copyPosition( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyPosition: function ( m ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tte[ 12 ] = me[ 12 ];\r\n\t\t\tte[ 13 ] = me[ 13 ];\r\n\t\t\tte[ 14 ] = me[ 14 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t\t0,       0,       0,       1\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\textractRotation: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( m ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\t\r\n\t\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\t\r\n\t\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\t\r\n\t\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\t\r\n\t\t\tif ( euler.order === 'XYZ' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - c * f;\r\n\t\t\t\tte[ 8 ] = d;\r\n\t\r\n\t\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\t\tte[ 9 ] = - b * c;\r\n\t\r\n\t\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YXZ' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\t\tte[ 8 ] = a * d;\r\n\t\r\n\t\t\t\tte[ 1 ] = a * f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b;\r\n\t\r\n\t\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZXY' ) {\r\n\t\r\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\t\tte[ 4 ] = - a * f;\r\n\t\t\t\tte[ 8 ] = de + cf * b;\r\n\t\r\n\t\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = df - ce * b;\r\n\t\r\n\t\t\t\tte[ 2 ] = - a * d;\r\n\t\t\t\tte[ 6 ] = b;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'ZYX' ) {\r\n\t\r\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\t\tte[ 8 ] = ae * d + bf;\r\n\t\r\n\t\t\t\tte[ 1 ] = c * f;\r\n\t\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\t\tte[ 9 ] = af * d - be;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d;\r\n\t\t\t\tte[ 6 ] = b * c;\r\n\t\t\t\tte[ 10 ] = a * c;\r\n\t\r\n\t\t\t} else if ( euler.order === 'YZX' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\t\tte[ 8 ] = bc * f + ad;\r\n\t\r\n\t\t\t\tte[ 1 ] = f;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = - b * e;\r\n\t\r\n\t\t\t\tte[ 2 ] = - d * e;\r\n\t\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\t\tte[ 10 ] = ac - bd * f;\r\n\t\r\n\t\t\t} else if ( euler.order === 'XZY' ) {\r\n\t\r\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\t\r\n\t\t\t\tte[ 0 ] = c * e;\r\n\t\t\t\tte[ 4 ] = - f;\r\n\t\t\t\tte[ 8 ] = d * e;\r\n\t\r\n\t\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\t\tte[ 5 ] = a * e;\r\n\t\t\t\tte[ 9 ] = ad * f - bc;\r\n\t\r\n\t\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\t\tte[ 6 ] = b * e;\r\n\t\t\t\tte[ 10 ] = bd * f + ac;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\r\n\t\t\treturn this.makeRotationFromQuaternion( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\t\r\n\t\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\t\tte[ 4 ] = xy - wz;\r\n\t\t\tte[ 8 ] = xz + wy;\r\n\t\r\n\t\t\tte[ 1 ] = xy + wz;\r\n\t\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\t\tte[ 9 ] = yz - wx;\r\n\t\r\n\t\t\tte[ 2 ] = xz - wy;\r\n\t\t\tte[ 6 ] = yz + wx;\r\n\t\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\t\r\n\t\t\t// last column\r\n\t\t\tte[ 3 ] = 0;\r\n\t\t\tte[ 7 ] = 0;\r\n\t\t\tte[ 11 ] = 0;\r\n\t\r\n\t\t\t// bottom row\r\n\t\t\tte[ 12 ] = 0;\r\n\t\t\tte[ 13 ] = 0;\r\n\t\t\tte[ 14 ] = 0;\r\n\t\t\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar x, y, z;\r\n\t\r\n\t\t\treturn function ( eye, target, up ) {\r\n\t\r\n\t\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tz.subVectors( eye, target ).normalize();\r\n\t\r\n\t\t\t\tif ( z.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.z = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\tif ( x.length() === 0 ) {\r\n\t\r\n\t\t\t\t\tz.x += 0.0001;\r\n\t\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ty.crossVectors( z, x );\r\n\t\r\n\t\r\n\t\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmultiply: function ( m, n ) {\r\n\t\r\n\t\t\tif ( n !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\t\treturn this.multiplyMatrices( m, n );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.multiplyMatrices( this, m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyMatrices: function ( a, b ) {\r\n\t\r\n\t\t\tvar ae = a.elements;\r\n\t\t\tvar be = b.elements;\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\t\r\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\t\r\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\t\r\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\t\r\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyToArray: function ( a, b, r ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tthis.multiplyMatrices( a, b );\r\n\t\r\n\t\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyScalar: function ( s ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\t\treturn vector.applyProjection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector4: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmultiplyVector3Array: function ( a ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\t\treturn this.applyToVector3Array( a );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyToVector3Array: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function ( array, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = array.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\t\r\n\t\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\t\tv1.toArray( array, j );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn array;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyToBuffer: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\t\tv1.z = buffer.getZ( j );\r\n\t\r\n\t\t\t\t\tv1.applyMatrix4( this );\r\n\t\r\n\t\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn buffer;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateAxis: function ( v ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\r\n\t\t\tv.transformDirection( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcrossVector: function ( vector ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\t\treturn vector.applyMatrix4( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdeterminant: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\t\r\n\t\t\t//TODO: make this more efficient\r\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\t\r\n\t\t\treturn (\r\n\t\t\t\tn41 * (\r\n\t\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t\t - n12 * n23 * n34\r\n\t\t\t\t) +\r\n\t\t\t\tn42 * (\r\n\t\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t\t - n14 * n23 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn43 * (\r\n\t\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t\t - n12 * n24 * n31\r\n\t\t\t\t) +\r\n\t\t\t\tn44 * (\r\n\t\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t\t + n12 * n23 * n31\r\n\t\t\t\t)\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranspose: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar tmp;\r\n\t\r\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\t\r\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tflattenToArrayOffset: function ( array, offset ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tarray[ offset ] = te[ 0 ];\r\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\r\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\r\n\t\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\t\r\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPosition: function () {\r\n\t\r\n\t\t\tvar v1;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tsetPosition: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tte[ 12 ] = v.x;\r\n\t\t\tte[ 13 ] = v.y;\r\n\t\t\tte[ 14 ] = v.z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetInverse: function ( m, throwOnInvertible ) {\r\n\t\r\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\t\r\n\t\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\t\r\n\t\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\t\r\n\t\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\t\r\n\t\t\tif ( det === 0 ) {\r\n\t\r\n\t\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\t\r\n\t\t\t\tif ( throwOnInvertible || false ) {\r\n\t\r\n\t\t\t\t\tthrow new Error( msg );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.warn( msg );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.identity();\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.multiplyScalar( 1 / det );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( v ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateY: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateZ: function ( angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateByAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tscale: function ( v ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = v.x, y = v.y, z = v.z;\r\n\t\r\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetMaxScaleOnAxis: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\t\r\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeTranslation: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0, 0, x,\r\n\t\t\t\t0, 1, 0, y,\r\n\t\t\t\t0, 0, 1, z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationX: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t1, 0,  0, 0,\r\n\t\t\t\t0, c, - s, 0,\r\n\t\t\t\t0, s,  c, 0,\r\n\t\t\t\t0, 0,  0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationY: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\t c, 0, s, 0,\r\n\t\t\t\t 0, 1, 0, 0,\r\n\t\t\t\t- s, 0, c, 0,\r\n\t\t\t\t 0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationZ: function ( theta ) {\r\n\t\r\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tc, - s, 0, 0,\r\n\t\t\t\ts,  c, 0, 0,\r\n\t\t\t\t0,  0, 1, 0,\r\n\t\t\t\t0,  0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeRotationAxis: function ( axis, angle ) {\r\n\t\r\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\t\r\n\t\t\tvar c = Math.cos( angle );\r\n\t\t\tvar s = Math.sin( angle );\r\n\t\t\tvar t = 1 - c;\r\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\t\tvar tx = t * x, ty = t * y;\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\t return this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeScale: function ( x, y, z ) {\r\n\t\r\n\t\t\tthis.set(\r\n\t\r\n\t\t\t\tx, 0, 0, 0,\r\n\t\t\t\t0, y, 0, 0,\r\n\t\t\t\t0, 0, z, 0,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\r\n\t\t\t);\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcompose: function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\t\tthis.scale( scale );\r\n\t\t\tthis.setPosition( position );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdecompose: function () {\r\n\t\r\n\t\t\tvar vector, matrix;\r\n\t\r\n\t\t\treturn function ( position, quaternion, scale ) {\r\n\t\r\n\t\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\t\r\n\t\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\t\tvar det = this.determinant();\r\n\t\t\t\tif ( det < 0 ) {\r\n\t\r\n\t\t\t\t\tsx = - sx;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tposition.x = te[ 12 ];\r\n\t\t\t\tposition.y = te[ 13 ];\r\n\t\t\t\tposition.z = te[ 14 ];\r\n\t\r\n\t\t\t\t// scale the rotation part\r\n\t\r\n\t\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\t\r\n\t\t\t\tvar invSX = 1 / sx;\r\n\t\t\t\tvar invSY = 1 / sy;\r\n\t\t\t\tvar invSZ = 1 / sz;\r\n\t\r\n\t\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\t\r\n\t\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\t\r\n\t\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\t\r\n\t\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\t\r\n\t\t\t\tscale.x = sx;\r\n\t\t\t\tscale.y = sy;\r\n\t\t\t\tscale.z = sz;\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar x = 2 * near / ( right - left );\r\n\t\t\tvar y = 2 * near / ( top - bottom );\r\n\t\r\n\t\t\tvar a = ( right + left ) / ( right - left );\r\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\t\tvar d = - 2 * far * near / ( far - near );\r\n\t\r\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\t\r\n\t\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\t\tvar ymin = - ymax;\r\n\t\t\tvar xmin = ymin * aspect;\r\n\t\t\tvar xmax = ymax * aspect;\r\n\t\r\n\t\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar w = right - left;\r\n\t\t\tvar h = top - bottom;\r\n\t\t\tvar p = far - near;\r\n\t\r\n\t\t\tvar x = ( right + left ) / w;\r\n\t\t\tvar y = ( top + bottom ) / h;\r\n\t\t\tvar z = ( far + near ) / p;\r\n\t\r\n\t\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( matrix ) {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = matrix.elements;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\t\r\n\t\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromArray: function ( array ) {\r\n\t\r\n\t\t\tthis.elements.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoArray: function () {\r\n\t\r\n\t\t\tvar te = this.elements;\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t\t];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Ray.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Ray = function ( origin, direction ) {\r\n\t\r\n\t\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\t\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Ray.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Ray,\r\n\t\r\n\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\tthis.origin.copy( origin );\r\n\t\t\tthis.direction.copy( direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( ray ) {\r\n\t\r\n\t\t\tthis.origin.copy( ray.origin );\r\n\t\t\tthis.direction.copy( ray.direction );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tat: function ( t, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trecast: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( t ) {\r\n\t\r\n\t\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.subVectors( point, this.origin );\r\n\t\t\tvar directionDistance = result.dot( this.direction );\r\n\t\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\treturn result.copy( this.origin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceSqToPoint: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( point ) {\r\n\t\r\n\t\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\t\r\n\t\t\t\t// point behind the ray\r\n\t\r\n\t\t\t\tif ( directionDistance < 0 ) {\r\n\t\r\n\t\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\t\r\n\t\t\t\treturn v1.distanceToSquared( point );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tdistanceSqToSegment: function () {\r\n\t\r\n\t\t\tvar segCenter = new THREE.Vector3();\r\n\t\t\tvar segDir = new THREE.Vector3();\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t\t// defined by v0 and v1\r\n\t\t\t\t// It can also set two optional targets :\r\n\t\t\t\t// - The closest point on the ray\r\n\t\t\t\t// - The closest point on the segment\r\n\t\r\n\t\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\t\r\n\t\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\t\tvar c = diff.lengthSq();\r\n\t\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\t\tvar s0, s1, sqrDist, extDet;\r\n\t\r\n\t\t\t\tif ( det > 0 ) {\r\n\t\r\n\t\t\t\t\t// The ray and segment are not parallel.\r\n\t\r\n\t\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\t\textDet = segExtent * det;\r\n\t\r\n\t\t\t\t\tif ( s0 >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\t\r\n\t\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t// region 1\r\n\t\r\n\t\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 5\r\n\t\r\n\t\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 4\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\t\r\n\t\t\t\t\t\t\t// region 3\r\n\t\r\n\t\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t// region 2\r\n\t\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// Ray and segment are parallel.\r\n\t\r\n\t\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnRay ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( optionalPointOnSegment ) {\r\n\t\r\n\t\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn sqrDist;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tisIntersectionSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectSphere: function () {\r\n\t\r\n\t\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( sphere, optionalTarget ) {\r\n\t\r\n\t\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\r\n\t\t\t\tvar tca = v1.dot( this.direction );\r\n\t\r\n\t\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\r\n\t\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\t\r\n\t\t\t\tif ( d2 > radius2 ) return null;\r\n\t\r\n\t\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\t\r\n\t\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\t\tvar t0 = tca - thc;\r\n\t\r\n\t\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\t\tvar t1 = tca + thc;\r\n\t\r\n\t\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\t\r\n\t\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\t\r\n\t\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\t\treturn this.at( t0, optionalTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisIntersectionPlane: function ( plane ) {\r\n\t\r\n\t\t\t// check if the ray lies on the plane first\r\n\t\r\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\t\r\n\t\t\tif ( distToPoint === 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\r\n\t\t\tif ( denominator * distToPoint < 0 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPlane: function ( plane ) {\r\n\t\r\n\t\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\t\r\n\t\t\t\t\treturn 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\t\r\n\t\t\t// Return if the ray never intersects the plane\r\n\t\r\n\t\t\treturn t >= 0 ? t :  null;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectPlane: function ( plane, optionalTarget ) {\r\n\t\r\n\t\t\tvar t = this.distanceToPlane( plane );\r\n\t\r\n\t\t\tif ( t === null ) {\r\n\t\r\n\t\t\t\treturn null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.at( t, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionBox: function () {\r\n\t\r\n\t\t\tvar v = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectBox: function ( box, optionalTarget ) {\r\n\t\r\n\t\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\t\r\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\t\r\n\t\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\t\tinvdirz = 1 / this.direction.z;\r\n\t\r\n\t\t\tvar origin = this.origin;\r\n\t\r\n\t\t\tif ( invdirx >= 0 ) {\r\n\t\r\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( invdiry >= 0 ) {\r\n\t\r\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\t\r\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\t\r\n\t\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\t\r\n\t\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\t\r\n\t\t\tif ( invdirz >= 0 ) {\r\n\t\r\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\t\r\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\t\r\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\t\r\n\t\t\t//return point closest to the ray (positive side)\r\n\t\r\n\t\t\tif ( tmax < 0 ) return null;\r\n\t\r\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectTriangle: function () {\r\n\t\r\n\t\t\t// Compute the offset origin, edges, and normal.\r\n\t\t\tvar diff = new THREE.Vector3();\r\n\t\t\tvar edge1 = new THREE.Vector3();\r\n\t\t\tvar edge2 = new THREE.Vector3();\r\n\t\t\tvar normal = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\t\r\n\t\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\t\r\n\t\t\t\tedge1.subVectors( b, a );\r\n\t\t\t\tedge2.subVectors( c, a );\r\n\t\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\t\r\n\t\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\t\tvar sign;\r\n\t\r\n\t\t\t\tif ( DdN > 0 ) {\r\n\t\r\n\t\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\t\tsign = 1;\r\n\t\r\n\t\t\t\t} else if ( DdN < 0 ) {\r\n\t\r\n\t\t\t\t\tsign = - 1;\r\n\t\t\t\t\tDdN = - DdN;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\t\r\n\t\t\t\t// b1 < 0, no intersection\r\n\t\t\t\tif ( DdQxE2 < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\t\r\n\t\t\t\t// b2 < 0, no intersection\r\n\t\t\t\tif ( DdE1xQ < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\t\r\n\t\t\t\t// t < 0, no intersection\r\n\t\t\t\tif ( QdN < 0 ) {\r\n\t\r\n\t\t\t\t\treturn null;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Ray intersects triangle.\r\n\t\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tapplyMatrix4: function ( matrix4 ) {\r\n\t\r\n\t\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\t\tthis.direction.sub( this.origin );\r\n\t\t\tthis.direction.normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( ray ) {\r\n\t\r\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Sphere.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Sphere = function ( center, radius ) {\r\n\t\r\n\t\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sphere.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Sphere,\r\n\t\r\n\t\tset: function ( center, radius ) {\r\n\t\r\n\t\t\tthis.center.copy( center );\r\n\t\t\tthis.radius = radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPoints: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\t\treturn function ( points, optionalCenter ) {\r\n\t\r\n\t\t\t\tvar center = this.center;\r\n\t\r\n\t\t\t\tif ( optionalCenter !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.copy( optionalCenter );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( sphere ) {\r\n\t\r\n\t\t\tthis.center.copy( sphere.center );\r\n\t\t\tthis.radius = sphere.radius;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tempty: function () {\r\n\t\r\n\t\t\treturn ( this.radius <= 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar radiusSum = this.radius + sphere.radius;\r\n\t\r\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclampPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tresult.copy( point );\r\n\t\r\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\t\r\n\t\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetBoundingBox: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar box = optionalTarget || new THREE.Box3();\r\n\t\r\n\t\t\tbox.set( this.center, this.center );\r\n\t\t\tbox.expandByScalar( this.radius );\r\n\t\r\n\t\t\treturn box;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function ( matrix ) {\r\n\t\r\n\t\t\tthis.center.applyMatrix4( matrix );\r\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.center.add( offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( sphere ) {\r\n\t\r\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Frustum.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\tthis.planes = [\r\n\t\r\n\t\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\t\r\n\t\t];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Frustum.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Frustum,\r\n\t\r\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tplanes[ 0 ].copy( p0 );\r\n\t\t\tplanes[ 1 ].copy( p1 );\r\n\t\t\tplanes[ 2 ].copy( p2 );\r\n\t\t\tplanes[ 3 ].copy( p3 );\r\n\t\t\tplanes[ 4 ].copy( p4 );\r\n\t\t\tplanes[ 5 ].copy( p5 );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( frustum ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromMatrix: function ( m ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar me = m.elements;\r\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\t\r\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsObject: function () {\r\n\t\r\n\t\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\t\treturn function ( object ) {\r\n\t\r\n\t\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\treturn this.intersectsSphere( sphere );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tintersectsSphere: function ( sphere ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\t\tvar center = sphere.center;\r\n\t\t\tvar negRadius = - sphere.radius;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\t\r\n\t\t\t\tif ( distance < negRadius ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectsBox: function () {\r\n\t\r\n\t\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\t\tp2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( box ) {\r\n\t\r\n\t\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar plane = planes[ i ];\r\n\t\r\n\t\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\t\r\n\t\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\t\r\n\t\t\t\t\t// if both outside plane, no intersection\r\n\t\r\n\t\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\tvar planes = this.planes;\r\n\t\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\t\r\n\t\t\t\t\treturn false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Plane.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Plane = function ( normal, constant ) {\r\n\t\r\n\t\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Plane.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Plane,\r\n\t\r\n\t\tset: function ( normal, constant ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetComponents: function ( x, y, z, w ) {\r\n\t\r\n\t\t\tthis.normal.set( x, y, z );\r\n\t\t\tthis.constant = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\t\r\n\t\t\tthis.normal.copy( normal );\r\n\t\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromCoplanarPoints: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\t\r\n\t\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( plane ) {\r\n\t\r\n\t\t\tthis.normal.copy( plane.normal );\r\n\t\t\tthis.constant = plane.constant;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\t\r\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\t\tthis.constant *= inverseNormalLength;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnegate: function () {\r\n\t\r\n\t\t\tthis.constant *= - 1;\r\n\t\t\tthis.normal.negate();\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToPoint: function ( point ) {\r\n\t\r\n\t\t\treturn this.normal.dot( point ) + this.constant;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdistanceToSphere: function ( sphere ) {\r\n\t\r\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tprojectPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\t\r\n\t\t},\r\n\t\r\n\t\torthoPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisIntersectionLine: function ( line ) {\r\n\t\r\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\t\r\n\t\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\t\tvar endSign = this.distanceToPoint( line.end );\r\n\t\r\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tintersectLine: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( line, optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tvar direction = line.delta( v1 );\r\n\t\r\n\t\t\t\tvar denominator = this.normal.dot( direction );\r\n\t\r\n\t\t\t\tif ( denominator === 0 ) {\r\n\t\r\n\t\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\t\r\n\t\t\t\t\t\treturn result.copy( line.start );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\t\r\n\t\t\t\tif ( t < 0 || t > 1 ) {\r\n\t\r\n\t\t\t\t\treturn undefined;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\r\n\t\tcoplanarPoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix4: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\t\tvar v2 = new THREE.Vector3();\r\n\t\t\tvar m1 = new THREE.Matrix3();\r\n\t\r\n\t\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\t\r\n\t\t\t\t// compute new normal based on theory here:\r\n\t\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\t\r\n\t\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( offset ) {\r\n\t\r\n\t\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( plane ) {\r\n\t\r\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Math.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Math = {\r\n\t\r\n\t\tgenerateUUID: function () {\r\n\t\r\n\t\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\t\r\n\t\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\t\tvar uuid = new Array( 36 );\r\n\t\t\tvar rnd = 0, r;\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '-';\r\n\t\r\n\t\t\t\t\t} else if ( i === 14 ) {\r\n\t\r\n\t\t\t\t\t\tuuid[ i ] = '4';\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn uuid.join( '' );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\t// Clamp value to range <a, b>\r\n\t\r\n\t\tclamp: function ( x, a, b ) {\r\n\t\r\n\t\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Clamp value to range <a, inf)\r\n\t\r\n\t\tclampBottom: function ( x, a ) {\r\n\t\r\n\t\t\treturn x < a ? a : x;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// compute euclidian modulo of m % n\r\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\t\r\n\t\teuclideanModulo: function ( n, m ) {\r\n\t\r\n\t\t\treturn ( ( n % m ) + m ) % m;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\t\r\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\t\r\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\t\r\n\t\tsmoothstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * ( 3 - 2 * x );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsmootherstep: function ( x, min, max ) {\r\n\t\r\n\t\t\tif ( x <= min ) return 0;\r\n\t\t\tif ( x >= max ) return 1;\r\n\t\r\n\t\t\tx = ( x - min ) / ( max - min );\r\n\t\r\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <0, 1> with 16 bits of randomness\r\n\t\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\t\r\n\t\trandom16: function () {\r\n\t\r\n\t\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random integer from <low, high> interval\r\n\t\r\n\t\trandInt: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <low, high> interval\r\n\t\r\n\t\trandFloat: function ( low, high ) {\r\n\t\r\n\t\t\treturn low + Math.random() * ( high - low );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Random float from <-range/2, range/2> interval\r\n\t\r\n\t\trandFloatSpread: function ( range ) {\r\n\t\r\n\t\t\treturn range * ( 0.5 - Math.random() );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdegToRad: function () {\r\n\t\r\n\t\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\t\r\n\t\t\treturn function ( degrees ) {\r\n\t\r\n\t\t\t\treturn degrees * degreeToRadiansFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tradToDeg: function () {\r\n\t\r\n\t\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\t\r\n\t\t\treturn function ( radians ) {\r\n\t\r\n\t\t\t\treturn radians * radianToDegreesFactor;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tisPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnextPowerOfTwo: function ( value ) {\r\n\t\r\n\t\t\tvalue --;\r\n\t\t\tvalue |= value >> 1;\r\n\t\t\tvalue |= value >> 2;\r\n\t\t\tvalue |= value >> 4;\r\n\t\t\tvalue |= value >> 8;\r\n\t\t\tvalue |= value >> 16;\r\n\t\t\tvalue ++;\r\n\t\r\n\t\t\treturn value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Spline.js\r\n\t\r\n\t/**\r\n\t * Spline from Tween.js, slightly optimized (and trashed)\r\n\t * http://sole.github.com/tween.js/examples/05_spline.html\r\n\t *\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Spline = function ( points ) {\r\n\t\r\n\t\tthis.points = points;\r\n\t\r\n\t\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\t\tpoint, intPoint, weight, w2, w3,\r\n\t\tpa, pb, pc, pd;\r\n\t\r\n\t\tthis.initFromArray = function ( a ) {\r\n\t\r\n\t\t\tthis.points = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPoint = function ( k ) {\r\n\t\r\n\t\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\t\r\n\t\t\tpa = this.points[ c[ 0 ] ];\r\n\t\t\tpb = this.points[ c[ 1 ] ];\r\n\t\t\tpc = this.points[ c[ 2 ] ];\r\n\t\t\tpd = this.points[ c[ 3 ] ];\r\n\t\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\t\r\n\t\t\treturn v3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getControlPointsArray = function () {\r\n\t\r\n\t\t\tvar i, p, l = this.points.length,\r\n\t\t\t\tcoords = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tp = this.points[ i ];\r\n\t\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn coords;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// approximate length by summing linear segments\r\n\t\r\n\t\tthis.getLength = function ( nSubDivisions ) {\r\n\t\r\n\t\t\tvar i, index, nSamples, position,\r\n\t\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tchunkLengths = [],\r\n\t\t\t\ttotalLength = 0;\r\n\t\r\n\t\t\t// first point has 0 length\r\n\t\r\n\t\t\tchunkLengths[ 0 ] = 0;\r\n\t\r\n\t\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\t\r\n\t\t\tnSamples = this.points.length * nSubDivisions;\r\n\t\r\n\t\t\toldPosition.copy( this.points[ 0 ] );\r\n\t\r\n\t\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\t\r\n\t\t\t\tindex = i / nSamples;\r\n\t\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\ttmpVec.copy( position );\r\n\t\r\n\t\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\t\r\n\t\t\t\toldPosition.copy( position );\r\n\t\r\n\t\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\r\n\t\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\t\r\n\t\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\t\toldIntPoint = intPoint;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// last point ends with total length\r\n\t\r\n\t\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\t\r\n\t\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\t\r\n\t\t\tvar i, j,\r\n\t\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\t\trealDistance,\r\n\t\t\t\tsampling, position,\r\n\t\t\t\tnewpoints = [],\r\n\t\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\t\tsl = this.getLength();\r\n\t\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\t\r\n\t\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\t\r\n\t\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\t\r\n\t\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\t\r\n\t\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\t\r\n\t\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\t\r\n\t\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\t\r\n\t\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.points = newpoints;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/math/Triangle.js\r\n\t\r\n\t/**\r\n\t * @author bhouston / http://exocortex.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Triangle = function ( a, b, c ) {\r\n\t\r\n\t\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\t\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\t\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Triangle.normal = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tresult.subVectors( c, b );\r\n\t\t\tv0.subVectors( a, b );\r\n\t\t\tresult.cross( v0 );\r\n\t\r\n\t\t\tvar resultLengthSq = result.lengthSq();\r\n\t\t\tif ( resultLengthSq > 0 ) {\r\n\t\r\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn result.set( 0, 0, 0 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// static/instance method to calculate barycentric coordinates\r\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\n\tTHREE.Triangle.barycoordFromPoint = function () {\r\n\t\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c, optionalTarget ) {\r\n\t\r\n\t\t\tv0.subVectors( c, a );\r\n\t\t\tv1.subVectors( b, a );\r\n\t\t\tv2.subVectors( point, a );\r\n\t\r\n\t\t\tvar dot00 = v0.dot( v0 );\r\n\t\t\tvar dot01 = v0.dot( v1 );\r\n\t\t\tvar dot02 = v0.dot( v2 );\r\n\t\t\tvar dot11 = v1.dot( v1 );\r\n\t\t\tvar dot12 = v1.dot( v2 );\r\n\t\r\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t// collinear or singular triangle\r\n\t\t\tif ( denom === 0 ) {\r\n\t\r\n\t\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar invDenom = 1 / denom;\r\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\t\r\n\t\t\t// barycentric coordinates must always sum to 1\r\n\t\t\treturn result.set( 1 - u - v, v, u );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.containsPoint = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\treturn function ( point, a, b, c ) {\r\n\t\r\n\t\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\t\r\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Triangle.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Triangle,\r\n\t\r\n\t\tset: function ( a, b, c ) {\r\n\t\r\n\t\t\tthis.a.copy( a );\r\n\t\t\tthis.b.copy( b );\r\n\t\t\tthis.c.copy( c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\t\r\n\t\t\tthis.a.copy( points[ i0 ] );\r\n\t\t\tthis.b.copy( points[ i1 ] );\r\n\t\t\tthis.c.copy( points[ i2 ] );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( triangle ) {\r\n\t\r\n\t\t\tthis.a.copy( triangle.a );\r\n\t\t\tthis.b.copy( triangle.b );\r\n\t\t\tthis.c.copy( triangle.c );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tarea: function () {\r\n\t\r\n\t\t\tvar v0 = new THREE.Vector3();\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\t\tv1.subVectors( this.a, this.b );\r\n\t\r\n\t\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tmidpoint: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormal: function ( optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplane: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Plane();\r\n\t\r\n\t\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcontainsPoint: function ( point ) {\r\n\t\r\n\t\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tequals: function ( triangle ) {\r\n\t\r\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Clock.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Clock = function ( autoStart ) {\r\n\t\r\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.oldTime = 0;\r\n\t\tthis.elapsedTime = 0;\r\n\t\r\n\t\tthis.running = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Clock.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Clock,\r\n\t\r\n\t\tstart: function () {\r\n\t\r\n\t\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\tthis.oldTime = this.startTime;\r\n\t\t\tthis.running = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.getElapsedTime();\r\n\t\t\tthis.running = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetElapsedTime: function () {\r\n\t\r\n\t\t\tthis.getDelta();\r\n\t\t\treturn this.elapsedTime;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetDelta: function () {\r\n\t\r\n\t\t\tvar diff = 0;\r\n\t\r\n\t\t\tif ( this.autoStart && ! this.running ) {\r\n\t\r\n\t\t\t\tthis.start();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.running ) {\r\n\t\r\n\t\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t\t : Date.now();\r\n\t\r\n\t\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\t\tthis.oldTime = newTime;\r\n\t\r\n\t\t\t\tthis.elapsedTime += diff;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn diff;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/EventDispatcher.js\r\n\t\r\n\t/**\r\n\t * https://github.com/mrdoob/eventdispatcher.js/\r\n\t */\r\n\t\r\n\tTHREE.EventDispatcher = function () {};\r\n\t\r\n\tTHREE.EventDispatcher.prototype = {\r\n\t\r\n\t\tconstructor: THREE.EventDispatcher,\r\n\t\r\n\t\tapply: function ( object ) {\r\n\t\r\n\t\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] === undefined ) {\r\n\t\r\n\t\t\t\tlisteners[ type ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\t\r\n\t\t\t\tlisteners[ type ].push( listener );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\thasEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return false;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\r\n\t\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveEventListener: function ( type, listener ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tvar index = listenerArray.indexOf( listener );\r\n\t\r\n\t\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\t\tlistenerArray.splice( index, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispatchEvent: function ( event ) {\r\n\t\r\n\t\t\tif ( this._listeners === undefined ) return;\r\n\t\r\n\t\t\tvar listeners = this._listeners;\r\n\t\t\tvar listenerArray = listeners[ event.type ];\r\n\t\r\n\t\t\tif ( listenerArray !== undefined ) {\r\n\t\r\n\t\t\t\tevent.target = this;\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar length = listenerArray.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\t\tarray[ i ].call( this, event );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Raycaster.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author bhouston / http://exocortex.com/\r\n\t * @author stephomi / http://stephaneginier.com/\r\n\t */\r\n\t\r\n\t( function ( THREE ) {\r\n\t\r\n\t\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\t\r\n\t\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\tthis.near = near || 0;\r\n\t\t\tthis.far = far || Infinity;\r\n\t\r\n\t\t\tthis.params = {\r\n\t\t\t\tMesh: {},\r\n\t\t\t\tLine: {},\r\n\t\t\t\tLOD: {},\r\n\t\t\t\tPoints: { threshold: 1 },\r\n\t\t\t\tSprite: {}\r\n\t\t\t};\r\n\t\r\n\t\t\tObject.defineProperties( this.params, {\r\n\t\t\t\tPointCloud: {\r\n\t\t\t\t\tget: function () {\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\t\treturn this.Points;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction descSort( a, b ) {\r\n\t\r\n\t\t\treturn a.distance - b.distance;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tobject.raycast( raycaster, intersects );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tvar children = object.children;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tTHREE.Raycaster.prototype = {\r\n\t\r\n\t\t\tconstructor: THREE.Raycaster,\r\n\t\r\n\t\t\tlinePrecision: 1,\r\n\t\r\n\t\t\tset: function ( origin, direction ) {\r\n\t\r\n\t\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\t\r\n\t\t\t\tthis.ray.set( origin, direction );\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tsetFromCamera: function ( coords, camera ) {\r\n\t\r\n\t\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\t\r\n\t\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\t\r\n\t\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObject: function ( object, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tintersectObject( object, this, intersects, recursive );\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tintersectObjects: function ( objects, recursive ) {\r\n\t\r\n\t\t\t\tvar intersects = [];\r\n\t\r\n\t\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tintersects.sort( descSort );\r\n\t\r\n\t\t\t\treturn intersects;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}( THREE ) );\r\n\t\r\n\t// File:src/core/Object3D.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author elephantatwork / www.elephantatwork.ch\r\n\t */\r\n\t\r\n\tTHREE.Object3D = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Object3D';\r\n\t\r\n\t\tthis.parent = null;\r\n\t\tthis.children = [];\r\n\t\r\n\t\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar rotation = new THREE.Euler();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\t\r\n\t\tvar onRotationChange = function () {\r\n\t\r\n\t\t\tquaternion.setFromEuler( rotation, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar onQuaternionChange = function () {\r\n\t\r\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\trotation.onChange( onRotationChange );\r\n\t\tquaternion.onChange( onQuaternionChange );\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tposition: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: position\r\n\t\t\t},\r\n\t\t\trotation: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: rotation\r\n\t\t\t},\r\n\t\t\tquaternion: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: quaternion\r\n\t\t\t},\r\n\t\t\tscale: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: scale\r\n\t\t\t},\r\n\t\t\tmodelViewMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix4()\r\n\t\t\t},\r\n\t\t\tnormalMatrix: {\r\n\t\t\t\tvalue: new THREE.Matrix3()\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t\tthis.rotationAutoUpdate = true;\r\n\t\r\n\t\tthis.matrix = new THREE.Matrix4();\r\n\t\tthis.matrixWorld = new THREE.Matrix4();\r\n\t\r\n\t\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.receiveShadow = false;\r\n\t\r\n\t\tthis.frustumCulled = true;\r\n\t\tthis.renderOrder = 0;\r\n\t\r\n\t\tthis.userData = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\tTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\t\r\n\tTHREE.Object3D.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Object3D,\r\n\t\r\n\t\tget eulerOrder () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\treturn this.rotation.order;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset eulerOrder ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\t\r\n\t\t\tthis.rotation.order = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget useQuaternion () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset useQuaternion ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset renderDepth ( value ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\t\r\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\t\r\n\t\t\t// assumes axis is normalized\r\n\t\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromEuler: function ( euler ) {\r\n\t\r\n\t\t\tthis.quaternion.setFromEuler( euler, true );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromMatrix: function ( m ) {\r\n\t\r\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetRotationFromQuaternion: function ( q ) {\r\n\t\r\n\t\t\t// assumes q is normalized\r\n\t\r\n\t\t\tthis.quaternion.copy( q );\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateOnAxis: function () {\r\n\t\r\n\t\t\t// rotate object on axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar q1 = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( axis, angle ) {\r\n\t\r\n\t\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\t\r\n\t\t\t\tthis.quaternion.multiply( q1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( angle ) {\r\n\t\r\n\t\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateOnAxis: function () {\r\n\t\r\n\t\t\t// translate object by distance along axis in object space\r\n\t\t\t// axis is assumed to be normalized\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( axis, distance ) {\r\n\t\r\n\t\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\t\r\n\t\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function ( distance, axis ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\t\treturn this.translateOnAxis( axis, distance );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttranslateX: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateY: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslateZ: function () {\r\n\t\r\n\t\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\t\treturn function ( distance ) {\r\n\t\r\n\t\t\t\treturn this.translateOnAxis( v1, distance );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlocalToWorld: function ( vector ) {\r\n\t\r\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tworldToLocal: function () {\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\t\r\n\t\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( vector ) {\r\n\t\r\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tadd: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.add( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object === this ) {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Object3D ) {\r\n\t\r\n\t\t\t\tif ( object.parent !== null ) {\r\n\t\r\n\t\t\t\t\tobject.parent.remove( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.parent = this;\r\n\t\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\t\r\n\t\t\t\tthis.children.push( object );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( object ) {\r\n\t\r\n\t\t\tif ( arguments.length > 1 ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tthis.remove( arguments[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = this.children.indexOf( object );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tobject.parent = null;\r\n\t\r\n\t\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\t\r\n\t\t\t\tthis.children.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetChildByName: function ( name ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\t\treturn this.getObjectByName( name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectById: function ( id ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'id', id );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByName: function ( name ) {\r\n\t\r\n\t\t\treturn this.getObjectByProperty( 'name', name );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetObjectByProperty: function ( name, value ) {\r\n\t\r\n\t\t\tif ( this[ name ] === value ) return this;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\t\r\n\t\t\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn object;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn undefined;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldPosition: function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetWorldQuaternion: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldRotation: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldScale: function () {\r\n\t\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.updateMatrixWorld( true );\r\n\t\r\n\t\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\t\r\n\t\t\t\treturn result;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tgetWorldDirection: function () {\r\n\t\r\n\t\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\traycast: function () {},\r\n\t\r\n\t\ttraverse: function ( callback ) {\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverse( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseVisible: function ( callback ) {\r\n\t\r\n\t\t\tif ( this.visible === false ) return;\r\n\t\r\n\t\t\tcallback( this );\r\n\t\r\n\t\t\tvar children = this.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tchildren[ i ].traverseVisible( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttraverseAncestors: function ( callback ) {\r\n\t\r\n\t\t\tvar parent = this.parent;\r\n\t\r\n\t\t\tif ( parent !== null ) {\r\n\t\r\n\t\t\t\tcallback( parent );\r\n\t\r\n\t\t\t\tparent.traverseAncestors( callback );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrix: function () {\r\n\t\r\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\t\r\n\t\t\tthis.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateMatrixWorld: function ( force ) {\r\n\t\r\n\t\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\t\r\n\t\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\t\r\n\t\t\t\tif ( this.parent === null ) {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\t\r\n\t\t\t\tforce = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// update children\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar isRootObject = ( meta === undefined );\r\n\t\r\n\t\t\tvar data = {};\r\n\t\r\n\t\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t\t// not providing it implies that this is the root object\r\n\t\t\t// being serialized.\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\t// initialize meta obj\r\n\t\t\t\tmeta = {\r\n\t\t\t\t\tgeometries: {},\r\n\t\t\t\t\tmaterials: {},\r\n\t\t\t\t\ttextures: {},\r\n\t\t\t\t\timages: {}\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tdata.metadata = {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Object',\r\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// standard Object3D serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\t\r\n\t\t\tdata.matrix = this.matrix.toArray();\r\n\t\r\n\t\t\tif ( this.children.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.children = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {};\r\n\t\r\n\t\t\tif ( isRootObject ) {\r\n\t\r\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\t\tvar images = extractFromCache( meta.images );\r\n\t\r\n\t\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\t\tif ( images.length > 0 ) output.images = images;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.object = data;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t\t// extract data from the cache hash\r\n\t\t\t// remove metadata on each item\r\n\t\t\t// and return as array\r\n\t\t\tfunction extractFromCache ( cache ) {\r\n\t\r\n\t\t\t\tvar values = [];\r\n\t\t\t\tfor ( var key in cache ) {\r\n\t\r\n\t\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\t\tdelete data.metadata;\r\n\t\t\t\t\tvalues.push( data );\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\treturn values;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( recursive ) {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this, recursive );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source, recursive ) {\r\n\t\r\n\t\t\tif ( recursive === undefined ) recursive = true;\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.up.copy( source.up );\r\n\t\r\n\t\t\tthis.position.copy( source.position );\r\n\t\t\tthis.quaternion.copy( source.quaternion );\r\n\t\t\tthis.scale.copy( source.scale );\r\n\t\r\n\t\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\t\r\n\t\t\tthis.matrix.copy( source.matrix );\r\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\t\r\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\tthis.castShadow = source.castShadow;\r\n\t\t\tthis.receiveShadow = source.receiveShadow;\r\n\t\r\n\t\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\t\tthis.renderOrder = source.renderOrder;\r\n\t\r\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\t\r\n\t\t\tif ( recursive === true ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\t\tthis.add( child.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\t\r\n\tTHREE.Object3DIdCount = 0;\r\n\t\r\n\t// File:src/core/Face3.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\t\r\n\t\tthis.a = a;\r\n\t\tthis.b = b;\r\n\t\tthis.c = c;\r\n\t\r\n\t\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\t\r\n\t\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\t\r\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Face3.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Face3,\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.a = source.a;\r\n\t\t\tthis.b = source.b;\r\n\t\t\tthis.c = source.c;\r\n\t\r\n\t\t\tthis.normal.copy( source.normal );\r\n\t\t\tthis.color.copy( source.color );\r\n\t\r\n\t\t\tthis.materialIndex = source.materialIndex;\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Face4.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/BufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.itemSize = itemSize;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.array.length / this.itemSize;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.itemSize = source.itemSize;\r\n\t\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.itemSize;\r\n\t\t\tindex2 *= attribute.itemSize;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyArray: function ( array ) {\r\n\t\r\n\t\t\tthis.array.set( array );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyColorsArray: function ( colors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar color = colors[ i ];\r\n\t\r\n\t\t\t\tif ( color === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\t\tcolor = new THREE.Color();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\t\tarray[ offset ++ ] = color.b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyIndicesArray: function ( indices ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar index = indices[ i ];\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\t\tarray[ offset ++ ] = index.c;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector2sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector2();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector3sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyVector4sArray: function ( vectors ) {\r\n\t\r\n\t\t\tvar array = this.array, offset = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar vector = vectors[ i ];\r\n\t\r\n\t\t\t\tif ( vector === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\t\tvector = new THREE.Vector4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\t\tarray[ offset ++ ] = vector.w;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex *= this.itemSize;\r\n\t\r\n\t\t\tthis.array[ index + 0 ] = x;\r\n\t\t\tthis.array[ index + 1 ] = y;\r\n\t\t\tthis.array[ index + 2 ] = z;\r\n\t\t\tthis.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t\r\n\tTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\t\r\n\t\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Deprecated\r\n\t\r\n\tTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\t\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\n\tTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\t\r\n\tTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.array = array;\r\n\t\tthis.stride = stride;\r\n\t\r\n\t\tthis.dynamic = false;\r\n\t\tthis.updateRange = { offset: 0, count: - 1 };\r\n\t\r\n\t\tthis.version = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InterleavedBuffer.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBuffer,\r\n\t\r\n\t\tget length () {\r\n\t\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count () {\r\n\t\r\n\t\t\treturn this.array.length / this.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDynamic: function ( value ) {\r\n\t\r\n\t\t\tthis.dynamic = value;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.array = new source.array.constructor( source.array );\r\n\t\t\tthis.stride = source.stride;\r\n\t\t\tthis.dynamic = source.dynamic;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopyAt: function ( index1, attribute, index2 ) {\r\n\t\r\n\t\t\tindex1 *= this.stride;\r\n\t\t\tindex2 *= attribute.stride;\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset: function ( value, offset ) {\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tthis.array.set( value, offset );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InstancedInterleavedBuffer.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\t\r\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\n\tTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\t\r\n\tTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/InterleavedBufferAttribute.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.data = interleavedBuffer;\r\n\t\tthis.itemSize = itemSize;\r\n\t\tthis.offset = offset;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.InterleavedBufferAttribute.prototype = {\r\n\t\r\n\t\tconstructor: THREE.InterleavedBufferAttribute,\r\n\t\r\n\t\tget length() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget count() {\r\n\t\r\n\t\t\treturn this.data.array.length / this.data.stride;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetX: function ( index, x ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetY: function ( index, y ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetZ: function ( index, z ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetW: function ( index, w ) {\r\n\t\r\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetX: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetY: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetZ: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetW: function ( index ) {\r\n\t\r\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXY: function ( index, x, y ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZ: function ( index, x, y, z ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetXYZW: function ( index, x, y, z, w ) {\r\n\t\r\n\t\t\tindex = index * this.data.stride + this.offset;\r\n\t\r\n\t\t\tthis.data.array[ index + 0 ] = x;\r\n\t\t\tthis.data.array[ index + 1 ] = y;\r\n\t\t\tthis.data.array[ index + 2 ] = z;\r\n\t\t\tthis.data.array[ index + 3 ] = w;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/core/Geometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author kile / http://kile.stravaganza.org/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\tTHREE.Geometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Geometry';\r\n\t\r\n\t\tthis.vertices = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\tthis.morphTargets = [];\r\n\t\tthis.morphColors = [];\r\n\t\tthis.morphNormals = [];\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\tthis.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.elementsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.lineDistancesNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Geometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Geometry,\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertex.applyMatrix4( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = true;\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tfromBufferGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tvar vertices = attributes.position.array;\r\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\t\r\n\t\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\t\r\n\t\t\tvar tempNormals = [];\r\n\t\t\tvar tempUVs = [];\r\n\t\t\tvar tempUVs2 = [];\r\n\t\r\n\t\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\t\r\n\t\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t\t\tif ( normals !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( colors !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar addFace = function ( a, b, c ) {\r\n\t\r\n\t\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\t\r\n\t\t\t\tscope.faces.push( face );\r\n\t\r\n\t\t\t\tif ( uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( uvs2 !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( indices !== undefined ) {\r\n\t\r\n\t\t\t\tvar groups = geometry.groups;\r\n\t\r\n\t\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\t\r\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalize: function () {\r\n\t\r\n\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\tvar center = this.boundingSphere.center;\r\n\t\t\tvar radius = this.boundingSphere.radius;\r\n\t\r\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.set(\r\n\t\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t\t0, 0, 0, 1\r\n\t\t\t);\r\n\t\r\n\t\t\tthis.applyMatrix( matrix );\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\t\tvar vC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\tcb.normalize();\r\n\t\r\n\t\t\t\tface.normal.copy( cb );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\t\r\n\t\t\tvar v, vl, f, fl, face, vertices;\r\n\t\r\n\t\t\tvertices = new Array( this.vertices.length );\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( areaWeighted ) {\r\n\t\r\n\t\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\t\r\n\t\t\t\tvar vA, vB, vC;\r\n\t\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\t\tvC = this.vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\t\tvertices[ face.c ].add( cb );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\t\r\n\t\t\t\tvertices[ v ].normalize();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeMorphNormals: function () {\r\n\t\r\n\t\t\tvar i, il, f, fl, face;\r\n\t\r\n\t\t\t// save original normals\r\n\t\t\t// - create temp variables on first access\r\n\t\t\t//   otherwise just copy (for faster repeated calls)\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\t\r\n\t\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\t\ttmpGeo.faces = this.faces;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t// create on first access\r\n\t\r\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\t\r\n\t\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\t\r\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\t\r\n\t\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\t\r\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\t\r\n\t\t\t\t// set vertices to morph target\r\n\t\r\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t// compute morph normals\r\n\t\r\n\t\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\t\ttmpGeo.computeVertexNormals();\r\n\t\r\n\t\t\t\t// store morph normals\r\n\t\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\t\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\t\r\n\t\t\t\t\tfaceNormal.copy( face.normal );\r\n\t\r\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore original normals\r\n\t\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ f ];\r\n\t\r\n\t\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeLineDistances: function () {\r\n\t\r\n\t\t\tvar d = 0;\r\n\t\t\tvar vertices = this.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tif ( i > 0 ) {\r\n\t\r\n\t\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lineDistances[ i ] = d;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normalMatrix,\r\n\t\t\tvertexOffset = this.vertices.length,\r\n\t\t\tvertices1 = this.vertices,\r\n\t\t\tvertices2 = geometry.vertices,\r\n\t\t\tfaces1 = this.faces,\r\n\t\t\tfaces2 = geometry.faces,\r\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\t\r\n\t\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\t\r\n\t\t\tif ( matrix !== undefined ) {\r\n\t\r\n\t\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// vertices\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices2[ i ];\r\n\t\r\n\t\t\t\tvar vertexCopy = vertex.clone();\r\n\t\r\n\t\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\t\r\n\t\t\t\tvertices1.push( vertexCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// faces\r\n\t\r\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\t\tfaceVertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\t\tfaceCopy.normal.copy( face.normal );\r\n\t\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\t\r\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.color.copy( face.color );\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\t\r\n\t\t\t\tfaces1.push( faceCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uvs\r\n\t\r\n\t\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\t\r\n\t\t\t\tif ( uv === undefined ) {\r\n\t\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvs1.push( uvCopy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmergeMesh: function ( mesh ) {\r\n\t\r\n\t\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\t\r\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/*\r\n\t\t * Checks for duplicate vertices with hashmap.\r\n\t\t * Duplicated vertices are removed\r\n\t\t * and faces' vertices are updated.\r\n\t\t */\r\n\t\r\n\t\tmergeVertices: function () {\r\n\t\r\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\t\tvar unique = [], changes = [];\r\n\t\r\n\t\t\tvar v, key;\r\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\t\tvar i, il, face;\r\n\t\t\tvar indices, j, jl;\r\n\t\r\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tv = this.vertices[ i ];\r\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\t\r\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t\t// have to remove them from the geometry.\r\n\t\t\tvar faceIndicesToRemove = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = this.faces[ i ];\r\n\t\r\n\t\t\t\tface.a = changes[ face.a ];\r\n\t\t\t\tface.b = changes[ face.b ];\r\n\t\t\t\tface.c = changes[ face.c ];\r\n\t\r\n\t\t\t\tindices = [ face.a, face.b, face.c ];\r\n\t\r\n\t\t\t\tvar dupIndex = - 1;\r\n\t\r\n\t\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\r\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\t\r\n\t\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\r\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\t\r\n\t\t\t\tthis.faces.splice( idx, 1 );\r\n\t\r\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Use unique set of vertices\r\n\t\r\n\t\t\tvar diff = this.vertices.length - unique.length;\r\n\t\t\tthis.vertices = unique;\r\n\t\t\treturn diff;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Geometry',\r\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Geometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertices = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = [];\r\n\t\t\tvar normals = [];\r\n\t\t\tvar normalsHash = {};\r\n\t\t\tvar colors = [];\r\n\t\t\tvar colorsHash = {};\r\n\t\t\tvar uvs = [];\r\n\t\t\tvar uvsHash = {};\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = this.faces[ i ];\r\n\t\r\n\t\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\t\r\n\t\t\t\tvar faceType = 0;\r\n\t\r\n\t\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\t\r\n\t\t\t\tfaces.push( faceType );\r\n\t\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\t\tfaces.push(\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t\t);\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction setBit( value, position, enabled ) {\r\n\t\r\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getNormalIndex( normal ) {\r\n\t\r\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\t\r\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\t\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getColorIndex( color ) {\r\n\t\r\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\t\r\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\t\tcolors.push( color.getHex() );\r\n\t\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getUvIndex( uv ) {\r\n\t\r\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\t\r\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\t\tuvs.push( uv.x, uv.y );\r\n\t\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = {};\r\n\t\r\n\t\t\tdata.data.vertices = vertices;\r\n\t\t\tdata.data.normals = normals;\r\n\t\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\t\tdata.data.faces = faces;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.vertices = [];\r\n\t\t\tthis.faces = [];\r\n\t\t\tthis.faceVertexUvs = [ [] ];\r\n\t\r\n\t\t\tvar vertices = source.vertices;\r\n\t\r\n\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar faces = source.faces;\r\n\t\r\n\t\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\t\r\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\t\r\n\t\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar uv = uvs[ k ];\r\n\t\r\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\t\r\n\tTHREE.GeometryIdCount = 0;\r\n\t\r\n\t// File:src/core/DirectGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'DirectGeometry';\r\n\t\r\n\t\tthis.indices = [];\r\n\t\tthis.vertices = [];\r\n\t\tthis.normals = [];\r\n\t\tthis.colors = [];\r\n\t\tthis.uvs = [];\r\n\t\tthis.uvs2 = [];\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.morphTargets = {};\r\n\t\r\n\t\tthis.skinWeights = [];\r\n\t\tthis.skinIndices = [];\r\n\t\r\n\t\t// this.lineDistances = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\t// update flags\r\n\t\r\n\t\tthis.verticesNeedUpdate = false;\r\n\t\tthis.normalsNeedUpdate = false;\r\n\t\tthis.colorsNeedUpdate = false;\r\n\t\tthis.uvsNeedUpdate = false;\r\n\t\tthis.groupsNeedUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.DirectGeometry,\r\n\t\r\n\t\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\t\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeGroups: function ( geometry ) {\r\n\t\r\n\t\t\tvar group;\r\n\t\t\tvar groups = [];\r\n\t\t\tvar materialIndex;\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t// materials\r\n\t\r\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\t\r\n\t\t\t\t\tmaterialIndex = face.materialIndex;\r\n\t\r\n\t\t\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group !== undefined ) {\r\n\t\r\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\tgroups.push( group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.groups = groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\r\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\tvar morphTargetsLength = morphTargets.length;\r\n\t\r\n\t\t\tif ( morphTargetsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsPosition = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar morphNormals = geometry.morphNormals;\r\n\t\t\tvar morphNormalsLength = morphNormals.length;\r\n\t\r\n\t\t\tif ( morphNormalsLength > 0 ) {\r\n\t\r\n\t\t\t\tvar morphTargetsNormal = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skins\r\n\t\r\n\t\t\tvar skinIndices = geometry.skinIndices;\r\n\t\t\tvar skinWeights = geometry.skinWeights;\r\n\t\r\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\t\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\t\r\n\t\t\t\tif ( vertexNormals.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\t\r\n\t\t\t\tif ( vertexColors.length === 3 ) {\r\n\t\r\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar color = face.color;\r\n\t\r\n\t\t\t\t\tthis.colors.push( color, color, color );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\t\r\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\t\r\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\t\r\n\t\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// morphs\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\t\r\n\t\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\t\r\n\t\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// skins\r\n\t\r\n\t\t\t\tif ( hasSkinIndices ) {\r\n\t\r\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( hasSkinWeights ) {\r\n\t\r\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.computeGroups( geometry );\r\n\t\r\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\t\r\n\t// File:src/core/BufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometry = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'BufferGeometry';\r\n\t\r\n\t\tthis.index = null;\r\n\t\tthis.attributes = {};\r\n\t\r\n\t\tthis.morphAttributes = {};\r\n\t\r\n\t\tthis.groups = [];\r\n\t\r\n\t\tthis.boundingBox = null;\r\n\t\tthis.boundingSphere = null;\r\n\t\r\n\t\tthis.drawRange = { start: 0, count: Infinity };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometry.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometry,\r\n\t\r\n\t\taddIndex: function ( index ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\t\tthis.setIndex( index );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetIndex: function () {\r\n\t\r\n\t\t\treturn this.index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetIndex: function ( index ) {\r\n\t\r\n\t\t\tthis.index = index;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddAttribute: function ( name, attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\t\r\n\t\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( name === 'index' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\t\tthis.setIndex( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.attributes[ name ] = attribute;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetAttribute: function ( name ) {\r\n\t\r\n\t\t\treturn this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremoveAttribute: function ( name ) {\r\n\t\r\n\t\t\tdelete this.attributes[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget drawcalls() {\r\n\t\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget offsets() {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\r\n\t\t\tif ( indexOffset !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\t\tthis.addGroup( start, count );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearDrawCalls: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\t\tthis.clearGroups();\r\n\t\r\n\t\t},\r\n\t\r\n\t\taddGroup: function ( start, count, materialIndex ) {\r\n\t\r\n\t\t\tthis.groups.push( {\r\n\t\r\n\t\t\t\tstart: start,\r\n\t\t\t\tcount: count,\r\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclearGroups: function () {\r\n\t\r\n\t\t\tthis.groups = [];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetDrawRange: function ( start, count ) {\r\n\t\r\n\t\t\tthis.drawRange.start = start;\r\n\t\t\tthis.drawRange.count = count;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tapplyMatrix: function ( matrix ) {\r\n\t\r\n\t\t\tvar position = this.attributes.position;\r\n\t\r\n\t\t\tif ( position !== undefined ) {\r\n\t\r\n\t\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar normal = this.attributes.normal;\r\n\t\r\n\t\t\tif ( normal !== undefined ) {\r\n\t\r\n\t\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\t\r\n\t\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\t\tnormal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.computeBoundingSphere();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\trotateX: function () {\r\n\t\r\n\t\t\t// rotate geometry around world x-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateX( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationX( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateY: function () {\r\n\t\r\n\t\t\t// rotate geometry around world y-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateY( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationY( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\trotateZ: function () {\r\n\t\r\n\t\t\t// rotate geometry around world z-axis\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function rotateZ( angle ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeRotationZ( angle );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\ttranslate: function () {\r\n\t\r\n\t\t\t// translate geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function translate( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeTranslation( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tscale: function () {\r\n\t\r\n\t\t\t// scale geometry\r\n\t\r\n\t\t\tvar m1;\r\n\t\r\n\t\t\treturn function scale( x, y, z ) {\r\n\t\r\n\t\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\t\r\n\t\t\t\tm1.makeScale( x, y, z );\r\n\t\r\n\t\t\t\tthis.applyMatrix( m1 );\r\n\t\r\n\t\t\t\treturn this;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tlookAt: function () {\r\n\t\r\n\t\t\tvar obj;\r\n\t\r\n\t\t\treturn function lookAt( vector ) {\r\n\t\r\n\t\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\t\r\n\t\t\t\tobj.lookAt( vector );\r\n\t\r\n\t\t\t\tobj.updateMatrix();\r\n\t\r\n\t\t\t\tthis.applyMatrix( obj.matrix );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcenter: function () {\r\n\t\r\n\t\t\tthis.computeBoundingBox();\r\n\t\r\n\t\t\tvar offset = this.boundingBox.center().negate();\r\n\t\r\n\t\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\t\r\n\t\t\treturn offset;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetFromObject: function ( object ) {\r\n\t\r\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\t\r\n\t\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\t\tthis.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdateFromObject: function ( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tvar direct = geometry.__directGeometry;\r\n\t\r\n\t\t\t\tif ( direct === undefined ) {\r\n\t\r\n\t\t\t\t\treturn this.fromGeometry( geometry );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t\tgeometry = direct;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.position;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.normal;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.color;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\t\r\n\t\t\t\tvar attribute = this.attributes.lineDistance;\r\n\t\r\n\t\t\t\tif ( attribute !== undefined ) {\r\n\t\r\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.groupsNeedUpdate ) {\r\n\t\r\n\t\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t\tgeometry.groupsNeedUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\t\r\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfromDirectGeometry: function ( geometry ) {\r\n\t\r\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\t\r\n\t\t\tif ( geometry.normals.length > 0 ) {\r\n\t\r\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.colors.length > 0 ) {\r\n\t\r\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.uvs2.length > 0 ) {\r\n\t\r\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.indices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// groups\r\n\t\r\n\t\t\tthis.groups = geometry.groups;\r\n\t\r\n\t\t\t// morphs\r\n\t\r\n\t\t\tfor ( var name in geometry.morphTargets ) {\r\n\t\r\n\t\t\t\tvar array = [];\r\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\r\n\t\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\t\r\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.morphAttributes[ name ] = array;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning\r\n\t\r\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\t\r\n\t\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeBoundingBox: function () {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingBox === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\t\tbb.makeEmpty();\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbb.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\t\r\n\t\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeBoundingSphere: function () {\r\n\t\r\n\t\t\tvar box = new THREE.Box3();\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\treturn function () {\r\n\t\r\n\t\t\t\tif ( this.boundingSphere === null ) {\r\n\t\r\n\t\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar positions = this.attributes.position.array;\r\n\t\r\n\t\t\t\tif ( positions ) {\r\n\t\r\n\t\t\t\t\tbox.makeEmpty();\r\n\t\r\n\t\t\t\t\tvar center = this.boundingSphere.center;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tbox.expandByPoint( vector );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tbox.center( center );\r\n\t\r\n\t\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\t\r\n\t\t\t\t\tvar maxRadiusSq = 0;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\t\r\n\t\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t}(),\r\n\t\r\n\t\tcomputeFaceNormals: function () {\r\n\t\r\n\t\t\t// backwards compatibility\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeVertexNormals: function () {\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\t\tvar attributes = this.attributes;\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( attributes.position ) {\r\n\t\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( attributes.normal === undefined ) {\r\n\t\r\n\t\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// reset existing normals to zero\r\n\t\r\n\t\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\t\r\n\t\t\t\tvar vA, vB, vC,\r\n\t\r\n\t\t\t\tpA = new THREE.Vector3(),\r\n\t\t\t\tpB = new THREE.Vector3(),\r\n\t\t\t\tpC = new THREE.Vector3(),\r\n\t\r\n\t\t\t\tcb = new THREE.Vector3(),\r\n\t\t\t\tab = new THREE.Vector3();\r\n\t\r\n\t\t\t\t// indexed elements\r\n\t\r\n\t\t\t\tif ( index ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tif ( groups.length === 0 ) {\r\n\t\r\n\t\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\t\r\n\t\t\t\t\t\tvar group = groups[ j ];\r\n\t\r\n\t\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\t\tvar count = group.count;\r\n\t\r\n\t\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\t\r\n\t\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\t\r\n\t\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\t\r\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.normalizeNormals();\r\n\t\r\n\t\t\t\tattributes.normal.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeTangents: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcomputeOffsets: function ( size ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\t\r\n\t\t},\r\n\t\r\n\t\tmerge: function ( geometry, offset ) {\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\t\r\n\t\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\t\tvar attributeArray1 = attribute1.array;\r\n\t\r\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\t\tvar attributeArray2 = attribute2.array;\r\n\t\r\n\t\t\t\tvar attributeSize = attribute2.itemSize;\r\n\t\r\n\t\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\t\r\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalizeNormals: function () {\r\n\t\r\n\t\t\tvar normals = this.attributes.normal.array;\r\n\t\r\n\t\t\tvar x, y, z, n;\r\n\t\r\n\t\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\tx = normals[ i ];\r\n\t\t\t\ty = normals[ i + 1 ];\r\n\t\t\t\tz = normals[ i + 2 ];\r\n\t\r\n\t\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\t\r\n\t\t\t\tnormals[ i ] *= n;\r\n\t\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\t\tnormals[ i + 2 ] *= n;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard BufferGeometry serialization\r\n\t\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.parameters !== undefined ) {\r\n\t\r\n\t\t\t\tvar parameters = this.parameters;\r\n\t\r\n\t\t\t\tfor ( var key in parameters ) {\r\n\t\r\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn data;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.data = { attributes: {} };\r\n\t\r\n\t\t\tvar index = this.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\t\r\n\t\t\t\tdata.data.index = {\r\n\t\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = this.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\r\n\t\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\t\r\n\t\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\t\tarray: array\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = this.groups;\r\n\t\r\n\t\t\tif ( groups.length > 0 ) {\r\n\t\r\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = this.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== null ) {\r\n\t\r\n\t\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tvar index = source.index;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = source.attributes;\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ name ];\r\n\t\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = source.groups;\r\n\t\r\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\tthis.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\t\r\n\tTHREE.BufferGeometry.MaxIndex = 65535;\r\n\t\r\n\t// File:src/core/InstancedBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.InstancedBufferGeometry = function () {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'InstancedBufferGeometry';\r\n\t\tthis.maxInstancedCount = undefined;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\t\r\n\t\tthis.groups.push( {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tinstances: instances\r\n\t\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tvar index = source.index;\r\n\t\r\n\t\tif ( index !== null ) {\r\n\t\r\n\t\t\tthis.setIndex( index.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar attributes = source.attributes;\r\n\t\r\n\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar groups = source.groups;\r\n\t\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\t\r\n\t// File:src/cameras/Camera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.Camera = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Camera';\r\n\t\r\n\t\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\t\tthis.projectionMatrix = new THREE.Matrix4();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\t\r\n\tTHREE.Camera.prototype.getWorldDirection = function () {\r\n\t\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\r\n\t\treturn function ( optionalTarget ) {\r\n\t\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\t\r\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.lookAt = function () {\r\n\t\r\n\t\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\t\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\t\r\n\t\treturn function ( vector ) {\r\n\t\r\n\t\t\tm1.lookAt( this.position, vector, this.up );\r\n\t\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.Camera.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Camera.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/CubeCamera.js\r\n\t\r\n\t/**\r\n\t * Camera for rendering cube maps\r\n\t *\t- renders scene into axis-aligned cube\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'CubeCamera';\r\n\t\r\n\t\tvar fov = 90, aspect = 1;\r\n\t\r\n\t\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPX.up.set( 0, - 1, 0 );\r\n\t\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\t\tthis.add( cameraPX );\r\n\t\r\n\t\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNX.up.set( 0, - 1, 0 );\r\n\t\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\t\tthis.add( cameraNX );\r\n\t\r\n\t\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPY.up.set( 0, 0, 1 );\r\n\t\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\t\tthis.add( cameraPY );\r\n\t\r\n\t\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNY.up.set( 0, 0, - 1 );\r\n\t\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\t\tthis.add( cameraNY );\r\n\t\r\n\t\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraPZ.up.set( 0, - 1, 0 );\r\n\t\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\t\tthis.add( cameraPZ );\r\n\t\r\n\t\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\t\tcameraNZ.up.set( 0, - 1, 0 );\r\n\t\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\t\tthis.add( cameraNZ );\r\n\t\r\n\t\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\t\r\n\t\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\t\r\n\t\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\t\r\n\t\t\tvar renderTarget = this.renderTarget;\r\n\t\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = false;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 0;\r\n\t\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 1;\r\n\t\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 2;\r\n\t\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 3;\r\n\t\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 4;\r\n\t\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\t\r\n\t\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\t\r\n\t\t\trenderTarget.activeCubeFace = 5;\r\n\t\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\t\r\n\t\t\trenderer.setRenderTarget( null );\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\t\r\n\t// File:src/cameras/OrthographicCamera.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'OrthographicCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.left = left;\r\n\t\tthis.right = right;\r\n\t\tthis.top = top;\r\n\t\tthis.bottom = bottom;\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\t\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/cameras/PerspectiveCamera.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author greggman / http://games.greggman.com/\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\t\r\n\t\tTHREE.Camera.call( this );\r\n\t\r\n\t\tthis.type = 'PerspectiveCamera';\r\n\t\r\n\t\tthis.zoom = 1;\r\n\t\r\n\t\tthis.fov = fov !== undefined ? fov : 50;\r\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\t\tthis.near = near !== undefined ? near : 0.1;\r\n\t\tthis.far = far !== undefined ? far : 2000;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\n\tTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\t\r\n\t\r\n\t/**\r\n\t * Uses Focal Length (in mm) to estimate and set FOV\r\n\t * 35mm (full-frame) camera is used if frame size is not specified;\r\n\t * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\t\r\n\t\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\t\r\n\t\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\t\r\n\t\tthis.fullWidth = fullWidth;\r\n\t\tthis.fullHeight = fullHeight;\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\tthis.updateProjectionMatrix();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\t\r\n\t\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\t\r\n\t\tif ( this.fullWidth ) {\r\n\t\r\n\t\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\t\tvar bottom = - top;\r\n\t\t\tvar left = aspect * bottom;\r\n\t\t\tvar right = aspect * top;\r\n\t\t\tvar width = Math.abs( right - left );\r\n\t\t\tvar height = Math.abs( top - bottom );\r\n\t\r\n\t\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\t\tthis.near,\r\n\t\t\t\tthis.far\r\n\t\t\t);\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\t\r\n\t\tthis.zoom = source.zoom;\r\n\t\t\r\n\t\treturn this;\r\n\t\t\t\r\n\t};\r\n\t\r\n\tTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.aspect = this.aspect;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/Light.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Light = function ( color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Light';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Light.prototype.constructor = THREE.Light;\r\n\t\r\n\tTHREE.Light.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/lights/AmbientLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AmbientLight = function ( color ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'AmbientLight';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\t\r\n\tTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/DirectionalLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLight = function ( color, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'DirectionalLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\r\n\t\tthis.shadowCameraLeft = - 500;\r\n\t\tthis.shadowCameraRight = 500;\r\n\t\tthis.shadowCameraTop = 500;\r\n\t\tthis.shadowCameraBottom = - 500;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\t\r\n\tTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\r\n\t\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\t\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\t\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\t\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/HemisphereLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\t\r\n\t\tTHREE.Light.call( this, skyColor );\r\n\t\r\n\t\tthis.type = 'HemisphereLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.groundColor = new THREE.Color( groundColor );\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\t\r\n\tTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\t\tthis.intensity = source.intensity;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.groundColor = this.groundColor.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/PointLight.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'PointLight';\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\t\r\n\tTHREE.PointLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/lights/SpotLight.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\t\r\n\t\tTHREE.Light.call( this, color );\r\n\t\r\n\t\tthis.type = 'SpotLight';\r\n\t\r\n\t\tthis.position.set( 0, 1, 0 );\r\n\t\tthis.updateMatrix();\r\n\t\r\n\t\tthis.target = new THREE.Object3D();\r\n\t\r\n\t\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\t\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\t\r\n\t\tthis.castShadow = false;\r\n\t\tthis.onlyShadow = false;\r\n\t\r\n\t\tthis.shadowCameraNear = 50;\r\n\t\tthis.shadowCameraFar = 5000;\r\n\t\tthis.shadowCameraFov = 50;\r\n\t\r\n\t\tthis.shadowCameraVisible = false;\r\n\t\r\n\t\tthis.shadowBias = 0;\r\n\t\tthis.shadowDarkness = 0.5;\r\n\t\r\n\t\tthis.shadowMapWidth = 512;\r\n\t\tthis.shadowMapHeight = 512;\r\n\t\r\n\t\tthis.shadowMap = null;\r\n\t\tthis.shadowMapSize = null;\r\n\t\tthis.shadowCamera = null;\r\n\t\tthis.shadowMatrix = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\n\tTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\t\r\n\tTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.intensity = source.intensity;\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.exponent = source.exponent;\r\n\t\tthis.decay = source.decay;\r\n\t\r\n\t\tthis.target = source.target.clone();\r\n\t\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.onlyShadow = source.onlyShadow;\r\n\t\r\n\t\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\t\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\t\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\t\r\n\t\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\t\r\n\t\tthis.shadowBias = source.shadowBias;\r\n\t\tthis.shadowDarkness = source.shadowDarkness;\r\n\t\r\n\t\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\t\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\t\r\n\t\treturn this;\r\n\t}\r\n\t\r\n\tTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\t\tdata.object.distance = this.distance;\r\n\t\tdata.object.angle = this.angle;\r\n\t\tdata.object.exponent = this.exponent;\r\n\t\tdata.object.decay = this.decay;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Cache.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Cache = {\r\n\t\r\n\t\tenabled: false,\r\n\t\r\n\t\tfiles: {},\r\n\t\r\n\t\tadd: function ( key, file ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\t\r\n\t\t\tthis.files[ key ] = file;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( key ) {\r\n\t\r\n\t\t\tif ( this.enabled === false ) return;\r\n\t\r\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\t\r\n\t\t\treturn this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tremove: function ( key ) {\r\n\t\r\n\t\t\tdelete this.files[ key ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclear: function () {\r\n\t\r\n\t\t\tthis.files = {};\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/Loader.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Loader = function () {\r\n\t\r\n\t\tthis.onLoadStart = function () {};\r\n\t\tthis.onLoadProgress = function () {};\r\n\t\tthis.onLoadComplete = function () {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Loader,\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\textractUrlBase: function ( url ) {\r\n\t\r\n\t\t\tvar parts = url.split( '/' );\r\n\t\r\n\t\t\tif ( parts.length === 1 ) return './';\r\n\t\r\n\t\t\tparts.pop();\r\n\t\r\n\t\t\treturn parts.join( '/' ) + '/';\r\n\t\r\n\t\t},\r\n\t\r\n\t\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\tvar array = [];\r\n\t\r\n\t\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\t\r\n\t\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn array;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcreateMaterial: ( function () {\r\n\t\r\n\t\t\tvar imageLoader;\r\n\t\r\n\t\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\t\r\n\t\t\t\tvar scope = this;\r\n\t\r\n\t\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\t\r\n\t\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\t\r\n\t\t\t\tfunction nearest_pow2( n ) {\r\n\t\r\n\t\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\t\r\n\t\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\t\r\n\t\t\t\t\tvar texture;\r\n\t\r\n\t\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\t\r\n\t\t\t\t\tif ( loader !== null ) {\r\n\t\r\n\t\t\t\t\t\ttexture = loader.load( fullPath );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture = new THREE.Texture();\r\n\t\r\n\t\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\t\r\n\t\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = canvas;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\ttexture.image = image;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.sourceFile = sourceFile;\r\n\t\r\n\t\t\t\t\tif ( repeat ) {\r\n\t\r\n\t\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\t\r\n\t\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( offset ) {\r\n\t\r\n\t\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( wrap ) {\r\n\t\r\n\t\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( anisotropy ) {\r\n\t\r\n\t\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\twhere[ name ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction rgb2hex( rgb ) {\r\n\t\r\n\t\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// defaults\r\n\t\r\n\t\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\t\tvar mpars = {};\r\n\t\r\n\t\t\t\t// parameters from model file\r\n\t\r\n\t\t\t\tif ( m.shading ) {\r\n\t\r\n\t\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\t\r\n\t\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.transparent !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = m.transparent;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\t\r\n\t\t\t\t\tmpars.transparent = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthTest !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthTest = m.depthTest;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.depthWrite !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.visible !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.visible = m.visible;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.flipSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.BackSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.doubleSided !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.wireframe = m.wireframe;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.vertexColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\t\r\n\t\t\t\t\t} else if ( m.vertexColors ) {\r\n\t\r\n\t\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// colors\r\n\t\r\n\t\t\t\tif ( m.colorDiffuse ) {\r\n\t\r\n\t\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\t\r\n\t\t\t\t} else if ( m.DbgColor ) {\r\n\t\r\n\t\t\t\t\tmpars.color = m.DbgColor;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.colorEmissive ) {\r\n\t\r\n\t\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\t\r\n\t\t\t\t\tif ( m.colorSpecular ) {\r\n\t\r\n\t\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.specularCoef ) {\r\n\t\r\n\t\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// modifiers\r\n\t\r\n\t\t\t\tif ( m.transparency !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\t\tm.opacity = m.transparency;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.opacity !== undefined ) {\r\n\t\r\n\t\t\t\t\tmpars.opacity = m.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// textures\r\n\t\r\n\t\t\t\tif ( texturePath ) {\r\n\t\r\n\t\t\t\t\tif ( m.mapDiffuse ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapLight ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAO ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapBump ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapNormal ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapSpecular ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( m.mapAlpha ) {\r\n\t\r\n\t\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( m.mapBumpScale ) {\r\n\t\r\n\t\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( m.mapNormalFactor ) {\r\n\t\r\n\t\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\t\r\n\t\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\t\r\n\t\t\t\treturn material;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )()\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Loader.Handlers = {\r\n\t\r\n\t\thandlers: [],\r\n\t\r\n\t\tadd: function ( regex, loader ) {\r\n\t\r\n\t\t\tthis.handlers.push( regex, loader );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget: function ( file ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\t\r\n\t\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\t\r\n\t\t\t\tif ( regex.test( file ) ) {\r\n\t\r\n\t\t\t\t\treturn loader;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn null;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/XHRLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.XHRLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.XHRLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.XHRLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar request = new XMLHttpRequest();\r\n\t\t\trequest.open( 'GET', url, true );\r\n\t\r\n\t\t\trequest.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this.response );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this.response );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\t\r\n\t\t\trequest.send( null );\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\treturn request;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetResponseType: function ( value ) {\r\n\t\r\n\t\t\tthis.responseType = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetWithCredentials: function ( value ) {\r\n\t\r\n\t\t\tthis.withCredentials = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ImageLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ImageLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImageLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ImageLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar cached = THREE.Cache.get( url );\r\n\t\r\n\t\t\tif ( cached !== undefined ) {\r\n\t\r\n\t\t\t\tif ( onLoad ) {\r\n\t\r\n\t\t\t\t\tsetTimeout( function () {\r\n\t\r\n\t\t\t\t\t\tonLoad( cached );\r\n\t\r\n\t\t\t\t\t}, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cached;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar image = document.createElement( 'img' );\r\n\t\r\n\t\t\timage.addEventListener( 'load', function ( event ) {\r\n\t\r\n\t\t\t\tTHREE.Cache.add( url, this );\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( this );\r\n\t\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( onProgress !== undefined ) {\r\n\t\r\n\t\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\t\r\n\t\t\t\t\tonProgress( event );\r\n\t\r\n\t\t\t\t}, false );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t\tscope.manager.itemError( url );\r\n\t\r\n\t\t\t}, false );\r\n\t\r\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\timage.src = url;\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/JSONLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.JSONLoader = function ( manager ) {\r\n\t\r\n\t\tif ( typeof manager === 'boolean' ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\t\tmanager = undefined;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\tthis.withCredentials = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.JSONLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.JSONLoader,\r\n\t\r\n\t\t// Deprecated\r\n\t\t\r\n\t\tget statusDomElement () {\r\n\t\r\n\t\t\tif ( this._statusDomElement === undefined ) {\r\n\t\r\n\t\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\t\treturn this._statusDomElement;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tload: function( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tvar json = JSON.parse( text );\r\n\t\t\t\tvar metadata = json.metadata;\r\n\t\r\n\t\t\t\tif ( metadata !== undefined ) {\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\t\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\t\tonLoad( object.geometry, object.materials );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, texturePath ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.Geometry(),\r\n\t\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\t\r\n\t\t\tparseModel( scale );\r\n\t\r\n\t\t\tparseSkin();\r\n\t\t\tparseMorphing( scale );\r\n\t\r\n\t\t\tgeometry.computeFaceNormals();\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t\t\tfunction parseModel( scale ) {\r\n\t\r\n\t\t\t\tfunction isBitSet( value, position ) {\r\n\t\r\n\t\t\t\t\treturn value & ( 1 << position );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar i, j, fi,\r\n\t\r\n\t\t\t\toffset, zLength,\r\n\t\r\n\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\t\r\n\t\t\t\ttype,\r\n\t\t\t\tisQuad,\r\n\t\t\t\thasMaterial,\r\n\t\t\t\thasFaceVertexUv,\r\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\t\thasFaceColor, hasFaceVertexColor,\r\n\t\r\n\t\t\tvertex, face, faceA, faceB, hex, normal,\r\n\t\r\n\t\t\t\tuvLayer, uv, u, v,\r\n\t\r\n\t\t\t\tfaces = json.faces,\r\n\t\t\t\tvertices = json.vertices,\r\n\t\t\t\tnormals = json.normals,\r\n\t\t\t\tcolors = json.colors,\r\n\t\r\n\t\t\t\tnUvLayers = 0;\r\n\t\r\n\t\t\t\tif ( json.uvs !== undefined ) {\r\n\t\r\n\t\t\t\t\t// disregard empty arrays\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = vertices.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\tvertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\t\r\n\t\t\t\t\tgeometry.vertices.push( vertex );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toffset = 0;\r\n\t\t\t\tzLength = faces.length;\r\n\t\r\n\t\t\t\twhile ( offset < zLength ) {\r\n\t\r\n\t\t\t\t\ttype = faces[ offset ++ ];\r\n\t\r\n\t\r\n\t\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\t\r\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\t\r\n\t\t\t\t\tif ( isQuad ) {\r\n\t\r\n\t\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\t\r\n\t\t\t\t\t\toffset += 4;\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\t\tgeometry.faces.push( faceB );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\tif ( hasMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t// to get face <=> uv index correspondence\r\n\t\r\n\t\t\t\t\t\tfi = geometry.faces.length;\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\t\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\r\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\t\r\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\t\r\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceColor ) {\r\n\t\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tgeometry.faces.push( face );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseSkin() {\r\n\t\r\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\t\r\n\t\t\t\tif ( json.skinWeights ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.skinIndices ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\t\r\n\t\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\t\r\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.bones = json.bones;\r\n\t\r\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// could change this to json.animations[0] or remove completely\r\n\t\r\n\t\t\t\tgeometry.animation = json.animation;\r\n\t\t\t\tgeometry.animations = json.animations;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfunction parseMorphing( scale ) {\r\n\t\r\n\t\t\t\tif ( json.morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\t\r\n\t\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\t\r\n\t\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\t\r\n\t\t\t\t\t\t\tdstVertices.push( vertex );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( json.morphColors !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\t\r\n\t\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\t\r\n\t\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\t\r\n\t\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\t\tdstColors.push( color );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\t\r\n\t\t\t\treturn { geometry: geometry };\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\t\r\n\t\t\t\treturn { geometry: geometry, materials: materials };\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/LoadingManager.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\t\r\n\t\tthis.onStart = undefined;\r\n\t\tthis.onLoad = onLoad;\r\n\t\tthis.onProgress = onProgress;\r\n\t\tthis.onError = onError;\r\n\t\r\n\t\tthis.itemStart = function ( url ) {\r\n\t\r\n\t\t\titemsTotal ++;\r\n\t\r\n\t\t\tif ( isLoading === false ) {\r\n\t\r\n\t\t\t\tif ( scope.onStart !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tisLoading = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemEnd = function ( url ) {\r\n\t\r\n\t\t\titemsLoaded ++;\r\n\t\r\n\t\t\tif ( scope.onProgress !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( itemsLoaded === itemsTotal ) {\r\n\t\r\n\t\t\t\tisLoading = false;\r\n\t\r\n\t\t\t\tif ( scope.onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tscope.onLoad();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.itemError = function ( url ) {\r\n\t\r\n\t\t\tif ( scope.onError !== undefined ) {\r\n\t\r\n\t\t\t\tscope.onError( url );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\t\r\n\t// File:src/loaders/BufferGeometryLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BufferGeometryLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BufferGeometryLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BufferGeometryLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\t\tvar index = json.data.index;\r\n\t\r\n\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = json.data.attributes;\r\n\t\r\n\t\t\tfor ( var key in attributes ) {\r\n\t\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\t\r\n\t\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\t\r\n\t\t\tif ( groups !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\t\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\t\r\n\t\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundingSphere = json.data.boundingSphere;\r\n\t\r\n\t\t\tif ( boundingSphere !== undefined ) {\r\n\t\r\n\t\t\t\tvar center = new THREE.Vector3();\r\n\t\r\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\t\r\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/MaterialLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MaterialLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.textures = {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MaterialLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MaterialLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTextures: function ( value ) {\r\n\t\r\n\t\t\tthis.textures = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetTexture: function ( name ) {\r\n\t\r\n\t\t\tvar textures = this.textures;\r\n\t\r\n\t\t\tif ( textures[ name ] === undefined ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures[ name ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json ) {\r\n\t\r\n\t\t\tvar material = new THREE[ json.type ];\r\n\t\t\tmaterial.uuid = json.uuid;\r\n\t\r\n\t\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\t\r\n\t\t\t// for PointsMaterial\r\n\t\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\t\r\n\t\t\t// maps\r\n\t\r\n\t\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\t\r\n\t\t\tif ( json.alphaMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\t\tmaterial.transparent = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\t\r\n\t\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\t\r\n\t\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\t\r\n\t\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\t\r\n\t\t\tif ( json.envMap !== undefined ) {\r\n\t\r\n\t\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\t\r\n\t\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\t\r\n\t\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\t\r\n\t\t\t// MeshFaceMaterial\r\n\t\r\n\t\t\tif ( json.materials !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/ObjectLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.ObjectLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.texturePath = '';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ObjectLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.ObjectLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tif ( this.texturePath === '' ) {\r\n\t\r\n\t\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( text ) {\r\n\t\r\n\t\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetTexturePath: function ( value ) {\r\n\t\r\n\t\t\tthis.texturePath = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\t\r\n\t\t\tvar images = this.parseImages( json.images, function () {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\t\r\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn object;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseGeometries: function ( json ) {\r\n\t\r\n\t\t\tvar geometries = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar geometry;\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CircleGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'RingGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'TextGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'BufferGeometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase 'Geometry':\r\n\t\r\n\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\t\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tgeometry.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\t\r\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometries;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseMaterials: function ( json, textures ) {\r\n\t\r\n\t\t\tvar materials = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\t\tloader.setTextures( textures );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\t\tmaterials[ material.uuid ] = material;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn materials;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseImages: function ( json, onLoad ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\t\tvar images = {};\r\n\t\r\n\t\t\tfunction loadImage( url ) {\r\n\t\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\t\r\n\t\t\t\treturn loader.load( url, function () {\r\n\t\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( json !== undefined && json.length > 0 ) {\r\n\t\r\n\t\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\t\r\n\t\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar image = json[ i ];\r\n\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\t\r\n\t\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn images;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseTextures: function ( json, images ) {\r\n\t\r\n\t\t\tfunction parseConstant( value ) {\r\n\t\r\n\t\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\t\r\n\t\t\t\treturn THREE[ value ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar textures = {};\r\n\t\r\n\t\t\tif ( json !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar data = json[ i ];\r\n\t\r\n\t\t\t\t\tif ( data.image === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\ttexture.uuid = data.uuid;\r\n\t\r\n\t\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\t\r\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextures[ data.uuid ] = texture;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn textures;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparseObject: function () {\r\n\t\r\n\t\t\tvar matrix = new THREE.Matrix4();\r\n\t\r\n\t\t\treturn function ( data, geometries, materials ) {\r\n\t\r\n\t\t\t\tvar object;\r\n\t\r\n\t\t\t\tvar getGeometry = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn geometries[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tvar getMaterial = function ( name ) {\r\n\t\r\n\t\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn materials[ name ];\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tswitch ( data.type ) {\r\n\t\r\n\t\t\t\t\tcase 'Scene':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Scene();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PerspectiveCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'OrthographicCamera':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'AmbientLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'DirectionalLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'SpotLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'HemisphereLight':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Mesh':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'LOD':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.LOD();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Line':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'PointCloud':\r\n\t\t\t\t\tcase 'Points':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Sprite':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Group':\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Group();\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tobject = new THREE.Object3D();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobject.uuid = data.uuid;\r\n\t\r\n\t\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\t\tif ( data.matrix !== undefined ) {\r\n\t\r\n\t\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\t\r\n\t\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\t\r\n\t\t\t\tif ( data.children !== undefined ) {\r\n\t\r\n\t\t\t\t\tfor ( var child in data.children ) {\r\n\t\r\n\t\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( data.type === 'LOD' ) {\r\n\t\r\n\t\t\t\t\tvar levels = data.levels;\r\n\t\r\n\t\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\t\r\n\t\t\t\t\t\tif ( child !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn object;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}()\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/TextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.TextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.TextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad !== undefined ) {\r\n\t\r\n\t\t\t\t\tonLoad( texture );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/BinaryTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author Nikos M. / https://github.com/foo123/\r\n\t *\r\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n\t */\r\n\t\r\n\tTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BinaryTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.BinaryTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture();\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\tvar texData = scope._parser( buffer );\r\n\t\r\n\t\t\t\tif ( ! texData ) return;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.image ) {\r\n\t\r\n\t\t\t\t\ttexture.image = texData.image;\r\n\t\r\n\t\t\t\t} else if ( undefined !== texData.data ) {\r\n\t\r\n\t\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\t\ttexture.image.data = texData.data;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\t\r\n\t\t\t\tif ( undefined !== texData.format ) {\r\n\t\r\n\t\t\t\t\ttexture.format = texData.format;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tif ( undefined !== texData.type ) {\r\n\t\r\n\t\t\t\t\ttexture.type = texData.type;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\t\r\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\t\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\t\r\n\t\t\t}, onProgress, onError );\r\n\t\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/loaders/CompressedTextureLoader.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n\t */\r\n\t\r\n\tTHREE.CompressedTextureLoader = function ( manager ) {\r\n\t\r\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\r\n\t\t// override in sub classes\r\n\t\tthis._parser = null;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.CompressedTextureLoader.prototype = {\r\n\t\r\n\t\tconstructor: THREE.CompressedTextureLoader,\r\n\t\r\n\t\tload: function ( url, onLoad, onProgress, onError ) {\r\n\t\r\n\t\t\tvar scope = this;\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar texture = new THREE.CompressedTexture();\r\n\t\t\ttexture.image = images;\r\n\t\r\n\t\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\r\n\t\t\tif ( Array.isArray( url ) ) {\r\n\t\r\n\t\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\t\r\n\t\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\t\r\n\t\t\t\tloader.load( url, function ( buffer ) {\r\n\t\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\t\r\n\t\t\t\t\tif ( texDatas.isCubemap ) {\r\n\t\r\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\t\r\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\t\r\n\t\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t}, onProgress, onError );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetCrossOrigin: function ( value ) {\r\n\t\r\n\t\t\tthis.crossOrigin = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/Material.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Material = function () {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.type = 'Material';\r\n\t\r\n\t\tthis.side = THREE.FrontSide;\r\n\t\r\n\t\tthis.opacity = 1;\r\n\t\tthis.transparent = false;\r\n\t\r\n\t\tthis.blending = THREE.NormalBlending;\r\n\t\r\n\t\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\t\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\t\tthis.blendEquation = THREE.AddEquation;\r\n\t\tthis.blendSrcAlpha = null;\r\n\t\tthis.blendDstAlpha = null;\r\n\t\tthis.blendEquationAlpha = null;\r\n\t\r\n\t\tthis.depthFunc = THREE.LessEqualDepth;\r\n\t\tthis.depthTest = true;\r\n\t\tthis.depthWrite = true;\r\n\t\r\n\t\tthis.colorWrite = true;\r\n\t\r\n\t\tthis.precision = null; // override the renderer's default precision for this material\r\n\t\r\n\t\tthis.polygonOffset = false;\r\n\t\tthis.polygonOffsetFactor = 0;\r\n\t\tthis.polygonOffsetUnits = 0;\r\n\t\r\n\t\tthis.alphaTest = 0;\r\n\t\r\n\t\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t\tthis._needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Material.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Material,\r\n\t\r\n\t\tget needsUpdate () {\r\n\t\r\n\t\t\treturn this._needsUpdate;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.update();\r\n\t\r\n\t\t\tthis._needsUpdate = value;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tsetValues: function ( values ) {\r\n\t\r\n\t\t\tif ( values === undefined ) return;\r\n\t\r\n\t\t\tfor ( var key in values ) {\r\n\t\r\n\t\t\t\tvar newValue = values[ key ];\r\n\t\r\n\t\t\t\tif ( newValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\t\r\n\t\t\t\tif ( currentValue === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\t\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\t\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\t\r\n\t\t\t\t} else if ( key === 'overdraw' ) {\r\n\t\r\n\t\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tvar data = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Material',\r\n\t\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\r\n\t\t\t// standard Material serialization\r\n\t\t\tdata.uuid = this.uuid;\r\n\t\t\tdata.type = this.type;\r\n\t\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\r\n\t\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\t\r\n\t\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.bumpScale = this.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\t\tdata.displacementBias = this.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\t\r\n\t\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\r\n\t\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.name = source.name;\r\n\t\r\n\t\t\tthis.side = source.side;\r\n\t\r\n\t\t\tthis.opacity = source.opacity;\r\n\t\t\tthis.transparent = source.transparent;\r\n\t\r\n\t\t\tthis.blending = source.blending;\r\n\t\r\n\t\t\tthis.blendSrc = source.blendSrc;\r\n\t\t\tthis.blendDst = source.blendDst;\r\n\t\t\tthis.blendEquation = source.blendEquation;\r\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\t\r\n\t\t\tthis.depthFunc = source.depthFunc;\r\n\t\t\tthis.depthTest = source.depthTest;\r\n\t\t\tthis.depthWrite = source.depthWrite;\r\n\t\r\n\t\t\tthis.precision = source.precision;\r\n\t\r\n\t\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\t\r\n\t\t\tthis.alphaTest = source.alphaTest;\r\n\t\r\n\t\t\tthis.overdraw = source.overdraw;\r\n\t\r\n\t\t\tthis.visible = source.visible;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'update' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Deprecated\r\n\t\r\n\t\tget wrapAround () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tset wrapAround ( boolean ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tget wrapRGB () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\t\r\n\tTHREE.MaterialIdCount = 0;\r\n\t\r\n\t// File:src/materials/LineBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *  linecap: \"round\",\r\n\t *  linejoin: \"round\",\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\tthis.linecap = 'round';\r\n\t\tthis.linejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\t\r\n\tTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\tthis.linecap = source.linecap;\r\n\t\tthis.linejoin = source.linejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/LineDashedMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  linewidth: <float>,\r\n\t *\r\n\t *  scale: <float>,\r\n\t *  dashSize: <float>,\r\n\t *  gapSize: <float>,\r\n\t *\r\n\t *  vertexColors: <bool>\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.LineDashedMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'LineDashedMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.scale = 1;\r\n\t\tthis.dashSize = 3;\r\n\t\tthis.gapSize = 1;\r\n\t\r\n\t\tthis.vertexColors = false;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\t\r\n\tTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\t\r\n\t\tthis.linewidth = source.linewidth;\r\n\t\r\n\t\tthis.scale = source.scale;\r\n\t\tthis.dashSize = source.dashSize;\r\n\t\tthis.gapSize = source.gapSize;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshBasicMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshBasicMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\t\r\n\tTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshLambertMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshLambertMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\t\r\n\tTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshPhongMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  emissive: <hex>,\r\n\t *  specular: <hex>,\r\n\t *  shininess: <float>,\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  lightMap: new THREE.Texture( <Image> ),\r\n\t *  lightMapIntensity: <float>\r\n\t *\r\n\t *  aoMap: new THREE.Texture( <Image> ),\r\n\t *  aoMapIntensity: <float>\r\n\t *\r\n\t *  emissiveMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  bumpMap: new THREE.Texture( <Image> ),\r\n\t *  bumpScale: <float>,\r\n\t *\r\n\t *  normalMap: new THREE.Texture( <Image> ),\r\n\t *  normalScale: <Vector2>,\r\n\t *\r\n\t *  displacementMap: new THREE.Texture( <Image> ),\r\n\t *  displacementScale: <float>,\r\n\t *  displacementBias: <float>,\r\n\t *\r\n\t *  specularMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  alphaMap: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n\t *  combine: THREE.Multiply,\r\n\t *  reflectivity: <float>,\r\n\t *  refractionRatio: <float>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshPhongMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\t\tthis.emissive = new THREE.Color( 0x000000 );\r\n\t\tthis.specular = new THREE.Color( 0x111111 );\r\n\t\tthis.shininess = 30;\r\n\t\r\n\t\tthis.metal = false;\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.lightMap = null;\r\n\t\tthis.lightMapIntensity = 1.0;\r\n\t\r\n\t\tthis.aoMap = null;\r\n\t\tthis.aoMapIntensity = 1.0;\r\n\t\r\n\t\tthis.emissiveMap = null;\r\n\t\r\n\t\tthis.bumpMap = null;\r\n\t\tthis.bumpScale = 1;\r\n\t\r\n\t\tthis.normalMap = null;\r\n\t\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.displacementMap = null;\r\n\t\tthis.displacementScale = 1;\r\n\t\tthis.displacementBias = 0;\r\n\t\r\n\t\tthis.specularMap = null;\r\n\t\r\n\t\tthis.alphaMap = null;\r\n\t\r\n\t\tthis.envMap = null;\r\n\t\tthis.combine = THREE.MultiplyOperation;\r\n\t\tthis.reflectivity = 1;\r\n\t\tthis.refractionRatio = 0.98;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\tthis.wireframeLinecap = 'round';\r\n\t\tthis.wireframeLinejoin = 'round';\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.skinning = false;\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.morphNormals = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\t\r\n\tTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.emissive.copy( source.emissive );\r\n\t\tthis.specular.copy( source.specular );\r\n\t\tthis.shininess = source.shininess;\r\n\t\r\n\t\tthis.metal = source.metal;\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.lightMap = source.lightMap;\r\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\t\r\n\t\tthis.aoMap = source.aoMap;\r\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\t\r\n\t\tthis.emissiveMap = source.emissiveMap;\r\n\t\r\n\t\tthis.bumpMap = source.bumpMap;\r\n\t\tthis.bumpScale = source.bumpScale;\r\n\t\r\n\t\tthis.normalMap = source.normalMap;\r\n\t\tthis.normalScale.copy( source.normalScale );\r\n\t\r\n\t\tthis.displacementMap = source.displacementMap;\r\n\t\tthis.displacementScale = source.displacementScale;\r\n\t\tthis.displacementBias = source.displacementBias;\r\n\t\r\n\t\tthis.specularMap = source.specularMap;\r\n\t\r\n\t\tthis.alphaMap = source.alphaMap;\r\n\t\r\n\t\tthis.envMap = source.envMap;\r\n\t\tthis.combine = source.combine;\r\n\t\tthis.reflectivity = source.reflectivity;\r\n\t\tthis.refractionRatio = source.refractionRatio;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshDepthMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'MeshDepthMaterial';\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\t\r\n\tTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MeshNormalMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  opacity: <float>,\r\n\t *\r\n\t *  shading: THREE.FlatShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'MeshNormalMaterial';\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.morphTargets = false;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\t\r\n\tTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/MultiMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.MultiMaterial = function ( materials ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.type = 'MultiMaterial';\r\n\t\r\n\t\tthis.materials = materials instanceof Array ? materials : [];\r\n\t\r\n\t\tthis.visible = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MultiMaterial.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MultiMaterial,\r\n\t\r\n\t\ttoJSON: function () {\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.2,\r\n\t\t\t\t\ttype: 'material',\r\n\t\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t\t},\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\ttype: this.type,\r\n\t\t\t\tmaterials: []\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\toutput.visible = this.visible;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\tvar material = new this.constructor();\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\t\r\n\t\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterial.visible = this.visible;\r\n\t\r\n\t\t\treturn material;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\t\r\n\t// File:src/materials/PointsMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  size: <float>,\r\n\t *  sizeAttenuation: <bool>,\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  vertexColors: <bool>,\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.PointsMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'PointsMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.size = 1;\r\n\t\tthis.sizeAttenuation = true;\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors;\r\n\t\r\n\t\tthis.fog = true;\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\t\r\n\tTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.size = source.size;\r\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// backwards compatibility\r\n\t\r\n\tTHREE.PointCloudMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/ShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  defines: { \"label\" : \"value\" },\r\n\t *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n\t *\r\n\t *  fragmentShader: <string>,\r\n\t *  vertexShader: <string>,\r\n\t *\r\n\t *  shading: THREE.SmoothShading,\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *  wireframe: <boolean>,\r\n\t *  wireframeLinewidth: <float>,\r\n\t *\r\n\t *  lights: <bool>,\r\n\t *\r\n\t *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n\t *\r\n\t *  skinning: <bool>,\r\n\t *  morphTargets: <bool>,\r\n\t *  morphNormals: <bool>,\r\n\t *\r\n\t *\tfog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.ShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'ShaderMaterial';\r\n\t\r\n\t\tthis.defines = {};\r\n\t\tthis.uniforms = {};\r\n\t\r\n\t\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\t\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\t\r\n\t\tthis.shading = THREE.SmoothShading;\r\n\t\r\n\t\tthis.linewidth = 1;\r\n\t\r\n\t\tthis.wireframe = false;\r\n\t\tthis.wireframeLinewidth = 1;\r\n\t\r\n\t\tthis.fog = false; // set to use scene fog\r\n\t\r\n\t\tthis.lights = false; // set to use scene lights\r\n\t\r\n\t\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\t\r\n\t\tthis.skinning = false; // set to use skinning attribute streams\r\n\t\r\n\t\tthis.morphTargets = false; // set to use morph targets\r\n\t\tthis.morphNormals = false; // set to use morph normals\r\n\t\r\n\t\tthis.derivatives = false; // set to use derivatives\r\n\t\r\n\t\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\t\tthis.defaultAttributeValues = {\r\n\t\t\t'color': [ 1, 1, 1 ],\r\n\t\t\t'uv': [ 0, 0 ],\r\n\t\t\t'uv2': [ 0, 0 ]\r\n\t\t};\r\n\t\r\n\t\tthis.index0AttributeName = undefined;\r\n\t\r\n\t\tif ( parameters !== undefined ) {\r\n\t\r\n\t\t\tif ( parameters.attributes !== undefined ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setValues( parameters );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.fragmentShader = source.fragmentShader;\r\n\t\tthis.vertexShader = source.vertexShader;\r\n\t\r\n\t\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\t\r\n\t\tthis.attributes = source.attributes;\r\n\t\tthis.defines = source.defines;\r\n\t\r\n\t\tthis.shading = source.shading;\r\n\t\r\n\t\tthis.wireframe = source.wireframe;\r\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\tthis.lights = source.lights;\r\n\t\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\t\r\n\t\tthis.skinning = source.skinning;\r\n\t\r\n\t\tthis.morphTargets = source.morphTargets;\r\n\t\tthis.morphNormals = source.morphNormals;\r\n\t\r\n\t\tthis.derivatives = source.derivatives;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.uniforms = this.uniforms;\r\n\t\tdata.attributes = this.attributes;\r\n\t\tdata.vertexShader = this.vertexShader;\r\n\t\tdata.fragmentShader = this.fragmentShader;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/materials/RawShaderMaterial.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.RawShaderMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.ShaderMaterial.call( this, parameters );\r\n\t\r\n\t\tthis.type = 'RawShaderMaterial';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\n\tTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\t// File:src/materials/SpriteMaterial.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * parameters = {\r\n\t *  color: <hex>,\r\n\t *  opacity: <float>,\r\n\t *  map: new THREE.Texture( <Image> ),\r\n\t *\r\n\t *  blending: THREE.NormalBlending,\r\n\t *  depthTest: <bool>,\r\n\t *  depthWrite: <bool>,\r\n\t *\r\n\t *\tuvOffset: new THREE.Vector2(),\r\n\t *\tuvScale: new THREE.Vector2(),\r\n\t *\r\n\t *  fog: <bool>\r\n\t * }\r\n\t */\r\n\t\r\n\tTHREE.SpriteMaterial = function ( parameters ) {\r\n\t\r\n\t\tTHREE.Material.call( this );\r\n\t\r\n\t\tthis.type = 'SpriteMaterial';\r\n\t\r\n\t\tthis.color = new THREE.Color( 0xffffff );\r\n\t\tthis.map = null;\r\n\t\r\n\t\tthis.rotation = 0;\r\n\t\r\n\t\tthis.fog = false;\r\n\t\r\n\t\t// set parameters\r\n\t\r\n\t\tthis.setValues( parameters );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\n\tTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\t\r\n\tTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Material.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.map = source.map;\r\n\t\r\n\t\tthis.rotation = source.rotation;\r\n\t\r\n\t\tthis.fog = source.fog;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/textures/Texture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.name = '';\r\n\t\tthis.sourceFile = '';\r\n\t\r\n\t\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\t\tthis.mipmaps = [];\r\n\t\r\n\t\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\t\r\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\t\r\n\t\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\t\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\tthis.premultiplyAlpha = false;\r\n\t\tthis.flipY = true;\r\n\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\t\r\n\t\tthis.version = 0;\r\n\t\tthis.onUpdate = null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Texture.DEFAULT_IMAGE = undefined;\r\n\tTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\t\r\n\tTHREE.Texture.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Texture,\r\n\t\r\n\t\tset needsUpdate ( value ) {\r\n\t\r\n\t\t\tif ( value === true ) this.version ++;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.image = source.image;\r\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\t\r\n\t\t\tthis.mapping = source.mapping;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\t\tthis.flipY = source.flipY;\r\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttoJSON: function ( meta ) {\r\n\t\r\n\t\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn meta.textures[ this.uuid ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction getDataURL( image ) {\r\n\t\r\n\t\t\t\tvar canvas;\r\n\t\r\n\t\t\t\tif ( image.toDataURL !== undefined ) {\r\n\t\r\n\t\t\t\t\tcanvas = image;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\t\tcanvas.height = image.height;\r\n\t\r\n\t\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar output = {\r\n\t\t\t\tmetadata: {\r\n\t\t\t\t\tversion: 4.4,\r\n\t\t\t\t\ttype: 'Texture',\r\n\t\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tuuid: this.uuid,\r\n\t\t\t\tname: this.name,\r\n\t\r\n\t\t\t\tmapping: this.mapping,\r\n\t\r\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\t\r\n\t\t\t\tminFilter: this.minFilter,\r\n\t\t\t\tmagFilter: this.magFilter,\r\n\t\t\t\tanisotropy: this.anisotropy\r\n\t\t\t};\r\n\t\r\n\t\t\tif ( this.image !== undefined ) {\r\n\t\r\n\t\t\t\t// TODO: Move to THREE.Image\r\n\t\r\n\t\t\t\tvar image = this.image;\r\n\t\r\n\t\t\t\tif ( image.uuid === undefined ) {\r\n\t\r\n\t\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\t\r\n\t\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\toutput.image = image.uuid;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmeta.textures[ this.uuid ] = output;\r\n\t\r\n\t\t\treturn output;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttransformUv: function ( uv ) {\r\n\t\r\n\t\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\t\r\n\t\t\tuv.multiply( this.repeat );\r\n\t\t\tuv.add( this.offset );\r\n\t\r\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapS ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\t\r\n\t\t\t\tswitch ( this.wrapT ) {\r\n\t\r\n\t\t\t\t\tcase THREE.RepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\t\r\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\t\r\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.flipY ) {\r\n\t\r\n\t\t\t\tuv.y = 1 - uv.y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\t\r\n\tTHREE.TextureIdCount = 0;\r\n\t\r\n\t// File:src/textures/CanvasTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\t\r\n\t// File:src/textures/CubeTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\t\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.images = images;\r\n\t\tthis.flipY = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\t\r\n\tTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.images = source.images;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t// File:src/textures/CompressedTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { width: width, height: height };\r\n\t\tthis.mipmaps = mipmaps;\r\n\t\r\n\t\t// no flipping for cube textures\r\n\t\t// (also flipping doesn't work for compressed textures )\r\n\t\r\n\t\tthis.flipY = false;\r\n\t\r\n\t\t// can't generate mipmaps for compressed textures\r\n\t\t// mips must be embedded in DDS files\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\t\r\n\t// File:src/textures/DataTexture.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.image = { data: data, width: width, height: height };\r\n\t\r\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\t\r\n\t\tthis.flipY = false;\r\n\t\tthis.generateMipmaps  = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\t\r\n\t// File:src/textures/VideoTexture.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\t\r\n\t\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\t\r\n\t\tthis.generateMipmaps = false;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar update = function () {\r\n\t\r\n\t\t\trequestAnimationFrame( update );\r\n\t\r\n\t\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\t\r\n\t\t\t\tscope.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tupdate();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\n\tTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\t\r\n\t// File:src/objects/Group.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Group = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Group';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Group.prototype.constructor = THREE.Group;\r\n\t// File:src/objects/Points.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Points = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Points';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Points.prototype.constructor = THREE.Points;\r\n\t\r\n\tTHREE.Points.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = object.geometry;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\t\tfunction testPoint( point, index ) {\r\n\t\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\t\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\t\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\t\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Points.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.PointCloud = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParticleSystem = function ( geometry, material ) {\r\n\t\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Line.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Line = function ( geometry, material, mode ) {\r\n\t\r\n\t\tif ( mode === 1 ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\t\treturn new THREE.LineSegments( geometry, material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Line';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Line.prototype.constructor = THREE.Line;\r\n\t\r\n\tTHREE.Line.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\t\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\t\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\t\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\t\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\t\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\t\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Line.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// DEPRECATED\r\n\t\r\n\tTHREE.LineStrip = 0;\r\n\tTHREE.LinePieces = 1;\r\n\t\r\n\t// File:src/objects/LineSegments.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LineSegments = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Line.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'LineSegments';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\n\tTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\t\r\n\t// File:src/objects/Mesh.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author jonobr1 / http://jonobr1.com/\r\n\t */\r\n\t\r\n\tTHREE.Mesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Mesh';\r\n\t\r\n\t\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\t\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\t\r\n\t\tthis.updateMorphTargets();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\t\r\n\tTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\t\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\t\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\t\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\t\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\t\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\t\r\n\t\treturn 0;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Mesh.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\t\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\t\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\t\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\t\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\t\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\t\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\t\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\t\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\t\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\t\r\n\t\t\treturn uv1.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\r\n\t\t\tif ( material === undefined ) return;\r\n\t\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\t\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\t\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Check boundingBox before continuing\r\n\t\r\n\t\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\t\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\t\r\n\t\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\t\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar a, b, c;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tvar indices = index.array;\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvar positions = attributes.position.array;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\t\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\t\r\n\t\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\t\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\t\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\t\r\n\t\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\t\tc = vertices[ face.c ];\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\t\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\t\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\t\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\t\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\t\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\t\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\t\tvC.add( c );\r\n\t\r\n\t\t\t\t\t\ta = vA;\r\n\t\t\t\t\t\tb = vB;\r\n\t\t\t\t\t\tc = vC;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\t\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\t\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\t\r\n\t\t\t\t\tvar uv;\r\n\t\r\n\t\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: face,\r\n\t\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\t\tobject: this\r\n\t\r\n\t\t\t\t\t} );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Mesh.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta geometries cache\r\n\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.geometry = this.geometry.uuid;\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Bone.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Bone = function ( skin ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Bone';\r\n\t\r\n\t\tthis.skin = skin;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\t\r\n\tTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\t\r\n\t\tthis.skin = source.skin;\r\n\t\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Skeleton.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author michael guerrero / http://realitymeltdown.com\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\t\r\n\t\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\t\r\n\t\tthis.identityMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t// copy the bone array\r\n\t\r\n\t\tbones = bones || [];\r\n\t\r\n\t\tthis.bones = bones.slice( 0 );\r\n\t\r\n\t\t// create a bone texture or an array of floats\r\n\t\r\n\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t// layout (1 matrix = 4 pixels)\r\n\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\t\r\n\t\t\t\r\n\t\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\t\tsize = Math.max( size, 4 );\r\n\t\r\n\t\t\tthis.boneTextureWidth = size;\r\n\t\t\tthis.boneTextureHeight = size;\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// use the supplied bone inverses or calculate the inverses\r\n\t\r\n\t\tif ( boneInverses === undefined ) {\r\n\t\r\n\t\t\tthis.calculateInverses();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tif ( this.bones.length === boneInverses.length ) {\r\n\t\r\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\t\r\n\t\t\t\tthis.boneInverses = [];\r\n\t\r\n\t\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\t\r\n\t\tthis.boneInverses = [];\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\t\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\t\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.pose = function () {\r\n\t\r\n\t\tvar bone;\r\n\t\r\n\t\t// recover the bind-time world matrices\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\t\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\tbone = this.bones[ b ];\r\n\t\r\n\t\t\tif ( bone ) {\r\n\t\r\n\t\t\t\tif ( bone.parent ) {\r\n\t\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Skeleton.prototype.update = ( function () {\r\n\t\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\t// flatten bone matrices to array\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\t\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\t\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\t\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\t\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Skeleton.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/SkinnedMesh.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'SkinnedMesh';\r\n\t\r\n\t\tthis.bindMode = \"attached\";\r\n\t\tthis.bindMatrix = new THREE.Matrix4();\r\n\t\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\t\r\n\t\t// init bones\r\n\t\r\n\t\t// TODO: remove bone creation as there is no reason (other than\r\n\t\t// convenience) for THREE.SkinnedMesh to do this.\r\n\t\r\n\t\tvar bones = [];\r\n\t\r\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\t\r\n\t\t\tvar bone, gbone;\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tbone = new THREE.Bone( this );\r\n\t\t\t\tbones.push( bone );\r\n\t\r\n\t\t\t\tbone.name = gbone.name;\r\n\t\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\t\r\n\t\t\t\tgbone = this.geometry.bones[ b ];\r\n\t\r\n\t\t\t\tif ( gbone.parent !== - 1 ) {\r\n\t\r\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.add( bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.normalizeSkinWeights();\r\n\t\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\t\r\n\t\tthis.skeleton = skeleton;\r\n\t\r\n\t\tif ( bindMatrix === undefined ) {\r\n\t\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\t\t\t\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\t\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.pose = function () {\r\n\t\r\n\t\tthis.skeleton.pose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\t\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\t\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\t\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\t\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\t\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\t\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\t\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkinnedMesh.prototype.clone = function() {\r\n\t\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/MorphAnimMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.type = 'MorphAnimMesh';\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.duration = 1000; // milliseconds\r\n\t\tthis.mirroredLoop = false;\r\n\t\tthis.time = 0;\r\n\t\r\n\t\t// internals\r\n\t\r\n\t\tthis.lastKeyframe = 0;\r\n\t\tthis.currentKeyframe = 0;\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\t\r\n\t\tthis.startKeyframe = start;\r\n\t\tthis.endKeyframe = end;\r\n\t\r\n\t\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\t\r\n\t\tthis.direction = 1;\r\n\t\tthis.directionBackwards = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\t\r\n\t\tthis.direction = - 1;\r\n\t\tthis.directionBackwards = true;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tif ( ! geometry.animations ) geometry.animations = {};\r\n\t\r\n\t\tvar firstAnimation, animations = geometry.animations;\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar parts = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\t\r\n\t\t\t\tvar label = parts[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar animation = animations[ label ];\r\n\t\r\n\t\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\t\tif ( i > animation.end ) animation.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\t\r\n\t\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\t\r\n\t\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\t\r\n\t\tvar animation = this.geometry.animations[ label ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\t\tthis.time = 0;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\t\r\n\t\tvar frameTime = this.duration / this.length;\r\n\t\r\n\t\tthis.time += this.direction * delta;\r\n\t\r\n\t\tif ( this.mirroredLoop ) {\r\n\t\r\n\t\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\t\r\n\t\t\t\tthis.direction *= - 1;\r\n\t\r\n\t\t\t\tif ( this.time > this.duration ) {\r\n\t\r\n\t\t\t\t\tthis.time = this.duration;\r\n\t\t\t\t\tthis.directionBackwards = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.time < 0 ) {\r\n\t\r\n\t\t\t\t\tthis.time = 0;\r\n\t\t\t\t\tthis.directionBackwards = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.time = this.time % this.duration;\r\n\t\r\n\t\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tif ( keyframe !== this.currentKeyframe ) {\r\n\t\r\n\t\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\t\tinfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\t\tthis.currentKeyframe = keyframe;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\t\r\n\t\tif ( this.directionBackwards ) {\r\n\t\r\n\t\t\tmix = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinfluences[ this.currentKeyframe ] = mix;\r\n\t\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\t\r\n\t\tvar influences = this.morphTargetInfluences;\r\n\t\r\n\t\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tinfluences[ i ] = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\t\tif ( b > - 1 ) influences[ b ] = t;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.duration = source.duration;\r\n\t\tthis.mirroredLoop = source.mirroredLoop;\r\n\t\tthis.time = source.time;\r\n\t\r\n\t\tthis.lastKeyframe = source.lastKeyframe;\r\n\t\tthis.currentKeyframe = source.currentKeyframe;\r\n\t\r\n\t\tthis.direction = source.direction;\r\n\t\tthis.directionBackwards = source.directionBackwards;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/LOD.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.LOD = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'LOD';\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tlevels: {\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: []\r\n\t\t\t},\r\n\t\t\tobjects: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\t\treturn this.levels;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\t\r\n\tTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\t\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\r\n\t\tdistance = Math.abs( distance );\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\t\r\n\t\tthis.add( object );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn levels[ i - 1 ].object;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\t\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.LOD.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function update( camera ) {\r\n\t\r\n\t\t\tvar levels = this.levels;\r\n\t\r\n\t\t\tif ( levels.length > 1 ) {\r\n\t\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\t\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\t\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\t\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\tTHREE.LOD.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\t\r\n\t\tvar levels = source.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\tdata.object.levels = [];\r\n\t\r\n\t\tvar levels = this.levels;\r\n\t\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar level = levels[ i ];\r\n\t\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/objects/Sprite.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Sprite = ( function () {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\t\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\t\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\treturn function Sprite( material ) {\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tthis.type = 'Sprite';\r\n\t\r\n\t\t\tthis.geometry = geometry;\r\n\t\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\tTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\t\r\n\tTHREE.Sprite.prototype.raycast = ( function () {\r\n\t\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\t\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\t\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\t\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\t\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tintersects.push( {\r\n\t\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.Sprite.prototype.clone = function () {\r\n\t\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\t\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\t\r\n\t\t// only serialize if not in meta materials cache\r\n\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\t\r\n\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdata.object.material = this.material.uuid;\r\n\t\r\n\t\treturn data;\r\n\t\r\n\t};\r\n\t\r\n\t// Backwards compatibility\r\n\t\r\n\tTHREE.Particle = THREE.Sprite;\r\n\t\r\n\t// File:src/objects/LensFlare.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.lensFlares = [];\r\n\t\r\n\t\tthis.positionScreen = new THREE.Vector3();\r\n\t\tthis.customUpdateCallback = undefined;\r\n\t\r\n\t\tif ( texture !== undefined ) {\r\n\t\r\n\t\t\tthis.add( texture, size, distance, blending, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\t\r\n\t\r\n\t/*\r\n\t * Add: adds another flare\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\t\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\t\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\t\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\t\r\n\tTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\t\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\t\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\t\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\t\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\t\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\t\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Scene.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Scene = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Scene';\r\n\t\r\n\t\tthis.fog = null;\r\n\t\tthis.overrideMaterial = null;\r\n\t\r\n\t\tthis.autoUpdate = true; // checked by the renderer\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\t\r\n\tTHREE.Scene.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\t\r\n\t\tthis.autoUpdate = source.autoUpdate;\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/Fog.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Fog = function ( color, near, far ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\r\n\t\tthis.near = ( near !== undefined ) ? near : 1;\r\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Fog.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/scenes/FogExp2.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.FogExp2 = function ( color, density ) {\r\n\t\r\n\t\tthis.name = '';\r\n\t\r\n\t\tthis.color = new THREE.Color( color );\r\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FogExp2.prototype.clone = function () {\r\n\t\r\n\t\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk.js\r\n\t\r\n\tTHREE.ShaderChunk = {};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\t\r\n\t// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\t\r\n\tTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\t\r\n\t// File:src/renderers/shaders/UniformsUtils.js\r\n\t\r\n\t/**\r\n\t * Uniform Utilities\r\n\t */\r\n\t\r\n\tTHREE.UniformsUtils = {\r\n\t\r\n\t\tmerge: function ( uniforms ) {\r\n\t\r\n\t\t\tvar merged = {};\r\n\t\r\n\t\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\t\r\n\t\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\t\r\n\t\t\t\tfor ( var p in tmp ) {\r\n\t\r\n\t\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn merged;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function ( uniforms_src ) {\r\n\t\r\n\t\t\tvar uniforms_dst = {};\r\n\t\r\n\t\t\tfor ( var u in uniforms_src ) {\r\n\t\r\n\t\t\t\tuniforms_dst[ u ] = {};\r\n\t\r\n\t\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\t\r\n\t\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\t\r\n\t\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\t\r\n\t\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms_dst;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/UniformsLib.js\r\n\t\r\n\t/**\r\n\t * Uniforms library for shared webgl shaders\r\n\t */\r\n\t\r\n\tTHREE.UniformsLib = {\r\n\t\r\n\t\tcommon: {\r\n\t\r\n\t\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\taomap: {\r\n\t\r\n\t\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlightmap: {\r\n\t\r\n\t\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\t\r\n\t\t},\r\n\t\r\n\t\temissivemap: {\r\n\t\r\n\t\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\t\r\n\t\t},\r\n\t\r\n\t\tbumpmap: {\r\n\t\r\n\t\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tnormalmap: {\r\n\t\r\n\t\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdisplacementmap: {\r\n\t\r\n\t\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfog : {\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tlights: {\r\n\t\r\n\t\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\t\r\n\t\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpoints: {\r\n\t\r\n\t\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\t\r\n\t\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\t\r\n\t\t},\r\n\t\r\n\t\tshadowmap: {\r\n\t\r\n\t\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\t\r\n\t\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\t\r\n\t\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/shaders/ShaderLib.js\r\n\t\r\n\t/**\r\n\t * Webgl Shader Library for three.js\r\n\t *\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\t\r\n\tTHREE.ShaderLib = {\r\n\t\r\n\t\t'basic': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'lambert': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define LAMBERT\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vLightFront;\",\r\n\t\r\n\t\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\t\r\n\t\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\t\"\t\telse\",\r\n\t\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'phong': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"varying vec3 vViewPosition;\",\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\",\r\n\t\r\n\t\t\t\t\"\tvarying vec3 vNormal;\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\t\r\n\t\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\t\r\n\t\t\t\t\"#endif\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"#define PHONG\",\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\t\"uniform float shininess;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'points': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float size;\",\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\t\"\t#else\",\r\n\t\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'dashed': {\r\n\t\r\n\t\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\r\n\t\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\r\n\t\t\t\t{\r\n\t\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t\t}\r\n\t\r\n\t\t\t] ),\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"uniform float scale;\",\r\n\t\t\t\t\"attribute float lineDistance;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\r\n\t\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\t\r\n\t\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\t\"uniform float totalSize;\",\r\n\t\r\n\t\t\t\t\"varying float vLineDistance;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\t\r\n\t\t\t\t\"\t\tdiscard;\",\r\n\t\r\n\t\t\t\t\"\t}\",\r\n\t\r\n\t\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\r\n\t\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'depth': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float mNear;\",\r\n\t\t\t\t\"uniform float mFar;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t'normal': {\r\n\t\r\n\t\t\tuniforms: {\r\n\t\r\n\t\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"varying vec3 vNormal;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'cube': {\r\n\t\r\n\t\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* -------------------------------------------------------------------------\r\n\t\t//\tCube map shader\r\n\t\t ------------------------------------------------------------------------- */\r\n\t\r\n\t\t'equirect': {\r\n\t\r\n\t\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\t\r\n\t\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\t\"uniform float tFlip;\",\r\n\t\r\n\t\t\t\t\"varying vec3 vWorldPosition;\",\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t},\r\n\t\r\n\t\t/* Depth encoding into RGBA texture\r\n\t\t *\r\n\t\t * based on SpiderGL shadow map example\r\n\t\t * http://spidergl.org/example.php?id=6\r\n\t\t *\r\n\t\t * originally from\r\n\t\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t\t *\r\n\t\t * see also\r\n\t\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t\t */\r\n\t\r\n\t\t'depthRGBA': {\r\n\t\r\n\t\t\tuniforms: {},\r\n\t\r\n\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\t\r\n\t\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\t\r\n\t\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\t\"\treturn res;\",\r\n\t\r\n\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\r\n\t\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\t\r\n\t\t\t\t\"\t#else\",\r\n\t\r\n\t\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\t\r\n\t\t\t\t\"\t#endif\",\r\n\t\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\t\r\n\t\t\t\t\"}\"\r\n\t\r\n\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderer.js\r\n\t\r\n\t/**\r\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author szimek / https://github.com/szimek/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderer = function ( parameters ) {\r\n\t\r\n\t\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\t\r\n\t\t_width = _canvas.width,\r\n\t\t_height = _canvas.height,\r\n\t\r\n\t\tpixelRatio = 1,\r\n\t\r\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t\r\n\t\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t\t_clearAlpha = 0;\r\n\t\r\n\t\tvar lights = [];\r\n\t\r\n\t\tvar opaqueObjects = [];\r\n\t\tvar opaqueObjectsLastIndex = -1;\r\n\t\tvar transparentObjects = [];\r\n\t\tvar transparentObjectsLastIndex = -1;\r\n\t\r\n\t\tvar opaqueImmediateObjects = [];\r\n\t\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\t\tvar transparentImmediateObjects = [];\r\n\t\tvar transparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\tvar morphInfluences = new Float32Array( 8 );\r\n\t\r\n\t\r\n\t\tvar sprites = [];\r\n\t\tvar lensFlares = [];\r\n\t\r\n\t\t// public properties\r\n\t\r\n\t\tthis.domElement = _canvas;\r\n\t\tthis.context = null;\r\n\t\r\n\t\t// clearing\r\n\t\r\n\t\tthis.autoClear = true;\r\n\t\tthis.autoClearColor = true;\r\n\t\tthis.autoClearDepth = true;\r\n\t\tthis.autoClearStencil = true;\r\n\t\r\n\t\t// scene graph\r\n\t\r\n\t\tthis.sortObjects = true;\r\n\t\r\n\t\t// physically based shading\r\n\t\r\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\t\tthis.gammaInput = false;\r\n\t\tthis.gammaOutput = false;\r\n\t\r\n\t\t// morphs\r\n\t\r\n\t\tthis.maxMorphTargets = 8;\r\n\t\tthis.maxMorphNormals = 4;\r\n\t\r\n\t\t// flags\r\n\t\r\n\t\tthis.autoScaleCubemaps = true;\r\n\t\r\n\t\t// internal properties\r\n\t\r\n\t\tvar _this = this,\r\n\t\r\n\t\t// internal state cache\r\n\t\r\n\t\t_currentProgram = null,\r\n\t\t_currentFramebuffer = null,\r\n\t\t_currentMaterialId = - 1,\r\n\t\t_currentGeometryProgram = '',\r\n\t\t_currentCamera = null,\r\n\t\r\n\t\t_usedTextureUnits = 0,\r\n\t\r\n\t\t_viewportX = 0,\r\n\t\t_viewportY = 0,\r\n\t\t_viewportWidth = _canvas.width,\r\n\t\t_viewportHeight = _canvas.height,\r\n\t\t_currentWidth = 0,\r\n\t\t_currentHeight = 0,\r\n\t\r\n\t\t// frustum\r\n\t\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\r\n\t\t // camera matrices cache\r\n\t\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_vector3 = new THREE.Vector3(),\r\n\t\r\n\t\t// light arrays cache\r\n\t\r\n\t\t_direction = new THREE.Vector3(),\r\n\t\r\n\t\t_lightsNeedUpdate = true,\r\n\t\r\n\t\t_lights = {\r\n\t\r\n\t\t\tambient: [ 0, 0, 0 ],\r\n\t\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// info\r\n\t\r\n\t\t_infoMemory = {\r\n\t\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\t\r\n\t\t},\r\n\t\r\n\t\t_infoRender = {\r\n\t\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.info = {\r\n\t\r\n\t\t\trender: _infoRender,\r\n\t\t\tmemory: _infoMemory,\r\n\t\t\tprograms: null\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\t// initialize\r\n\t\r\n\t\tvar _gl;\r\n\t\r\n\t\ttry {\r\n\t\r\n\t\t\tvar attributes = {\r\n\t\t\t\talpha: _alpha,\r\n\t\t\t\tdepth: _depth,\r\n\t\t\t\tstencil: _stencil,\r\n\t\t\t\tantialias: _antialias,\r\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t\t};\r\n\t\r\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\t\r\n\t\t\tif ( _gl === null ) {\r\n\t\r\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthrow 'Error creating WebGL context.';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t} catch ( error ) {\r\n\t\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\t\r\n\t\textensions.get( 'OES_texture_float' );\r\n\t\textensions.get( 'OES_texture_float_linear' );\r\n\t\textensions.get( 'OES_texture_half_float' );\r\n\t\textensions.get( 'OES_texture_half_float_linear' );\r\n\t\textensions.get( 'OES_standard_derivatives' );\r\n\t\textensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\t\r\n\t\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\t\tvar properties = new THREE.WebGLProperties();\r\n\t\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\t\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\t\r\n\t\tthis.info.programs = programCache.programs;\r\n\t\r\n\t\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\t\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction glClearColor( r, g, b, a ) {\r\n\t\r\n\t\t\tif ( _premultipliedAlpha === true ) {\r\n\t\r\n\t\t\t\tr *= a; g *= a; b *= a;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_gl.clearColor( r, g, b, a );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setDefaultGLState() {\r\n\t\r\n\t\t\tstate.init();\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction resetGLState() {\r\n\t\r\n\t\t\t_currentProgram = null;\r\n\t\t\t_currentCamera = null;\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\tstate.reset();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tsetDefaultGLState();\r\n\t\r\n\t\tthis.context = _gl;\r\n\t\tthis.capabilities = capabilities;\r\n\t\tthis.extensions = extensions;\r\n\t\tthis.state = state;\r\n\t\r\n\t\t// shadow map\r\n\t\r\n\t\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\t\r\n\t\tthis.shadowMap = shadowMap;\r\n\t\r\n\t\r\n\t\t// Plugins\r\n\t\r\n\t\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\t\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\t\r\n\t\t// API\r\n\t\r\n\t\tthis.getContext = function () {\r\n\t\r\n\t\t\treturn _gl;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getContextAttributes = function () {\r\n\t\r\n\t\t\treturn _gl.getContextAttributes();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.forceContextLoss = function () {\r\n\t\r\n\t\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getMaxAnisotropy = ( function () {\r\n\t\r\n\t\t\tvar value;\r\n\t\r\n\t\t\treturn function getMaxAnisotropy() {\r\n\t\r\n\t\t\t\tif ( value !== undefined ) return value;\r\n\t\r\n\t\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tvalue = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn value;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t} )();\r\n\t\r\n\t\tthis.getPrecision = function () {\r\n\t\r\n\t\t\treturn capabilities.precision;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getPixelRatio = function () {\r\n\t\r\n\t\t\treturn pixelRatio;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPixelRatio = function ( value ) {\r\n\t\r\n\t\t\tif ( value !== undefined ) pixelRatio = value;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getSize = function () {\r\n\t\r\n\t\t\treturn {\r\n\t\t\t\twidth: _width,\r\n\t\t\t\theight: _height\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setSize = function ( width, height, updateStyle ) {\r\n\t\r\n\t\t\t_width = width;\r\n\t\t\t_height = height;\r\n\t\r\n\t\t\t_canvas.width = width * pixelRatio;\r\n\t\t\t_canvas.height = height * pixelRatio;\r\n\t\r\n\t\t\tif ( updateStyle !== false ) {\r\n\t\r\n\t\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t\t_canvas.style.height = height + 'px';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.setViewport( 0, 0, width, height );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setViewport = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_viewportX = x * pixelRatio;\r\n\t\t\t_viewportY = y * pixelRatio;\r\n\t\r\n\t\t\t_viewportWidth = width * pixelRatio;\r\n\t\t\t_viewportHeight = height * pixelRatio;\r\n\t\r\n\t\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissor = function ( x, y, width, height ) {\r\n\t\r\n\t\t\t_gl.scissor(\r\n\t\t\t\tx * pixelRatio,\r\n\t\t\t\ty * pixelRatio,\r\n\t\t\t\twidth * pixelRatio,\r\n\t\t\t\theight * pixelRatio\r\n\t\t\t);\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableScissorTest = function ( boolean ) {\r\n\t\r\n\t\t\tstate.setScissorTest( boolean );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Clearing\r\n\t\r\n\t\tthis.getClearColor = function () {\r\n\t\r\n\t\t\treturn _clearColor;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearColor = function ( color, alpha ) {\r\n\t\r\n\t\t\t_clearColor.set( color );\r\n\t\r\n\t\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getClearAlpha = function () {\r\n\t\r\n\t\t\treturn _clearAlpha;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setClearAlpha = function ( alpha ) {\r\n\t\r\n\t\t\t_clearAlpha = alpha;\r\n\t\r\n\t\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function ( color, depth, stencil ) {\r\n\t\r\n\t\t\tvar bits = 0;\r\n\t\r\n\t\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\t\r\n\t\t\t_gl.clear( bits );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearColor = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearDepth = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearStencil = function () {\r\n\t\r\n\t\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\t\tthis.clear( color, depth, stencil );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Reset\r\n\t\r\n\t\tthis.resetGLState = resetGLState;\r\n\t\r\n\t\tthis.dispose = function() {\r\n\t\r\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Events\r\n\t\r\n\t\tfunction onContextLost( event ) {\r\n\t\r\n\t\t\tevent.preventDefault();\r\n\t\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\t\r\n\t\t\tproperties.clear();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction onTextureDispose( event ) {\r\n\t\r\n\t\t\tvar texture = event.target;\r\n\t\r\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\tdeallocateTexture( texture );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onRenderTargetDispose( event ) {\r\n\t\r\n\t\t\tvar renderTarget = event.target;\r\n\t\r\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\tdeallocateRenderTarget( renderTarget );\r\n\t\r\n\t\t\t_infoMemory.textures --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onMaterialDispose( event ) {\r\n\t\r\n\t\t\tvar material = event.target;\r\n\t\r\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\tdeallocateMaterial( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer deallocation\r\n\t\r\n\t\tfunction deallocateTexture( texture ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t// cube texture\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// 2D texture\r\n\t\r\n\t\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\t\r\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove all webgl properties\r\n\t\t\tproperties.delete( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateRenderTarget( renderTarget ) {\r\n\t\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\t\r\n\t\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tproperties.delete( renderTarget );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deallocateMaterial( material ) {\r\n\t\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\tproperties.delete( material );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction releaseMaterialProgramReference( material ) {\r\n\t\r\n\t\t\tvar programInfo = properties.get( material ).program;\r\n\t\r\n\t\t\tmaterial.program = undefined;\r\n\t\r\n\t\t\tif ( programInfo !== undefined ) {\r\n\t\r\n\t\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Buffer rendering\r\n\t\r\n\t\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar buffers = properties.get( object );\r\n\t\r\n\t\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( object.hasPositions ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasNormals ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\t\r\n\t\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\t\r\n\t\t\t\t\t\tvar array = object.normalArray;\r\n\t\r\n\t\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\t\r\n\t\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasUvs && material.map ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\t\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\t\r\n\t\t\t\tstate.enableAttribute( attributes.color );\r\n\t\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\t\r\n\t\t\tobject.count = 0;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\t\r\n\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\tvar updateBuffers = false;\r\n\t\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\t\r\n\t\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\t\r\n\t\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( morphTargetInfluences !== undefined ) {\r\n\t\r\n\t\t\t\tvar activeInfluences = [];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tactiveInfluences.sort( numericalSort );\r\n\t\r\n\t\t\t\tif ( activeInfluences.length > 8 ) {\r\n\t\r\n\t\t\t\t\tactiveInfluences.length = 8;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\t\r\n\t\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar index = influence[ 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar uniforms = program.getUniforms();\r\n\t\r\n\t\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tupdateBuffers = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar renderer;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\t\trenderer.setIndex( index );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderer = bufferRenderer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( updateBuffers ) {\r\n\t\r\n\t\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( group === undefined ) {\r\n\t\r\n\t\t\t\tvar count;\r\n\t\r\n\t\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\t\tcount = index.count;\r\n\t\r\n\t\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\tcount = position.data.array.length / 3;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tcount = position.count;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar drawRange = geometry.drawRange;\r\n\t\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: drawRange.start,\r\n\t\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tif ( material.wireframe === true ) {\r\n\t\r\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\t\r\n\t\t\t\t\trenderer.renderInstances( geometry );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\t\r\n\t\t\t\tvar lineWidth = material.linewidth;\r\n\t\r\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\t\r\n\t\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINES );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\t\r\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\r\n\t\t\tvar geometryAttributes = geometry.attributes;\r\n\t\r\n\t\t\tvar programAttributes = program.getAttributes();\r\n\t\r\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\t\r\n\t\t\tfor ( var name in programAttributes ) {\r\n\t\r\n\t\t\t\tvar programAttribute = programAttributes[ name ];\r\n\t\r\n\t\t\t\tif ( programAttribute >= 0 ) {\r\n\t\r\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\t\r\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\t\r\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\t\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\t\r\n\t\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\t\r\n\t\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\t\r\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\t\r\n\t\t\t\t\t\tif ( value !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tswitch ( value.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Sorting\r\n\t\r\n\t\tfunction numericalSort ( a, b ) {\r\n\t\r\n\t\t\treturn b[ 0 ] - a[ 0 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} else if ( a.material.id !== b.material.id ) {\r\n\t\r\n\t\t\t\treturn a.material.id - b.material.id;\r\n\t\r\n\t\t\t} else if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn a.z - b.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction reversePainterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\t\r\n\t\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\t\r\n\t\t\t} if ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn a.id - b.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Rendering\r\n\t\r\n\t\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\t\r\n\t\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\t// reset caching for this frame\r\n\t\r\n\t\t\t_currentGeometryProgram = '';\r\n\t\t\t_currentMaterialId = - 1;\r\n\t\t\t_currentCamera = null;\r\n\t\t\t_lightsNeedUpdate = true;\r\n\t\r\n\t\t\t// update scene graph\r\n\t\r\n\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\t\r\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\t\r\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\tlights.length = 0;\r\n\t\r\n\t\t\topaqueObjectsLastIndex = -1;\r\n\t\t\ttransparentObjectsLastIndex = -1;\r\n\t\r\n\t\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\t\r\n\t\t\tsprites.length = 0;\r\n\t\t\tlensFlares.length = 0;\r\n\t\r\n\t\t\tprojectObject( scene );\r\n\t\r\n\t\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\t\r\n\t\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\t\r\n\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tshadowMap.render( scene, camera );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\t_infoRender.calls = 0;\r\n\t\t\t_infoRender.vertices = 0;\r\n\t\t\t_infoRender.faces = 0;\r\n\t\t\t_infoRender.points = 0;\r\n\t\r\n\t\t\tthis.setRenderTarget( renderTarget );\r\n\t\r\n\t\t\tif ( this.autoClear || forceClear ) {\r\n\t\r\n\t\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tif ( scene.overrideMaterial ) {\r\n\t\r\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// opaque pass (front-to-back order)\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t\t// transparent pass (back-to-front order)\r\n\t\r\n\t\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// custom render plugins (post pass)\r\n\t\r\n\t\t\tspritePlugin.render( scene, camera );\r\n\t\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\t\r\n\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\t\r\n\t\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\t\r\n\t\t\tstate.setDepthTest( true );\r\n\t\t\tstate.setDepthWrite( true );\r\n\t\t\tstate.setColorWrite( true );\r\n\t\r\n\t\t\t// _gl.finish();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction pushImmediateRenderItem( object ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( object.material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentImmediateObjects;\r\n\t\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing position or grow the array\r\n\t\r\n\t\t\tif ( index < array.length ) {\r\n\t\r\n\t\t\t\tarray[ index ] = object;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\t\r\n\t\t\tvar array, index;\r\n\t\r\n\t\t\t// allocate the next position in the appropriate array\r\n\t\r\n\t\t\tif ( material.transparent ) {\r\n\t\r\n\t\t\t\tarray = transparentObjects;\r\n\t\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tarray = opaqueObjects;\r\n\t\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// recycle existing render item or grow the array\r\n\t\r\n\t\t\tvar renderItem = array[ index ];\r\n\t\r\n\t\t\tif ( renderItem !== undefined ) {\r\n\t\r\n\t\t\t\trenderItem.id = object.id;\r\n\t\t\t\trenderItem.object = object;\r\n\t\t\t\trenderItem.geometry = geometry;\r\n\t\t\t\trenderItem.material = material;\r\n\t\t\t\trenderItem.z = _vector3.z;\r\n\t\t\t\trenderItem.group = group;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\trenderItem = {\r\n\t\t\t\t\tid: object.id,\r\n\t\t\t\t\tobject: object,\r\n\t\t\t\t\tgeometry: geometry,\r\n\t\t\t\t\tmaterial: material,\r\n\t\t\t\t\tz: _vector3.z,\r\n\t\t\t\t\tgroup: group\r\n\t\t\t\t};\r\n\t\r\n\t\t\t\t// assert( index === array.length );\r\n\t\t\t\tarray.push( renderItem );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\t\r\n\t\t\t\tlights.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\t\r\n\t\t\t\tsprites.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\t\r\n\t\t\t\tlensFlares.push( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\t\r\n\t\t\t\tpushImmediateRenderItem( object );\r\n\t\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tobject.skeleton.update();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\t\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\t\r\n\t\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar renderItem = renderList[ i ];\r\n\t\r\n\t\t\t\tvar object = renderItem.object;\r\n\t\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\t\tvar group = renderItem.group;\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\t\r\n\t\t\tvar material = overrideMaterial;\r\n\t\r\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar object = renderList[ i ];\r\n\t\r\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\t\r\n\t\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\t\r\n\t\t\t\tsetMaterial( material );\r\n\t\r\n\t\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\t\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\t\r\n\t\t\t\tobject.render( function ( object ) {\r\n\t\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\t\r\n\t\t\t\t} );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction initMaterial( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\t\r\n\t\t\tvar program = materialProperties.program;\r\n\t\t\tvar programChange = true;\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\t// new material\r\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\t\r\n\t\t\t} else if ( program.code !== code ) {\r\n\t\r\n\t\t\t\t// changed glsl or parameters\r\n\t\t\t\treleaseMaterialProgramReference( material );\r\n\t\r\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\t\r\n\t\t\t\t// same glsl and uniform list\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// only rebuild uniform list\r\n\t\t\t\tprogramChange = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( programChange ) {\r\n\t\r\n\t\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\t\tname: material.type,\r\n\t\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\t\r\n\t\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\t\r\n\t\t\t\tmaterialProperties.program = program;\r\n\t\t\t\tmaterial.program = program;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar attributes = program.getAttributes();\r\n\t\r\n\t\t\tif ( material.morphTargets ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.morphNormals ) {\r\n\t\r\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\t\r\n\t\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\t\r\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tmaterialProperties.uniformsList = [];\r\n\t\r\n\t\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\t\r\n\t\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\t\r\n\t\t\t\tvar location = uniformLocations[ u ];\r\n\t\r\n\t\t\t\tif ( location ) {\r\n\t\r\n\t\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterial( material ) {\r\n\t\r\n\t\t\tsetMaterialFaces( material );\r\n\t\r\n\t\t\tif ( material.transparent === true ) {\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\t\tstate.setColorWrite( material.colorWrite );\r\n\t\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setMaterialFaces( material ) {\r\n\t\r\n\t\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\t\r\n\t\t\t_usedTextureUnits = 0;\r\n\t\r\n\t\t\tvar materialProperties = properties.get( material );\r\n\t\r\n\t\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\t\r\n\t\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\t\tmaterial.needsUpdate = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar refreshProgram = false;\r\n\t\t\tvar refreshMaterial = false;\r\n\t\t\tvar refreshLights = false;\r\n\t\r\n\t\t\tvar program = materialProperties.program,\r\n\t\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\t\r\n\t\t\tif ( program.id !== _currentProgram ) {\r\n\t\r\n\t\t\t\t_gl.useProgram( program.program );\r\n\t\t\t\t_currentProgram = program.id;\r\n\t\r\n\t\t\t\trefreshProgram = true;\r\n\t\t\t\trefreshMaterial = true;\r\n\t\t\t\trefreshLights = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.id !== _currentMaterialId ) {\r\n\t\r\n\t\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t\t_currentMaterialId = material.id;\r\n\t\r\n\t\t\t\trefreshMaterial = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\t\r\n\t\t\t\t// load material specific uniforms\r\n\t\t\t\t// (shader material also gets them for the sake of genericity)\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material.envMap ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t\t material.skinning ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t\t// not sure why, but otherwise weird things happen\r\n\t\r\n\t\t\tif ( material.skinning ) {\r\n\t\r\n\t\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\t\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\t\r\n\t\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( refreshMaterial ) {\r\n\t\r\n\t\t\t\t// refresh uniforms common to several materials\r\n\t\r\n\t\t\t\tif ( fog && material.fog ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material.lights ) {\r\n\t\r\n\t\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\t\r\n\t\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( refreshLights ) {\r\n\t\r\n\t\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// refresh single material specific uniforms\r\n\t\r\n\t\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\t\r\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\t\r\n\t\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// load common uniforms\r\n\t\r\n\t\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tloadUniformsMatrices( p_uniforms, object );\r\n\t\r\n\t\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (refresh uniforms objects)\r\n\t\r\n\t\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\r\n\t\t\tif ( material.emissive ) {\r\n\t\r\n\t\t\t\tuniforms.emissive.value = material.emissive;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\t\r\n\t\t\tif ( material.aoMap ) {\r\n\t\r\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// uv repeat and offset setting priorities\r\n\t\t\t// 1. color map\r\n\t\t\t// 2. specular map\r\n\t\t\t// 3. normal map\r\n\t\t\t// 4. bump map\r\n\t\t\t// 5. alpha map\r\n\t\t\t// 6. emissive map\r\n\t\r\n\t\t\tvar uvScaleMap;\r\n\t\r\n\t\t\tif ( material.map ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.map;\r\n\t\r\n\t\t\t} else if ( material.specularMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.specularMap;\r\n\t\r\n\t\t\t} else if ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.displacementMap;\r\n\t\r\n\t\t\t} else if ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.normalMap;\r\n\t\r\n\t\t\t} else if ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.bumpMap;\r\n\t\r\n\t\t\t} else if ( material.alphaMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.alphaMap;\r\n\t\r\n\t\t\t} else if ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuvScaleMap = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( uvScaleMap !== undefined ) {\r\n\t\r\n\t\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\t\tvar repeat = uvScaleMap.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tuniforms.envMap.value = material.envMap;\r\n\t\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\t\r\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.diffuse.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\t\tuniforms.scale.value = material.scale;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.psColor.value = material.color;\r\n\t\t\tuniforms.opacity.value = material.opacity;\r\n\t\t\tuniforms.size.value = material.size;\r\n\t\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\t\r\n\t\t\tuniforms.map.value = material.map;\r\n\t\r\n\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\tvar offset = material.map.offset;\r\n\t\t\t\tvar repeat = material.map.repeat;\r\n\t\r\n\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\t\r\n\t\t\tuniforms.fogColor.value = fog.color;\r\n\t\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\t\tuniforms.fogFar.value = fog.far;\r\n\t\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\tuniforms.fogDensity.value = fog.density;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\t\r\n\t\t\tuniforms.specular.value = material.specular;\r\n\t\t\tuniforms.shininess.value = material.shininess;\r\n\t\r\n\t\t\tif ( material.lightMap ) {\r\n\t\r\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.emissiveMap ) {\r\n\t\r\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.bumpMap ) {\r\n\t\r\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.normalMap ) {\r\n\t\r\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.displacementMap ) {\r\n\t\r\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\t\r\n\t\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\t\r\n\t\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\t\r\n\t\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\t\r\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\t\r\n\t\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\t\r\n\t\t\tif ( uniforms.shadowMatrix ) {\r\n\t\r\n\t\t\t\tvar j = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar light = lights[ i ];\r\n\t\r\n\t\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\t\r\n\t\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\t\r\n\t\t\t\t\t\tj ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Uniforms (load to GPU)\r\n\t\r\n\t\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\t\r\n\t\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\t\r\n\t\t\tif ( uniforms.normalMatrix ) {\r\n\t\r\n\t\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getTextureUnit() {\r\n\t\r\n\t\t\tvar textureUnit = _usedTextureUnits;\r\n\t\r\n\t\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_usedTextureUnits += 1;\r\n\t\r\n\t\t\treturn textureUnit;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction loadUniformsGeneric ( uniforms ) {\r\n\t\r\n\t\t\tvar texture, textureUnit;\r\n\t\r\n\t\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\t\r\n\t\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\t\r\n\t\t\t\tvar type = uniform.type;\r\n\t\t\t\tvar value = uniform.value;\r\n\t\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\t\r\n\t\t\t\tswitch ( type ) {\r\n\t\r\n\t\t\t\t\tcase '1i':\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1f':\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2f':\r\n\t\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3f':\r\n\t\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4f':\r\n\t\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1iv':\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3iv':\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '1fv':\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '2fv':\r\n\t\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '3fv':\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase '4fv':\r\n\t\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t//\r\n\t\r\n\t\t\t\t\tcase 'i':\r\n\t\r\n\t\t\t\t\t\t// single integer\r\n\t\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'f':\r\n\t\r\n\t\t\t\t\t\t// single float\r\n\t\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'c':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'iv':\r\n\t\r\n\t\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv1':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'fv':\r\n\t\r\n\t\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v2v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector2\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'v4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Vector4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm3v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix3\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'm4v':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Matrix4\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 't':\r\n\t\r\n\t\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\t\r\n\t\t\t\t\t\ttexture = value;\r\n\t\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\t\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\t\r\n\t\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'tv':\r\n\t\r\n\t\t\t\t\t\t// array of THREE.Texture (2d)\r\n\t\r\n\t\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array = [];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\t\r\n\t\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\t\r\n\t\t\t\t\t\t\tif ( ! texture ) continue;\r\n\t\r\n\t\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\t\r\n\t\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupLights ( lights, camera ) {\r\n\t\r\n\t\t\tvar l, ll, light,\r\n\t\t\tr = 0, g = 0, b = 0,\r\n\t\t\tcolor, skyColor, groundColor,\r\n\t\t\tintensity,\r\n\t\t\tdistance,\r\n\t\r\n\t\t\tzlights = _lights,\r\n\t\r\n\t\t\tviewMatrix = camera.matrixWorldInverse,\r\n\t\r\n\t\t\tdirColors = zlights.directional.colors,\r\n\t\t\tdirPositions = zlights.directional.positions,\r\n\t\r\n\t\t\tpointColors = zlights.point.colors,\r\n\t\t\tpointPositions = zlights.point.positions,\r\n\t\t\tpointDistances = zlights.point.distances,\r\n\t\t\tpointDecays = zlights.point.decays,\r\n\t\r\n\t\t\tspotColors = zlights.spot.colors,\r\n\t\t\tspotPositions = zlights.spot.positions,\r\n\t\t\tspotDistances = zlights.spot.distances,\r\n\t\t\tspotDirections = zlights.spot.directions,\r\n\t\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\t\tspotExponents = zlights.spot.exponents,\r\n\t\t\tspotDecays = zlights.spot.decays,\r\n\t\r\n\t\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\t\themiPositions = zlights.hemi.positions,\r\n\t\r\n\t\t\tdirLength = 0,\r\n\t\t\tpointLength = 0,\r\n\t\t\tspotLength = 0,\r\n\t\t\themiLength = 0,\r\n\t\r\n\t\t\tdirCount = 0,\r\n\t\t\tpointCount = 0,\r\n\t\t\tspotCount = 0,\r\n\t\t\themiCount = 0,\r\n\t\r\n\t\t\tdirOffset = 0,\r\n\t\t\tpointOffset = 0,\r\n\t\t\tspotOffset = 0,\r\n\t\t\themiOffset = 0;\r\n\t\r\n\t\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tlight = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow ) continue;\r\n\t\r\n\t\t\t\tcolor = light.color;\r\n\t\t\t\tintensity = light.intensity;\r\n\t\t\t\tdistance = light.distance;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tr += color.r;\r\n\t\t\t\t\tg += color.g;\r\n\t\t\t\t\tb += color.b;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\tdirCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tdirOffset = dirLength * 3;\r\n\t\r\n\t\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\t\r\n\t\t\t\t\tdirLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\t\r\n\t\t\t\t\tpointCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tpointOffset = pointLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tpointLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\tspotCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\tspotOffset = spotLength * 3;\r\n\t\r\n\t\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\t\r\n\t\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\t\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\t\r\n\t\t\t\t\tspotLength += 1;\r\n\t\r\n\t\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\t\r\n\t\t\t\t\themiCount += 1;\r\n\t\r\n\t\t\t\t\tif ( ! light.visible ) continue;\r\n\t\r\n\t\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\t\r\n\t\t\t\t\themiOffset = hemiLength * 3;\r\n\t\r\n\t\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\t\r\n\t\t\t\t\tskyColor = light.color;\r\n\t\t\t\t\tgroundColor = light.groundColor;\r\n\t\r\n\t\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\t\r\n\t\t\t\t\themiLength += 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// null eventual remains from removed lights\r\n\t\t\t// (this is to avoid if in shader)\r\n\t\r\n\t\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\t\r\n\t\t\tzlights.directional.length = dirLength;\r\n\t\t\tzlights.point.length = pointLength;\r\n\t\t\tzlights.spot.length = spotLength;\r\n\t\t\tzlights.hemi.length = hemiLength;\r\n\t\r\n\t\t\tzlights.ambient[ 0 ] = r;\r\n\t\t\tzlights.ambient[ 1 ] = g;\r\n\t\t\tzlights.ambient[ 2 ] = b;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// GL state setting\r\n\t\r\n\t\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\t\r\n\t\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\t\r\n\t\t\t\tstate.disable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Textures\r\n\t\r\n\t\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\t\r\n\t\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\t\r\n\t\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\t\r\n\t\t\tif ( extension ) {\r\n\t\r\n\t\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\t\r\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\t\r\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\t\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\t\r\n\t\t\t\ttextureProperties.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.__webglInit = true;\r\n\t\r\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\t\r\n\t\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\t\r\n\t\t\tvar image = texture.image,\r\n\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\t\r\n\t\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\r\n\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// regular Texture (image, video, canvas)\r\n\t\r\n\t\t\t\t// use manually created mipmaps if available\r\n\t\t\t\t// if there are no manual mipmaps\r\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\t\r\n\t\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttexture.generateMipmaps = false;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setTexture = function ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\tvar image = texture.image;\r\n\t\r\n\t\t\t\tif ( image === undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( image.complete === false ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction clampToMaxSize ( image, maxSize ) {\r\n\t\r\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\t\r\n\t\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t\t// premultiplied alpha.\r\n\t\r\n\t\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\t\r\n\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\t\r\n\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\t\r\n\t\t\t\treturn canvas;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn image;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTexture ( texture, slot ) {\r\n\t\r\n\t\t\tvar textureProperties = properties.get( texture );\r\n\t\r\n\t\t\tif ( texture.image.length === 6 ) {\r\n\t\r\n\t\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\t\r\n\t\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\t\r\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\t\r\n\t\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\t\r\n\t\t\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\r\n\t\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\t\r\n\t\t\t\t\tvar cubeImage = [];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! isCompressed ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( isDataTexture ) {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\t\r\n\t\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\t\r\n\t\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\t\r\n\t\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\ttextureProperties.__version = texture.version;\r\n\t\r\n\t\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\t\r\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Render targets\r\n\t\r\n\t\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\t\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\t\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t\t*/\r\n\t\r\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setRenderTarget = function ( renderTarget ) {\r\n\t\r\n\t\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\r\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\t\r\n\t\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\t\r\n\t\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\t\r\n\t\t\t\t_infoMemory.textures ++;\r\n\t\r\n\t\t\t\t// Setup texture, create render and frame buffers\r\n\t\r\n\t\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\t\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\t\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\t\r\n\t\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\t\r\n\t\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Release everything\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar framebuffer, width, height, vx, vy;\r\n\t\r\n\t\t\tif ( renderTarget ) {\r\n\t\r\n\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\r\n\t\t\t\tif ( isCube ) {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\twidth = renderTarget.width;\r\n\t\t\t\theight = renderTarget.height;\r\n\t\r\n\t\t\t\tvx = 0;\r\n\t\t\t\tvy = 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tframebuffer = null;\r\n\t\r\n\t\t\t\twidth = _viewportWidth;\r\n\t\t\t\theight = _viewportHeight;\r\n\t\r\n\t\t\t\tvx = _viewportX;\r\n\t\t\t\tvy = _viewportY;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t\t_gl.viewport( vx, vy, width, height );\r\n\t\r\n\t\t\t\t_currentFramebuffer = framebuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_currentWidth = width;\r\n\t\t\t_currentHeight = height;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\t\r\n\t\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\t\r\n\t\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar restore = false;\r\n\t\r\n\t\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\t\r\n\t\t\t\t\trestore = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\t\r\n\t\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( restore ) {\r\n\t\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\t\r\n\t\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Fallback filters for non-power-of-2 textures\r\n\t\r\n\t\tfunction filterFallback ( f ) {\r\n\t\r\n\t\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\t\r\n\t\t\t\treturn _gl.NEAREST;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn _gl.LINEAR;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Map three.js constants to WebGL constants\r\n\t\r\n\t\tfunction paramThreeToGL ( p ) {\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\t\r\n\t\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\t\r\n\t\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\t\r\n\t\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\t\r\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\t\r\n\t\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\t\r\n\t\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t\tif ( extension !== null ) {\r\n\t\r\n\t\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// DEPRECATED\r\n\t\r\n\t\tthis.supportsFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsHalfFloatTextures = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsStandardDerivatives = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTextureS3TC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsCompressedTexturePVRTC = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsBlendMinMax = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsVertexTextures = function () {\r\n\t\r\n\t\t\treturn capabilities.vertexTextures;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.supportsInstancedArrays = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.initMaterial = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPrePlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.addPostPlugin = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.updateShadowMap = function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tObject.defineProperties( this, {\r\n\t\t\tshadowMapEnabled: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.enabled;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\t\tshadowMap.enabled = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapType: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.type;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\t\tshadowMap.type = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapCullFace: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.cullFace;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\t\tshadowMap.cullFace = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tshadowMapDebug: {\r\n\t\t\t\tget: function () {\r\n\t\r\n\t\t\t\t\treturn shadowMap.debug;\r\n\t\r\n\t\t\t\t},\r\n\t\t\t\tset: function ( value ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\t\tshadowMap.debug = value;\r\n\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/WebGLRenderTarget.js\r\n\t\r\n\t/**\r\n\t * @author szimek / https://github.com/szimek/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\t\r\n\t\tthis.uuid = THREE.Math.generateUUID();\r\n\t\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\t\r\n\t\toptions = options || {};\r\n\t\r\n\t\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\t\r\n\t\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\t\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\t\r\n\t\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\t\r\n\t\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\t\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\t\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\t\r\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\t\r\n\t\tthis.generateMipmaps = true;\r\n\t\r\n\t\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTarget.prototype = {\r\n\t\r\n\t\tconstructor: THREE.WebGLRenderTarget,\r\n\t\r\n\t\tsetSize: function ( width, height ) {\r\n\t\r\n\t\t\tif ( this.width !== width || this.height !== height ) {\r\n\t\r\n\t\t\t\tthis.width = width;\r\n\t\t\t\tthis.height = height;\r\n\t\r\n\t\t\t\tthis.dispose();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tclone: function () {\r\n\t\r\n\t\t\treturn new this.constructor().copy( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcopy: function ( source ) {\r\n\t\r\n\t\t\tthis.width = source.width;\r\n\t\t\tthis.height = source.height;\r\n\t\r\n\t\t\tthis.wrapS = source.wrapS;\r\n\t\t\tthis.wrapT = source.wrapT;\r\n\t\r\n\t\t\tthis.magFilter = source.magFilter;\r\n\t\t\tthis.minFilter = source.minFilter;\r\n\t\r\n\t\t\tthis.anisotropy = source.anisotropy;\r\n\t\r\n\t\t\tthis.offset.copy( source.offset );\r\n\t\t\tthis.repeat.copy( source.repeat );\r\n\t\r\n\t\t\tthis.format = source.format;\r\n\t\t\tthis.type = source.type;\r\n\t\r\n\t\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\r\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\r\n\t\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdispose: function () {\r\n\t\r\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\t\r\n\t// File:src/renderers/WebGLRenderTargetCube.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com\r\n\t */\r\n\t\r\n\tTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\t\r\n\t\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\t\r\n\t\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\n\tTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\t\r\n\t// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawArrays( mode, start, count );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar position = geometry.attributes.position;\r\n\t\r\n\t\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\t\r\n\t\tvar mode;\r\n\t\r\n\t\tfunction setMode( value ) {\r\n\t\r\n\t\t\tmode = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar type, size;\r\n\t\r\n\t\tfunction setIndex( index ) {\r\n\t\r\n\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\tsize = 4;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\tsize = 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction render( start, count ) {\r\n\t\r\n\t\t\t_gl.drawElements( mode, count, type, start * size );\r\n\t\r\n\t\t\t_infoRender.calls ++;\r\n\t\t\t_infoRender.vertices += count;\r\n\t\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction renderInstances( geometry ) {\r\n\t\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\r\n\t\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setMode = setMode;\r\n\t\tthis.setIndex = setIndex;\r\n\t\tthis.render = render;\r\n\t\tthis.renderInstances = renderInstances;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLExtensions.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLExtensions = function ( gl ) {\r\n\t\r\n\t\tvar extensions = {};\r\n\t\r\n\t\tthis.get = function ( name ) {\r\n\t\r\n\t\t\tif ( extensions[ name ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn extensions[ name ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar extension;\r\n\t\r\n\t\t\tswitch ( name ) {\r\n\t\r\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\tdefault:\r\n\t\t\t\t\textension = gl.getExtension( name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( extension === null ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\textensions[ name ] = extension;\r\n\t\r\n\t\t\treturn extension;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLCapabilities.js\r\n\t\r\n\tTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\t\r\n\t\tfunction getMaxPrecision( precision ) {\r\n\t\r\n\t\t\tif ( precision === 'highp' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'highp';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tprecision = 'mediump';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( precision === 'mediump' ) {\r\n\t\r\n\t\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\t\r\n\t\t\t\t\treturn 'mediump';\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn 'lowp';\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getMaxPrecision = getMaxPrecision;\r\n\t\r\n\t\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\t\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\t\r\n\t\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\t\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\t\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\t\r\n\t\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\t\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\t\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\t\r\n\t\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\t\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\t\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\t\r\n\t\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\t\r\n\t\tif ( _maxPrecision !== this.precision ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\t\tthis.precision = _maxPrecision;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tif ( this.logarithmicDepthBuffer ) {\r\n\t\r\n\t\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLGeometries.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = {};\r\n\t\r\n\t\tfunction get( object ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\t\r\n\t\t\t\treturn geometries[ geometry.id ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tvar buffergeometry;\r\n\t\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tbuffergeometry = geometry;\r\n\t\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\t\r\n\t\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\t\r\n\t\t\tinfo.memory.geometries ++;\r\n\t\r\n\t\t\treturn buffergeometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction onGeometryDispose( event ) {\r\n\t\r\n\t\t\tvar geometry = event.target;\r\n\t\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\t\r\n\t\t\tdeleteAttributes( buffergeometry.attributes );\r\n\t\r\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\t\r\n\t\t\tdelete geometries[ geometry.id ];\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\t\r\n\t\t\tinfo.memory.geometries --;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttribute( attribute ) {\r\n\t\r\n\t\t\tvar buffer = getAttributeBuffer( attribute );\r\n\t\r\n\t\t\tif ( buffer !== undefined ) {\r\n\t\r\n\t\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\t\tremoveAttributeBuffer( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction deleteAttributes( attributes ) {\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tdeleteAttribute( attributes[ name ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction removeAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\tproperties.delete( attribute.data );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tproperties.delete( attribute );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.get = get;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLObjects.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\t\r\n\t\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tfunction update( object ) {\r\n\t\r\n\t\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\t\r\n\t\t\tvar geometry = geometries.get( object );\r\n\t\r\n\t\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tgeometry.updateFromObject( object );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var name in attributes ) {\r\n\t\r\n\t\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// morph targets\r\n\t\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\t\r\n\t\t\tfor ( var name in morphAttributes ) {\r\n\t\r\n\t\t\t\tvar array = morphAttributes[ name ];\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn geometry;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateAttribute( attribute, bufferType ) {\r\n\t\r\n\t\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\t\r\n\t\t\tvar attributeProperties = properties.get( data );\r\n\t\r\n\t\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\t\r\n\t\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\t\r\n\t\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\t\r\n\t\t\tgl.bufferData( bufferType, data.array, usage );\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\t\r\n\t\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\t\r\n\t\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\t\r\n\t\t\t\t// Not using update ranges\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\t\r\n\t\t\t} else if ( data.updateRange.count === 0 ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\t\r\n\t\t\t\tdata.updateRange.count = 0; // reset range\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tattributeProperties.version = data.version;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getAttributeBuffer( attribute ) {\r\n\t\r\n\t\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\t\r\n\t\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn properties.get( attribute ).__webglBuffer;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction getWireframeAttribute( geometry ) {\r\n\t\r\n\t\t\tvar property = properties.get( geometry );\r\n\t\r\n\t\t\tif ( property.wireframe !== undefined ) {\r\n\t\r\n\t\t\t\treturn property.wireframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar indices = [];\r\n\t\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar position = attributes.position;\r\n\t\r\n\t\t\t// console.time( 'wireframe' );\r\n\t\r\n\t\t\tif ( index !== null ) {\r\n\t\r\n\t\t\t\tvar edges = {};\r\n\t\t\t\tvar array = index.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\t\tvar c = array[ i + 2 ];\r\n\t\r\n\t\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tvar array = attributes.position.array;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\t\r\n\t\t\t\t\tvar a = i + 0;\r\n\t\t\t\t\tvar b = i + 1;\r\n\t\t\t\t\tvar c = i + 2;\r\n\t\r\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.timeEnd( 'wireframe' );\r\n\t\r\n\t\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\t\r\n\t\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\t\r\n\t\t\tproperty.wireframe = attribute;\r\n\t\r\n\t\t\treturn attribute;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction checkEdge( edges, a, b ) {\r\n\t\r\n\t\t\tif ( a > b ) {\r\n\t\r\n\t\t\t\tvar tmp = a;\r\n\t\t\t\ta = b;\r\n\t\t\t\tb = tmp;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar list = edges[ a ];\r\n\t\r\n\t\t\tif ( list === undefined ) {\r\n\t\r\n\t\t\t\tedges[ a ] = [ b ];\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\t\r\n\t\t\t\tlist.push( b );\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\t\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\t\r\n\t\tthis.update = update;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProgram.js\r\n\t\r\n\tTHREE.WebGLProgram = ( function () {\r\n\t\r\n\t\tvar programIdCount = 0;\r\n\t\r\n\t\tfunction generateDefines( defines ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tfor ( var name in defines ) {\r\n\t\r\n\t\t\t\tvar value = defines[ name ];\r\n\t\r\n\t\t\t\tif ( value === false ) continue;\r\n\t\r\n\t\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join( '\\n' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar uniforms = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\t\r\n\t\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\t\r\n\t\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tuniforms[ name ] = location;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn uniforms;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\t\r\n\t\t\tvar attributes = {};\r\n\t\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\t\r\n\t\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\t\r\n\t\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\t\tvar name = info.name;\r\n\t\r\n\t\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\t\r\n\t\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn attributes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction filterEmptyLine( string ) {\r\n\t\r\n\t\t\treturn string !== '';\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\t\r\n\t\t\tvar gl = renderer.context;\r\n\t\r\n\t\t\tvar defines = material.defines;\r\n\t\r\n\t\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\t\r\n\t\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\t\r\n\t\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\t\r\n\t\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\r\n\t\t\tif ( parameters.envMap ) {\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.envMap.mapping ) {\r\n\t\r\n\t\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tswitch ( material.combine ) {\r\n\t\r\n\t\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\t\r\n\t\t\t// console.log( 'building new program ' );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar customDefines = generateDefines( defines );\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar prefixVertex, prefixFragment;\r\n\t\r\n\t\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\t\r\n\t\t\t\tprefixVertex = '';\r\n\t\t\t\tprefixFragment = '';\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tprefixVertex = [\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\t\r\n\t\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\r\n\t\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_COLOR',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 color;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\t\r\n\t\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\t\r\n\t\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\t\r\n\t\t\t\t\t'\t#else',\r\n\t\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\t\r\n\t\t\t\t\t'\t#endif',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'#ifdef USE_SKINNING',\r\n\t\r\n\t\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\t\r\n\t\t\t\t\t'#endif',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t\tprefixFragment = [\r\n\t\r\n\t\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\r\n\t\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\t\r\n\t\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\t\r\n\t\t\t\t\tcustomDefines,\r\n\t\r\n\t\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\t\r\n\t\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\t\r\n\t\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\t\r\n\t\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\t\r\n\t\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\t\r\n\t\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\t\r\n\t\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\t\r\n\t\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\t\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\t\r\n\t\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\r\n\t\t\t\t\t'\\n'\r\n\t\r\n\t\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\t\r\n\t\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\t\r\n\t\t\tgl.attachShader( program, glVertexShader );\r\n\t\t\tgl.attachShader( program, glFragmentShader );\r\n\t\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\r\n\t\t\tif ( material.index0AttributeName !== undefined ) {\r\n\t\r\n\t\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\t\r\n\t\t\t} else if ( parameters.morphTargets === true ) {\r\n\t\r\n\t\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\t\r\n\t\t\tvar runnable = true;\r\n\t\t\tvar haveDiagnostics = true;\r\n\t\r\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\t\r\n\t\t\t\trunnable = false;\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\t\r\n\t\t\t} else if ( programLog !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\t\r\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\t\r\n\t\t\t\thaveDiagnostics = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( haveDiagnostics ) {\r\n\t\r\n\t\t\t\tthis.diagnostics = {\r\n\t\r\n\t\t\t\t\trunnable: runnable,\r\n\t\t\t\t\tmaterial: material,\r\n\t\r\n\t\t\t\t\tprogramLog: programLog,\r\n\t\r\n\t\t\t\t\tvertexShader: {\r\n\t\r\n\t\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\t\tprefix: prefixVertex\r\n\t\r\n\t\t\t\t\t},\r\n\t\r\n\t\t\t\t\tfragmentShader: {\r\n\t\r\n\t\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\t\tprefix: prefixFragment\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// clean up\r\n\t\r\n\t\t\tgl.deleteShader( glVertexShader );\r\n\t\t\tgl.deleteShader( glFragmentShader );\r\n\t\r\n\t\t\t// set up caching for uniform locations\r\n\t\r\n\t\t\tvar cachedUniforms;\r\n\t\r\n\t\t\tthis.getUniforms = function() {\r\n\t\r\n\t\t\t\tif ( cachedUniforms === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedUniforms;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// set up caching for attribute locations\r\n\t\r\n\t\t\tvar cachedAttributes;\r\n\t\r\n\t\t\tthis.getAttributes = function() {\r\n\t\r\n\t\t\t\tif ( cachedAttributes === undefined ) {\r\n\t\r\n\t\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn cachedAttributes;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// free resource\r\n\t\r\n\t\t\tthis.destroy = function() {\r\n\t\r\n\t\t\t\tgl.deleteProgram( program );\r\n\t\t\t\tthis.program = undefined;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// DEPRECATED\r\n\t\r\n\t\t\tObject.defineProperties( this, {\r\n\t\r\n\t\t\t\tuniforms: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\t\treturn this.getUniforms();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tattributes: {\r\n\t\t\t\t\tget: function() {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\t\treturn this.getAttributes();\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tthis.id = programIdCount ++;\r\n\t\t\tthis.code = code;\r\n\t\t\tthis.usedTimes = 1;\r\n\t\t\tthis.program = program;\r\n\t\t\tthis.vertexShader = glVertexShader;\r\n\t\t\tthis.fragmentShader = glFragmentShader;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLPrograms.js\r\n\t\r\n\tTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\t\r\n\t\tvar programs = [];\r\n\t\r\n\t\tvar shaderIDs = {\r\n\t\t\tMeshDepthMaterial: 'depth',\r\n\t\t\tMeshNormalMaterial: 'normal',\r\n\t\t\tMeshBasicMaterial: 'basic',\r\n\t\t\tMeshLambertMaterial: 'lambert',\r\n\t\t\tMeshPhongMaterial: 'phong',\r\n\t\t\tLineBasicMaterial: 'basic',\r\n\t\t\tLineDashedMaterial: 'dashed',\r\n\t\t\tPointsMaterial: 'points'\r\n\t\t};\r\n\t\r\n\t\tvar parameterNames = [\r\n\t\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\t\"flipSided\"\r\n\t\t];\r\n\t\r\n\t\r\n\t\tfunction allocateBones ( object ) {\r\n\t\r\n\t\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\t\r\n\t\t\t\treturn 1024;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// default for when object is not specified\r\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t\t//\r\n\t\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t\t//    (up to 54 should be safe)\r\n\t\r\n\t\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\t\r\n\t\t\t\tvar maxBones = nVertexMatrices;\r\n\t\r\n\t\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\t\r\n\t\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\t\r\n\t\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn maxBones;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateLights( lights ) {\r\n\t\r\n\t\t\tvar dirLights = 0;\r\n\t\t\tvar pointLights = 0;\r\n\t\t\tvar spotLights = 0;\r\n\t\t\tvar hemiLights = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction allocateShadows( lights ) {\r\n\t\r\n\t\t\tvar maxShadows = 0;\r\n\t\r\n\t\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\t\r\n\t\t\t\tvar light = lights[ l ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn maxShadows;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\t\r\n\t\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t\t// (not to blow over maxLights budget)\r\n\t\r\n\t\t\tvar maxLightCount = allocateLights( lights );\r\n\t\t\tvar maxShadows = allocateShadows( lights );\r\n\t\t\tvar maxBones = allocateBones( object );\r\n\t\t\tvar precision = renderer.getPrecision();\r\n\t\r\n\t\t\tif ( material.precision !== null ) {\r\n\t\r\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\t\r\n\t\t\t\tif ( precision !== material.precision ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar parameters = {\r\n\t\r\n\t\t\t\tshaderID: shaderID,\r\n\t\r\n\t\t\t\tprecision: precision,\r\n\t\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\r\n\t\t\t\tmap: !! material.map,\r\n\t\t\t\tenvMap: !! material.envMap,\r\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\t\tlightMap: !! material.lightMap,\r\n\t\t\t\taoMap: !! material.aoMap,\r\n\t\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\t\talphaMap: !! material.alphaMap,\r\n\t\r\n\t\t\t\tcombine: material.combine,\r\n\t\r\n\t\t\t\tvertexColors: material.vertexColors,\r\n\t\r\n\t\t\t\tfog: fog,\r\n\t\t\t\tuseFog: material.fog,\r\n\t\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\t\r\n\t\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\t\r\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\t\r\n\t\t\t\tskinning: material.skinning,\r\n\t\t\t\tmaxBones: maxBones,\r\n\t\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\t\r\n\t\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\t\r\n\t\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\t\r\n\t\t\t\tmaxShadows: maxShadows,\r\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\t\r\n\t\t\t\talphaTest: material.alphaTest,\r\n\t\t\t\tmetal: material.metal,\r\n\t\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\t\tflipSided: material.side === THREE.BackSide\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn parameters;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getProgramCode = function ( material, parameters ) {\r\n\t\r\n\t\t\tvar chunks = [];\r\n\t\r\n\t\t\tif ( parameters.shaderID ) {\r\n\t\r\n\t\t\t\tchunks.push( parameters.shaderID );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\t\tchunks.push( material.vertexShader );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( material.defines !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var name in material.defines ) {\r\n\t\r\n\t\t\t\t\tchunks.push( name );\r\n\t\t\t\t\tchunks.push( material.defines[ name ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\t\r\n\t\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\t\tchunks.push( parameterName );\r\n\t\t\t\tchunks.push( parameters[ parameterName ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn chunks.join();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\t\r\n\t\t\tvar program;\r\n\t\r\n\t\t\t// Check if code has been already compiled\r\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\t\tvar programInfo = programs[ p ];\r\n\t\r\n\t\t\t\tif ( programInfo.code === code ) {\r\n\t\r\n\t\t\t\t\tprogram = programInfo;\r\n\t\t\t\t\t++ program.usedTimes;\r\n\t\r\n\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\t\tprograms.push( program );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.releaseProgram = function( program ) {\r\n\t\r\n\t\t\tif ( -- program.usedTimes === 0 ) {\r\n\t\r\n\t\t\t\t// Remove from unordered set\r\n\t\t\t\tvar i = programs.indexOf( program );\r\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\t\tprograms.pop();\r\n\t\r\n\t\t\t\t// Free WebGL resources\r\n\t\t\t\tprogram.destroy();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\t\tthis.programs = programs;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLProperties.js\r\n\t\r\n\t/**\r\n\t* @author fordacious / fordacious.github.io\r\n\t*/\r\n\t\r\n\tTHREE.WebGLProperties = function () {\r\n\t\r\n\t\tvar properties = {};\r\n\t\r\n\t\tthis.get = function ( object ) {\r\n\t\r\n\t\t\tvar uuid = object.uuid;\r\n\t\t\tvar map = properties[ uuid ];\r\n\t\r\n\t\t\tif ( map === undefined ) {\r\n\t\r\n\t\t\t\tmap = {};\r\n\t\t\t\tproperties[ uuid ] = map;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn map;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.delete = function ( object ) {\r\n\t\r\n\t\t\tdelete properties[ object.uuid ];\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.clear = function () {\r\n\t\r\n\t\t\tproperties = {};\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShader.js\r\n\t\r\n\tTHREE.WebGLShader = ( function () {\r\n\t\r\n\t\tvar addLineNumbers = function ( string ) {\r\n\t\r\n\t\t\tvar lines = string.split( '\\n' );\r\n\t\r\n\t\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\t\r\n\t\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn lines.join( '\\n' );\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function WebGLShader( gl, type, string ) {\r\n\t\r\n\t\t\tvar shader = gl.createShader( type );\r\n\t\r\n\t\t\tgl.shaderSource( shader, string );\r\n\t\t\tgl.compileShader( shader );\r\n\t\r\n\t\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\t\r\n\t\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\t\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// --enable-privileged-webgl-extension\r\n\t\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\t\r\n\t\t\treturn shader;\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/renderers/webgl/WebGLShadowMap.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\t\r\n\t\tvar _gl = _renderer.context,\r\n\t\t_state = _renderer.state,\r\n\t\t_frustum = new THREE.Frustum(),\r\n\t\t_projScreenMatrix = new THREE.Matrix4(),\r\n\t\r\n\t\t_min = new THREE.Vector3(),\r\n\t\t_max = new THREE.Vector3(),\r\n\t\r\n\t\t_matrixPosition = new THREE.Vector3(),\r\n\t\r\n\t\t_renderList = [];\r\n\t\r\n\t\t// init\r\n\t\r\n\t\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\t\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\t\r\n\t\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader\r\n\t\t } );\r\n\t\r\n\t\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\t\tuniforms: depthUniforms,\r\n\t\t\tvertexShader: depthShader.vertexShader,\r\n\t\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\t\tmorphTargets: true,\r\n\t\t\tskinning: true\r\n\t\t} );\r\n\t\r\n\t\t_depthMaterial._shadowPass = true;\r\n\t\t_depthMaterialMorph._shadowPass = true;\r\n\t\t_depthMaterialSkin._shadowPass = true;\r\n\t\t_depthMaterialMorphSkin._shadowPass = true;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tthis.enabled = false;\r\n\t\r\n\t\tthis.autoUpdate = true;\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tthis.type = THREE.PCFShadowMap;\r\n\t\tthis.cullFace = THREE.CullFaceFront;\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( scope.enabled === false ) return;\r\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\t\r\n\t\t\t// set GL state for depth map\r\n\t\r\n\t\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t\t_state.disable( _gl.BLEND );\r\n\t\r\n\t\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t\t_gl.frontFace( _gl.CCW );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_state.setDepthTest( true );\r\n\t\r\n\t\t\t// render depth map\r\n\t\r\n\t\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar light = _lights[ i ];\r\n\t\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\t\r\n\t\t\t\tif ( ! light.shadowMap ) {\r\n\t\r\n\t\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\t\r\n\t\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\t\r\n\t\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\t\r\n\t\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\t\r\n\t\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( ! light.shadowCamera ) {\r\n\t\r\n\t\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\t\r\n\t\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tscene.add( light.shadowCamera );\r\n\t\r\n\t\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\t\r\n\t\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\t\tscene.add( light.cameraHelper );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\t\tvar shadowCamera = light.shadowCamera;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\t\r\n\t\t\t\t// compute shadow matrix\r\n\t\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\t\r\n\t\t\t\t// update camera matrices and frustum\r\n\t\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\t\r\n\t\t\t\t// render shadow map\r\n\t\r\n\t\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t\t_renderer.clear();\r\n\t\r\n\t\t\t\t// set object matrices & frustum culling\r\n\t\r\n\t\t\t\t_renderList.length = 0;\r\n\t\r\n\t\t\t\tprojectObject( scene, shadowCamera );\r\n\t\r\n\t\r\n\t\t\t\t// render regular objects\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\t\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\t\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\t\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\t\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore GL state\r\n\t\r\n\t\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\r\n\t\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t\t_state.enable( _gl.BLEND );\r\n\t\r\n\t\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\t\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t_renderer.resetGLState();\r\n\t\r\n\t\t\tscope.needsUpdate = false;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction getDepthMaterial( object, material ) {\r\n\t\r\n\t\t\tvar geometry = object.geometry;\r\n\t\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\t\r\n\t\t\tvar depthMaterial;\r\n\t\r\n\t\t\tif ( object.customDepthMaterial ) {\r\n\t\r\n\t\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\t\r\n\t\t\t} else if ( useSkinning ) {\r\n\t\r\n\t\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\t\r\n\t\t\t} else if ( useMorphing ) {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tdepthMaterial = _depthMaterial;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdepthMaterial.visible = material.visible;\r\n\t\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\r\n\t\t\treturn depthMaterial;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction projectObject( object, camera ) {\r\n\t\r\n\t\t\tif ( object.visible === false ) return;\r\n\t\r\n\t\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\t\r\n\t\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\t\r\n\t\t\t\t\tvar material = object.material;\r\n\t\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\t\r\n\t\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t\t_renderList.push( object );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar children = object.children;\r\n\t\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tprojectObject( children[ i ], camera );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/WebGLState.js\r\n\t\r\n\t/**\r\n\t* @author mrdoob / http://mrdoob.com/\r\n\t*/\r\n\t\r\n\tTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\t\r\n\t\tvar _this = this;\r\n\t\r\n\t\tvar newAttributes = new Uint8Array( 16 );\r\n\t\tvar enabledAttributes = new Uint8Array( 16 );\r\n\t\r\n\t\tvar capabilities = {};\r\n\t\r\n\t\tvar compressedTextureFormats = null;\r\n\t\r\n\t\tvar currentBlending = null;\r\n\t\tvar currentBlendEquation = null;\r\n\t\tvar currentBlendSrc = null;\r\n\t\tvar currentBlendDst = null;\r\n\t\tvar currentBlendEquationAlpha = null;\r\n\t\tvar currentBlendSrcAlpha = null;\r\n\t\tvar currentBlendDstAlpha = null;\r\n\t\r\n\t\tvar currentDepthFunc = null;\r\n\t\tvar currentDepthWrite = null;\r\n\t\r\n\t\tvar currentColorWrite = null;\r\n\t\r\n\t\tvar currentFlipSided = null;\r\n\t\r\n\t\tvar currentLineWidth = null;\r\n\t\r\n\t\tvar currentPolygonOffsetFactor = null;\r\n\t\tvar currentPolygonOffsetUnits = null;\r\n\t\r\n\t\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\t\r\n\t\tvar currentTextureSlot = undefined;\r\n\t\tvar currentBoundTextures = {};\r\n\t\r\n\t\tthis.init = function () {\r\n\t\r\n\t\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\t\tgl.clearDepth( 1 );\r\n\t\t\tgl.clearStencil( 0 );\r\n\t\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\tgl.frontFace( gl.CCW );\r\n\t\t\tgl.cullFace( gl.BACK );\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\tthis.enable( gl.BLEND );\r\n\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.initAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tnewAttributes[ i ] = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enableAttribute = function ( attribute ) {\r\n\t\r\n\t\t\tnewAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\t\r\n\t\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\t\tenabledAttributes[ attribute ] = 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disableUnusedAttributes = function () {\r\n\t\r\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.enable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== true ) {\r\n\t\r\n\t\t\t\tgl.enable( id );\r\n\t\t\t\tcapabilities[ id ] = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.disable = function ( id ) {\r\n\t\r\n\t\t\tif ( capabilities[ id ] !== false ) {\r\n\t\r\n\t\t\t\tgl.disable( id );\r\n\t\t\t\tcapabilities[ id ] = false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.getCompressedTextureFormats = function () {\r\n\t\r\n\t\t\tif ( compressedTextureFormats === null ) {\r\n\t\r\n\t\t\t\tcompressedTextureFormats = [];\r\n\t\r\n\t\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\t\r\n\t\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn compressedTextureFormats;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\t\r\n\t\t\tif ( blending !== currentBlending ) {\r\n\t\r\n\t\t\t\tif ( blending === THREE.NoBlending ) {\r\n\t\r\n\t\t\t\t\tthis.disable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\t\r\n\t\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\t\r\n\t\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentBlending = blending;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( blending === THREE.CustomBlending ) {\r\n\t\r\n\t\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\t\r\n\t\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\t\r\n\t\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\t\r\n\t\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tcurrentBlendEquation = null;\r\n\t\t\t\tcurrentBlendSrc = null;\r\n\t\t\t\tcurrentBlendDst = null;\r\n\t\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\t\tcurrentBlendDstAlpha = null;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthFunc = function ( depthFunc ) {\r\n\t\r\n\t\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\t\r\n\t\t\t\tif ( depthFunc ) {\r\n\t\r\n\t\t\t\t\tswitch ( depthFunc ) {\r\n\t\r\n\t\t\t\t\t\tcase THREE.NeverDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.EqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.GreaterDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\tdefault:\r\n\t\r\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentDepthFunc = depthFunc;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthTest = function ( depthTest ) {\r\n\t\r\n\t\t\tif ( depthTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setDepthWrite = function ( depthWrite ) {\r\n\t\r\n\t\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\t\r\n\t\t\t\tgl.depthMask( depthWrite );\r\n\t\t\t\tcurrentDepthWrite = depthWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setColorWrite = function ( colorWrite ) {\r\n\t\r\n\t\t\tif ( currentColorWrite !== colorWrite ) {\r\n\t\r\n\t\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\t\tcurrentColorWrite = colorWrite;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setFlipSided = function ( flipSided ) {\r\n\t\r\n\t\t\tif ( currentFlipSided !== flipSided ) {\r\n\t\r\n\t\t\t\tif ( flipSided ) {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CW );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.frontFace( gl.CCW );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tcurrentFlipSided = flipSided;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setLineWidth = function ( width ) {\r\n\t\r\n\t\t\tif ( width !== currentLineWidth ) {\r\n\t\r\n\t\t\t\tgl.lineWidth( width );\r\n\t\r\n\t\t\t\tcurrentLineWidth = width;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\t\r\n\t\t\tif ( polygonOffset ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\t\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\t\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.setScissorTest = function ( scissorTest ) {\r\n\t\r\n\t\t\tif ( scissorTest ) {\r\n\t\r\n\t\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// texture\r\n\t\r\n\t\tthis.activeTexture = function ( webglSlot ) {\r\n\t\r\n\t\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\t\r\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\t\r\n\t\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\t\tcurrentTextureSlot = webglSlot;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\t\r\n\t\t\tif ( currentTextureSlot === undefined ) {\r\n\t\r\n\t\t\t\t_this.activeTexture();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\t\r\n\t\t\tif ( boundTexture === undefined ) {\r\n\t\r\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\t\r\n\t\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\t\r\n\t\t\t\tboundTexture.type = webglType;\r\n\t\t\t\tboundTexture.texture = webglTexture;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.compressedTexImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.texImage2D = function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\t\r\n\t\t\t} catch ( error ) {\r\n\t\r\n\t\t\t\tconsole.error( error );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.reset = function () {\r\n\t\r\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\t\r\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\t\r\n\t\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\t\tenabledAttributes[ i ] = 0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcapabilities = {};\r\n\t\r\n\t\t\tcompressedTextureFormats = null;\r\n\t\r\n\t\t\tcurrentBlending = null;\r\n\t\r\n\t\t\tcurrentDepthWrite = null;\r\n\t\t\tcurrentColorWrite = null;\r\n\t\r\n\t\t\tcurrentFlipSided = null;\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\tvar hasVertexTexture;\r\n\t\r\n\t\tvar tempTexture, occlusionTexture;\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t\t 1, - 1,  1, 0,\r\n\t\t\t\t 1,  1,  1, 1,\r\n\t\t\t\t- 1,  1,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\t// buffers\r\n\t\r\n\t\t\tvertexBuffer     = gl.createBuffer();\r\n\t\t\telementBuffer    = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\t// textures\r\n\t\r\n\t\t\ttempTexture      = gl.createTexture();\r\n\t\t\tocclusionTexture = gl.createTexture();\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\r\n\t\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\t\r\n\t\t\tvar shader;\r\n\t\r\n\t\t\tif ( hasVertexTexture ) {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\t\"varying float vVisibility;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tshader = {\r\n\t\r\n\t\t\t\t\tvertexShader: [\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\t\"uniform float rotation;\",\r\n\t\r\n\t\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\t\"attribute vec2 uv;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t\"vUV = uv;\",\r\n\t\r\n\t\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" ),\r\n\t\r\n\t\t\t\t\tfragmentShader: [\r\n\t\r\n\t\t\t\t\t\t\"precision mediump float;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\t\r\n\t\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\t\"uniform vec3 color;\",\r\n\t\r\n\t\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\r\n\t\t\t\t\t\t\"void main() {\",\r\n\t\r\n\t\t\t\t\t\t\t// pink square\r\n\t\r\n\t\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t// restore\r\n\t\r\n\t\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\t\r\n\t\t\t\t\t\t\t// flare\r\n\t\r\n\t\t\t\t\t\t\t\"} else {\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\t\r\n\t\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\t\r\n\t\t\t\t\t\t\t\"}\",\r\n\t\r\n\t\t\t\t\t\t\"}\"\r\n\t\r\n\t\t\t\t\t].join( \"\\n\" )\r\n\t\r\n\t\t\t\t};\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tprogram = createProgram( shader );\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t\t};\r\n\t\r\n\t\t};\r\n\t\r\n\t\t/*\r\n\t\t * Render lens flares\r\n\t\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t\t *         reads these back and calculates occlusion.\r\n\t\t */\r\n\t\r\n\t\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\t\r\n\t\t\tif ( flares.length === 0 ) return;\r\n\t\r\n\t\t\tvar tempPosition = new THREE.Vector3();\r\n\t\r\n\t\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\t\r\n\t\t\tvar size = 16 / viewportHeight,\r\n\t\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\t\r\n\t\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.vertex );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t\t// setup gl and common used attribs/uniforms\r\n\t\r\n\t\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 1 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tgl.depthMask( false );\r\n\t\r\n\t\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tsize = 16 / viewportHeight;\r\n\t\t\t\tscale.set( size * invAspect, size );\r\n\t\r\n\t\t\t\t// calc object screen position\r\n\t\r\n\t\t\t\tvar flare = flares[ i ];\r\n\t\r\n\t\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\t\r\n\t\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\t\r\n\t\t\t\t// setup arrays for gl programs\r\n\t\r\n\t\t\t\tscreenPosition.copy( tempPosition );\r\n\t\r\n\t\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\t\r\n\t\t\t\t// screen cull\r\n\t\r\n\t\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\t\r\n\t\t\t\t\t// save current RGB to temp texture\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// render pink quad\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\r\n\t\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// copy result to occlusionMap\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// restore graphics\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\t\r\n\t\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\r\n\t\t\t\t\t// update object positions\r\n\t\r\n\t\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\t\r\n\t\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\t\r\n\t\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tflare.updateLensFlares();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// render flares\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\t\r\n\t\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\t\r\n\t\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\t\r\n\t\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\t\r\n\t\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\t\tscale.y = size;\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\t\r\n\t\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\t\r\n\t\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\t\r\n\t\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\t\tgl.depthMask( true );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram ( shader ) {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\r\n\t\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\t\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\t\r\n\t\tvar gl = renderer.context;\r\n\t\tvar state = renderer.state;\r\n\t\r\n\t\tvar vertexBuffer, elementBuffer;\r\n\t\tvar program, attributes, uniforms;\r\n\t\r\n\t\tvar texture;\r\n\t\r\n\t\t// decompose matrixWorld\r\n\t\r\n\t\tvar spritePosition = new THREE.Vector3();\r\n\t\tvar spriteRotation = new THREE.Quaternion();\r\n\t\tvar spriteScale = new THREE.Vector3();\r\n\t\r\n\t\tvar init = function () {\r\n\t\r\n\t\t\tvar vertices = new Float32Array( [\r\n\t\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t\t] );\r\n\t\r\n\t\t\tvar faces = new Uint16Array( [\r\n\t\t\t\t0, 1, 2,\r\n\t\t\t\t0, 2, 3\r\n\t\t\t] );\r\n\t\r\n\t\t\tvertexBuffer  = gl.createBuffer();\r\n\t\t\telementBuffer = gl.createBuffer();\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\t\r\n\t\t\tprogram = createProgram();\r\n\t\r\n\t\t\tattributes = {\r\n\t\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t\t};\r\n\t\r\n\t\t\tuniforms = {\r\n\t\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\t\r\n\t\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\t\r\n\t\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\t\r\n\t\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\t\r\n\t\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\t\r\n\t\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t\t};\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = 8;\r\n\t\t\tcanvas.height = 8;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.fillStyle = 'white';\r\n\t\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\t\r\n\t\t\ttexture = new THREE.Texture( canvas );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.render = function ( scene, camera ) {\r\n\t\r\n\t\t\tif ( sprites.length === 0 ) return;\r\n\t\r\n\t\t\t// setup gl\r\n\t\r\n\t\t\tif ( program === undefined ) {\r\n\t\r\n\t\t\t\tinit();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgl.useProgram( program );\r\n\t\r\n\t\t\tstate.initAttributes();\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\t\t\tstate.disableUnusedAttributes();\r\n\t\r\n\t\t\tstate.disable( gl.CULL_FACE );\r\n\t\t\tstate.enable( gl.BLEND );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\t\r\n\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\r\n\t\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\t\r\n\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\tgl.uniform1i( uniforms.map, 0 );\r\n\t\r\n\t\t\tvar oldFogType = 0;\r\n\t\t\tvar sceneFogType = 0;\r\n\t\t\tvar fog = scene.fog;\r\n\t\r\n\t\t\tif ( fog ) {\r\n\t\r\n\t\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\t\r\n\t\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\t\toldFogType = 1;\r\n\t\t\t\t\tsceneFogType = 1;\r\n\t\r\n\t\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\t\toldFogType = 2;\r\n\t\t\t\t\tsceneFogType = 2;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\t\toldFogType = 0;\r\n\t\t\t\tsceneFogType = 0;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\t// update positions and sort\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\r\n\t\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsprites.sort( painterSortStable );\r\n\t\r\n\t\t\t// render all sprites\r\n\t\r\n\t\t\tvar scale = [];\r\n\t\r\n\t\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar sprite = sprites[ i ];\r\n\t\t\t\tvar material = sprite.material;\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\t\r\n\t\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\t\r\n\t\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\t\tscale[ 1 ] = spriteScale.y;\r\n\t\r\n\t\t\t\tvar fogType = 0;\r\n\t\r\n\t\t\t\tif ( scene.fog && material.fog ) {\r\n\t\r\n\t\t\t\t\tfogType = sceneFogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( oldFogType !== fogType ) {\r\n\t\r\n\t\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\t\toldFogType = fogType;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( material.map !== null ) {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\t\r\n\t\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\t\r\n\t\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\r\n\t\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\trenderer.setTexture( texture, 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// restore gl\r\n\t\r\n\t\t\tstate.enable( gl.CULL_FACE );\r\n\t\r\n\t\t\trenderer.resetGLState();\r\n\t\r\n\t\t};\r\n\t\r\n\t\tfunction createProgram () {\r\n\t\r\n\t\t\tvar program = gl.createProgram();\r\n\t\r\n\t\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\r\n\t\t\tgl.shaderSource( vertexShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform float rotation;',\r\n\t\t\t\t'uniform vec2 scale;',\r\n\t\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t\t'uniform vec2 uvScale;',\r\n\t\r\n\t\t\t\t'attribute vec2 position;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\t\r\n\t\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\t\r\n\t\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\t\r\n\t\t\t\t\t'vec4 finalPosition;',\r\n\t\r\n\t\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\t\r\n\t\t\t\t\t'gl_Position = finalPosition;',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.shaderSource( fragmentShader, [\r\n\t\r\n\t\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\t\r\n\t\t\t\t'uniform vec3 color;',\r\n\t\t\t\t'uniform sampler2D map;',\r\n\t\t\t\t'uniform float opacity;',\r\n\t\r\n\t\t\t\t'uniform int fogType;',\r\n\t\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t\t'uniform float fogDensity;',\r\n\t\t\t\t'uniform float fogNear;',\r\n\t\t\t\t'uniform float fogFar;',\r\n\t\t\t\t'uniform float alphaTest;',\r\n\t\r\n\t\t\t\t'varying vec2 vUV;',\r\n\t\r\n\t\t\t\t'void main() {',\r\n\t\r\n\t\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\t\r\n\t\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\t\r\n\t\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\t\r\n\t\t\t\t\t'if ( fogType > 0 ) {',\r\n\t\r\n\t\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t\t'float fogFactor = 0.0;',\r\n\t\r\n\t\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\t\r\n\t\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\t\r\n\t\t\t\t\t\t'} else {',\r\n\t\r\n\t\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\t\r\n\t\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\t\r\n\t\t\t\t\t'}',\r\n\t\r\n\t\t\t\t'}'\r\n\t\r\n\t\t\t].join( '\\n' ) );\r\n\t\r\n\t\t\tgl.compileShader( vertexShader );\r\n\t\t\tgl.compileShader( fragmentShader );\r\n\t\r\n\t\t\tgl.attachShader( program, vertexShader );\r\n\t\t\tgl.attachShader( program, fragmentShader );\r\n\t\r\n\t\t\tgl.linkProgram( program );\r\n\t\r\n\t\t\treturn program;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction painterSortStable ( a, b ) {\r\n\t\r\n\t\t\tif ( a.z !== b.z ) {\r\n\t\r\n\t\t\t\treturn b.z - a.z;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn b.id - a.id;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/GeometryUtils.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GeometryUtils = {\r\n\t\r\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\t\r\n\t\t\tvar matrix;\r\n\t\r\n\t\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\t\r\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\t\r\n\t\t\t\tmatrix = geometry2.matrix;\r\n\t\t\t\tgeometry2 = geometry2.geometry;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tcenter: function ( geometry ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\t\treturn geometry.center();\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/ImageUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n\t */\r\n\t\r\n\tTHREE.ImageUtils = {\r\n\t\r\n\t\tcrossOrigin: undefined,\r\n\t\r\n\t\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\t\r\n\t\t\tloader.load( url, function ( image ) {\r\n\t\r\n\t\t\t\ttexture.image = image;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t}, undefined, function ( event ) {\r\n\t\r\n\t\t\t\tif ( onError ) onError( event );\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t\ttexture.sourceFile = url;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\t\r\n\t\t\tvar images = [];\r\n\t\r\n\t\t\tvar loader = new THREE.ImageLoader();\r\n\t\t\tloader.crossOrigin = this.crossOrigin;\r\n\t\r\n\t\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\t\r\n\t\t\tvar loaded = 0;\r\n\t\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\t\r\n\t\t\t\tloader.load( array[ i ], function ( image ) {\r\n\t\r\n\t\t\t\t\ttexture.images[ i ] = image;\r\n\t\r\n\t\t\t\t\tloaded += 1;\r\n\t\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\t\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}, undefined, onError );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\t\r\n\t\t\t\tloadTexture( i );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTexture: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadCompressedTextureCube: function () {\r\n\t\r\n\t\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNormalMap: function ( image, depth ) {\r\n\t\r\n\t\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\t\r\n\t\t\tvar cross = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar subtract = function ( a, b ) {\r\n\t\r\n\t\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar normalize = function ( a ) {\r\n\t\r\n\t\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tdepth = depth | 1;\r\n\t\r\n\t\t\tvar width = image.width;\r\n\t\t\tvar height = image.height;\r\n\t\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = width;\r\n\t\t\tcanvas.height = height;\r\n\t\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0 );\r\n\t\r\n\t\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\t\tvar imageData = context.createImageData( width, height );\r\n\t\t\tvar output = imageData.data;\r\n\t\r\n\t\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\t\r\n\t\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\t\r\n\t\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\t\r\n\t\t\t\t\tvar points = [];\r\n\t\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\r\n\t\t\t\t\tvar normals = [];\r\n\t\t\t\t\tvar num_points = points.length;\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\t\r\n\t\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\t\r\n\t\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\t\r\n\t\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\t\r\n\t\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\t\toutput[ idx + 3 ] = 255;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tcontext.putImageData( imageData, 0, 0 );\r\n\t\r\n\t\t\treturn canvas;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateDataTexture: function ( width, height, color ) {\r\n\t\r\n\t\t\tvar size = width * height;\r\n\t\t\tvar data = new Uint8Array( 3 * size );\r\n\t\r\n\t\t\tvar r = Math.floor( color.r * 255 );\r\n\t\t\tvar g = Math.floor( color.g * 255 );\r\n\t\t\tvar b = Math.floor( color.b * 255 );\r\n\t\r\n\t\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\t\r\n\t\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\t\tdata[ i * 3 + 2 ] = b;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\t\ttexture.needsUpdate = true;\r\n\t\r\n\t\t\treturn texture;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/SceneUtils.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.SceneUtils = {\r\n\t\r\n\t\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\t\r\n\t\t\tvar group = new THREE.Group();\r\n\t\r\n\t\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn group;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdetach: function ( child, parent, scene ) {\r\n\t\r\n\t\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\t\tparent.remove( child );\r\n\t\t\tscene.add( child );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tattach: function ( child, scene, parent ) {\r\n\t\r\n\t\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\t\tchild.applyMatrix( matrixWorldInverse );\r\n\t\r\n\t\t\tscene.remove( child );\r\n\t\t\tparent.add( child );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/FontUtils.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For Text operations in three.js (See TextGeometry)\r\n\t *\r\n\t * It uses techniques used in:\r\n\t *\r\n\t *\tTriangulation ported from AS3\r\n\t *\t\tSimple Polygon Triangulation\r\n\t *\t\thttp://actionsnippet.com/?p=1462\r\n\t *\r\n\t * \tA Method to triangulate shapes with holes\r\n\t *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.FontUtils = {\r\n\t\r\n\t\tfaces: {},\r\n\t\r\n\t\t// Just for now. face[weight][style]\r\n\t\r\n\t\tface: 'helvetiker',\r\n\t\tweight: 'normal',\r\n\t\tstyle: 'normal',\r\n\t\tsize: 150,\r\n\t\tdivisions: 10,\r\n\t\r\n\t\tgetFace: function () {\r\n\t\r\n\t\t\ttry {\r\n\t\r\n\t\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\t\r\n\t\t\t} catch ( e ) {\r\n\t\r\n\t\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tloadFace: function ( data ) {\r\n\t\r\n\t\t\tvar family = data.familyName.toLowerCase();\r\n\t\r\n\t\t\tvar ThreeFont = this;\r\n\t\r\n\t\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tdrawText: function ( text ) {\r\n\t\r\n\t\t\t// RenderText\r\n\t\r\n\t\t\tvar i,\r\n\t\t\t\tface = this.getFace(),\r\n\t\t\t\tscale = this.size / face.resolution,\r\n\t\t\t\toffset = 0,\r\n\t\t\t\tchars = String( text ).split( '' ),\r\n\t\t\t\tlength = chars.length;\r\n\t\r\n\t\t\tvar fontPaths = [];\r\n\t\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\t\r\n\t\t\t\tvar path = new THREE.Path();\r\n\t\r\n\t\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\t\toffset += ret.offset;\r\n\t\r\n\t\t\t\tfontPaths.push( ret.path );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// get the width\r\n\t\r\n\t\t\tvar width = offset / 2;\r\n\t\t\t//\r\n\t\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t\t//\r\n\t\t\t// \tallPts[ p ].x -= width;\r\n\t\t\t//\r\n\t\t\t// }\r\n\t\r\n\t\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t\t//extract.contour = allPts;\r\n\t\r\n\t\t\t//extract.paths = fontPaths;\r\n\t\t\t//extract.offset = width;\r\n\t\r\n\t\t\treturn { paths: fontPaths, offset: width };\r\n\t\r\n\t\t},\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\t\r\n\t\t\tvar pts = [];\r\n\t\r\n\t\t\tvar i, i2, divisions,\r\n\t\t\t\toutline, action, length,\r\n\t\t\t\tscaleX, scaleY,\r\n\t\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\t\tlaste,\r\n\t\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\t\r\n\t\t\tif ( ! glyph ) return;\r\n\t\r\n\t\t\tif ( glyph.o ) {\r\n\t\r\n\t\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\t\tlength = outline.length;\r\n\t\r\n\t\t\t\tscaleX = scale;\r\n\t\t\t\tscaleY = scale;\r\n\t\r\n\t\t\t\tfor ( i = 0; i < length; ) {\r\n\t\r\n\t\t\t\t\taction = outline[ i ++ ];\r\n\t\r\n\t\t\t\t\t//console.log( action );\r\n\t\r\n\t\t\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\t\t\tcase 'm':\r\n\t\r\n\t\t\t\t\t\t// Move To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'l':\r\n\t\r\n\t\t\t\t\t\t// Line To\r\n\t\r\n\t\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'q':\r\n\t\r\n\t\t\t\t\t\t// QuadraticCurveTo\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\tcase 'b':\r\n\t\r\n\t\t\t\t\t\t// Cubic Bezier Curve\r\n\t\r\n\t\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\t\r\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\t\r\n\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\t\r\n\t\t\t\t\t\tif ( laste ) {\r\n\t\r\n\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\t\r\n\t\t// Parameters\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\t\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\t\r\n\t\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\t\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\t\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\t\r\n\t\tTHREE.FontUtils.size = size;\r\n\t\tTHREE.FontUtils.divisions = curveSegments;\r\n\t\r\n\t\tTHREE.FontUtils.face = font;\r\n\t\tTHREE.FontUtils.weight = weight;\r\n\t\tTHREE.FontUtils.style = style;\r\n\t\r\n\t\t// Get a Font data json object\r\n\t\r\n\t\tvar data = THREE.FontUtils.drawText( text );\r\n\t\r\n\t\tvar paths = data.paths;\r\n\t\tvar shapes = [];\r\n\t\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\t\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * This code is a quick port of code written in C++ which was submitted to\r\n\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t * See original code and more information here:\r\n\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t *\r\n\t * ported to actionscript by Zevan Rosser\r\n\t * www.actionsnippet.com\r\n\t *\r\n\t * ported to javascript by Joshua Koo\r\n\t * http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t */\r\n\t\r\n\t\r\n\t( function ( namespace ) {\r\n\t\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t// takes in an contour array and returns\r\n\t\r\n\t\tvar process = function ( contour, indices ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\r\n\t\t\tif ( n < 3 ) return null;\r\n\t\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\t\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\t\r\n\t\t\tvar u, v, w;\r\n\t\r\n\t\t\tif ( area( contour ) > 0.0 ) {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar nv = n;\r\n\t\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\t\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\t\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\t\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\t\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\t\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\t\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\t\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\t\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\t\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\t\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\t\r\n\t\t\t\t\t/* true names of the vertices */\r\n\t\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\t\r\n\t\t\t\t\t/* output Triangle */\r\n\t\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\t\r\n\t\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\t\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\t\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\t\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tnv --;\r\n\t\r\n\t\t\t\t\t/* reset error detection counter */\r\n\t\r\n\t\t\t\t\tcount = 2 * nv;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// calculate area of the contour polygon\r\n\t\r\n\t\tvar area = function ( contour ) {\r\n\t\r\n\t\t\tvar n = contour.length;\r\n\t\t\tvar a = 0.0;\r\n\t\r\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\t\r\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn a * 0.5;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\t\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\t\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\t\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\t\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\t\r\n\t\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\t\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\t\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\t\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\t\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\t\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\t\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\t\r\n\t\t\t\t// see if p is inside triangle abc\r\n\t\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\t\r\n\t\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn true;\r\n\t\r\n\t\t};\r\n\t\r\n\t\r\n\t\tnamespace.Triangulate = process;\r\n\t\tnamespace.Triangulate.area = area;\r\n\t\r\n\t\treturn namespace;\r\n\t\r\n\t} )( THREE.FontUtils );\r\n\t\r\n\t// To use the typeface.js face files, hook up the API\r\n\t\r\n\tTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\n\tif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\t\r\n\t// File:src/extras/audio/Audio.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.Audio = function ( listener ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'Audio';\r\n\t\r\n\t\tthis.context = listener.context;\r\n\t\tthis.source = this.context.createBufferSource();\r\n\t\tthis.source.onended = this.onEnded.bind( this );\r\n\t\r\n\t\tthis.gain = this.context.createGain();\r\n\t\tthis.gain.connect( this.context.destination );\r\n\t\r\n\t\tthis.panner = this.context.createPanner();\r\n\t\tthis.panner.connect( this.gain );\r\n\t\r\n\t\tthis.autoplay = false;\r\n\t\r\n\t\tthis.startTime = 0;\r\n\t\tthis.playbackRate = 1;\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\t\r\n\tTHREE.Audio.prototype.load = function ( file ) {\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', file, true );\r\n\t\trequest.responseType = 'arraybuffer';\r\n\t\trequest.onload = function ( e ) {\r\n\t\r\n\t\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\t\r\n\t\t\t\tscope.source.buffer = buffer;\r\n\t\r\n\t\t\t\tif ( scope.autoplay ) scope.play();\r\n\t\r\n\t\t\t} );\r\n\t\r\n\t\t};\r\n\t\trequest.send();\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.play = function () {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar source = this.context.createBufferSource();\r\n\t\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\tthis.isPlaying = true;\r\n\t\r\n\t\tthis.source = source;\r\n\t\r\n\t\tthis.connect();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.pause = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.stop = function () {\r\n\t\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.connect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.connect( this.filter );\r\n\t\t\tthis.filter.connect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.connect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.disconnect = function () {\r\n\t\r\n\t\tif ( this.filter !== undefined ) {\r\n\t\r\n\t\t\tthis.source.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.panner );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.source.disconnect( this.panner );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filter = value;\r\n\t\t\tthis.connect();\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.filter = value;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getFilter = function () {\r\n\t\r\n\t\treturn this.filter;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\t\r\n\t\tthis.playbackRate = value;\r\n\t\r\n\t\tif ( this.isPlaying === true ) {\r\n\t\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\t\r\n\t\treturn this.playbackRate;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.onEnded = function() {\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\t\r\n\t\tthis.source.loop = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getLoop = function () {\r\n\t\r\n\t\treturn this.source.loop;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\t\r\n\t\tthis.panner.refDistance = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRefDistance = function () {\r\n\t\r\n\t\treturn this.panner.refDistance;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\t\r\n\t\tthis.panner.rolloffFactor = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\t\r\n\t\treturn this.panner.rolloffFactor;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\t\r\n\t\tthis.gain.gain.value = value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.getVolume = function () {\r\n\t\r\n\t\treturn this.gain.gain.value;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\t\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/audio/AudioListener.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AudioListener = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.type = 'AudioListener';\r\n\t\r\n\t\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\t\r\n\tTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\t\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\t\r\n\t\tvar orientation = new THREE.Vector3();\r\n\t\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\t\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\t\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\t\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\t\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\t\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\r\n\t\t};\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/core/Curve.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Extensible curve object\r\n\t *\r\n\t * Some common of Curve methods\r\n\t * .getPoint(t), getTangent(t)\r\n\t * .getPointAt(u), getTagentAt(u)\r\n\t * .getPoints(), .getSpacedPoints()\r\n\t * .getLength()\r\n\t * .updateArcLengths()\r\n\t *\r\n\t * This following classes subclasses THREE.Curve:\r\n\t *\r\n\t * -- 2d classes --\r\n\t * THREE.LineCurve\r\n\t * THREE.QuadraticBezierCurve\r\n\t * THREE.CubicBezierCurve\r\n\t * THREE.SplineCurve\r\n\t * THREE.ArcCurve\r\n\t * THREE.EllipseCurve\r\n\t *\r\n\t * -- 3d classes --\r\n\t * THREE.LineCurve3\r\n\t * THREE.QuadraticBezierCurve3\r\n\t * THREE.CubicBezierCurve3\r\n\t * THREE.SplineCurve3\r\n\t * THREE.ClosedSplineCurve3\r\n\t *\r\n\t * A series of curves can be represented as a THREE.CurvePath\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tAbstract Curve base class\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve = function () {\r\n\t\r\n\t};\r\n\t\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\t\r\n\t};\r\n\t\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\t\r\n\tTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPoint( t )\r\n\t\r\n\tTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get sequence of points using getPointAt( u )\r\n\t\r\n\tTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\t\r\n\t\tvar d, pts = [];\r\n\t\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\t\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn pts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get total curve arc length\r\n\t\r\n\tTHREE.Curve.prototype.getLength = function () {\r\n\t\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Get list of cumulative segment lengths\r\n\t\r\n\tTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\t\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\t\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.needsUpdate = false;\r\n\t\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\t\r\n\t\tcache.push( 0 );\r\n\t\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\t\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheArcLengths = cache;\r\n\t\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.updateArcLengths = function() {\r\n\t\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\t\r\n\t};\r\n\t\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\t\r\n\tTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\t\r\n\t\tvar arcLengths = this.getLengths();\r\n\t\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\t\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\t\r\n\t\tif ( distance ) {\r\n\t\r\n\t\t\ttargetArcLength = distance;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//var time = Date.now();\r\n\t\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\t\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\t\r\n\t\twhile ( low <= high ) {\r\n\t\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\t\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\t\r\n\t\t\tif ( comparison < 0 ) {\r\n\t\r\n\t\t\t\tlow = i + 1;\r\n\t\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\t\r\n\t\t\t\thigh = i - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t// DONE\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\ti = high;\r\n\t\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\t\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\t\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\t\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\t\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\t\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\t\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\t\r\n\t\t// add that fractional amount to t\r\n\t\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\t\r\n\t\treturn t;\r\n\t\r\n\t};\r\n\t\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\t\r\n\tTHREE.Curve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\t\r\n\t\t// Capping in case of danger\r\n\t\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\t\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\t\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\t\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Curve.Utils = {\r\n\t\r\n\t\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Puay Bing, thanks for helping with this derivative!\r\n\t\r\n\t\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t\t3 * t * t * p3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\t// To check if my formulas are correct\r\n\t\r\n\t\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\t\r\n\t\t\treturn h00 + h10 + h01 + h11;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Catmull-Rom\r\n\t\r\n\t\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\t\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t * t2;\r\n\t\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// TODO: Transformation for Curves?\r\n\t\r\n\t/**************************************************************\r\n\t *\t3D Curves\r\n\t **************************************************************/\r\n\t\r\n\t// A Factory method for creating new curve subclasses\r\n\t\r\n\tTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\t\r\n\t\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\t\tconstructor.prototype.constructor = constructor;\r\n\t\tconstructor.prototype.getPoint = getPointFunc;\r\n\t\r\n\t\treturn constructor;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/CurvePath.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t **/\r\n\t\r\n\t/**************************************************************\r\n\t *\tCurved Path - a curve path is simply a array of connected\r\n\t *  curves, but retains the api of a curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CurvePath = function () {\r\n\t\r\n\t\tthis.curves = [];\r\n\t\tthis.bends = [];\r\n\t\r\n\t\tthis.autoClose = false; // Automatically closes the path\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\t\r\n\tTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\t\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t\t// TODO\r\n\t\t// If the ending of curve is not connected to the starting\r\n\t\t// or the next curve, then, this is not a real path\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.closePath = function() {\r\n\t\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\t\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\t\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\t\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\t\r\n\tTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\t\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0, diff, curve;\r\n\t\r\n\t\t// To think about boundaries points.\r\n\t\r\n\t\twhile ( i < curveLengths.length ) {\r\n\t\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\t\r\n\t\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\t\tcurve = this.curves[ i ];\r\n\t\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\t\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\ti ++;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn null;\r\n\t\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\t\r\n\t};\r\n\t\r\n\t/*\r\n\tTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n\t};*/\r\n\t\r\n\t\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\t\r\n\tTHREE.CurvePath.prototype.getLength = function() {\r\n\t\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\t\r\n\t};\r\n\t\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\t\r\n\tTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\t\r\n\t\t// We use cache values if curves and cache array are same length\r\n\t\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\t\r\n\t\t\treturn this.cacheLengths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\t\r\n\t\tvar lengths = [], sums = 0;\r\n\t\tvar i, il = this.curves.length;\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.cacheLengths = lengths;\r\n\t\r\n\t\treturn lengths;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\t// Returns min and max coordinates\r\n\t\r\n\tTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\t\r\n\t\tvar points = this.getPoints();\r\n\t\r\n\t\tvar maxX, maxY, maxZ;\r\n\t\tvar minX, minY, minZ;\r\n\t\r\n\t\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\t\tminX = minY = Number.POSITIVE_INFINITY;\r\n\t\r\n\t\tvar p, i, il, sum;\r\n\t\r\n\t\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\t\r\n\t\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\t\r\n\t\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = points[ i ];\r\n\t\r\n\t\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\t\telse if ( p.x < minX ) minX = p.x;\r\n\t\r\n\t\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\t\telse if ( p.y < minY ) minY = p.y;\r\n\t\r\n\t\t\tif ( v3 ) {\r\n\t\r\n\t\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tsum.add( p );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar ret = {\r\n\t\r\n\t\t\tminX: minX,\r\n\t\t\tminY: minY,\r\n\t\t\tmaxX: maxX,\r\n\t\t\tmaxY: maxY\r\n\t\r\n\t\t};\r\n\t\r\n\t\tif ( v3 ) {\r\n\t\r\n\t\t\tret.maxZ = maxZ;\r\n\t\t\tret.minZ = minZ;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn ret;\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\t\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\t\r\n\tTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\t// Generate geometry from equidistant sampling along the path\r\n\t\r\n\tTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\t\r\n\t\tvar pts = this.getSpacedPoints( divisions, true );\r\n\t\treturn this.createGeometry( pts );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t/**************************************************************\r\n\t *\tBend / Wrap Helper Methods\r\n\t **************************************************************/\r\n\t\r\n\t// Wrap path / Bend modifiers?\r\n\t\r\n\tTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\t\r\n\t\tthis.bends.push( bendpath );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\t\r\n\t\tvar oldPts = this.getSpacedPoints( segments );\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tif ( ! bends ) {\r\n\t\r\n\t\t\tbends = this.bends;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\t\r\n\t\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// This returns getPoints() bend/wrapped around the contour of a path.\r\n\t// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\t\r\n\tTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\t\r\n\t\tvar bounds = this.getBoundingBox();\r\n\t\r\n\t\tvar i, il, p, oldX, oldY, xNorm;\r\n\t\r\n\t\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tp = oldPts[ i ];\r\n\t\r\n\t\t\toldX = p.x;\r\n\t\t\toldY = p.y;\r\n\t\r\n\t\t\txNorm = oldX / bounds.maxX;\r\n\t\r\n\t\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\t\r\n\t\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\t\r\n\t\t\t// check for out of bounds?\r\n\t\r\n\t\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\t\tvar normal = path.getTangent( xNorm );\r\n\t\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\t\r\n\t\t\tp.x = pathPt.x + normal.x;\r\n\t\t\tp.y = pathPt.y + normal.y;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn oldPts;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Path.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Creates free form 2d path using series of points, lines or curves.\r\n\t *\r\n\t **/\r\n\t\r\n\tTHREE.Path = function ( points ) {\r\n\t\r\n\t\tTHREE.CurvePath.call( this );\r\n\t\r\n\t\tthis.actions = [];\r\n\t\r\n\t\tif ( points ) {\r\n\t\r\n\t\t\tthis.fromPoints( points );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\n\tTHREE.Path.prototype.constructor = THREE.Path;\r\n\t\r\n\tTHREE.PathActions = {\r\n\t\r\n\t\tMOVE_TO: 'moveTo',\r\n\t\tLINE_TO: 'lineTo',\r\n\t\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\t\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\t\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\t\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\t\tELLIPSE: 'ellipse'\r\n\t};\r\n\t\r\n\t// TODO Clean up PATH API\r\n\t\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\t\r\n\tTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\t\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\t\r\n\t\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\t\r\n\t\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// startPath() endPath()?\r\n\t\r\n\tTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\t\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\t//---\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\t\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\t\r\n\t};\r\n\t\r\n\t// FUTURE: Change the API or follow canvas API?\r\n\t\r\n\tTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\t THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\r\n\t };\r\n\t\r\n\t\r\n\tTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\t\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\t\r\n\t\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\t\r\n\t };\r\n\t\r\n\tTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\t\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\t\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\t\r\n\t\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// if ( closedPath ) {\r\n\t\t//\r\n\t\t// \tpoints.push( points[ 0 ] );\r\n\t\t//\r\n\t\t// }\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t/* Return an array of vectors based on contour of the path */\r\n\t\r\n\tTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tdivisions = divisions || 12;\r\n\t\r\n\t\tvar points = [];\r\n\t\r\n\t\tvar i, il, item, action, args;\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, j,\r\n\t\t\tt, tx, ty;\r\n\t\r\n\t\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\titem = this.actions[ i ];\r\n\t\r\n\t\t\taction = item.action;\r\n\t\t\targs = item.args;\r\n\t\r\n\t\t\tswitch ( action ) {\r\n\t\r\n\t\t\tcase THREE.PathActions.MOVE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.LINE_TO:\r\n\t\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\t\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\t\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\t\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\t\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\t\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\t\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / divisions;\r\n\t\r\n\t\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\t\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\t\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\t\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\t\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\t\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\t\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ARC:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\tcase THREE.PathActions.ELLIPSE:\r\n\t\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\t\r\n\t\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\t\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\t\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\t\r\n\t\t\t\t\tt = j / tdivisions;\r\n\t\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\t\r\n\t\t\t\t\t\tt = 1 - t;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\t\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\t\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\t\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t//console.log(points);\r\n\t\r\n\t\t\t\tbreak;\r\n\t\r\n\t\t\t} // end switch\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\t\tif ( closedPath ) {\r\n\t\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn points;\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// Breaks path into shapes\r\n\t//\r\n\t//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n\t//\t- solid shapes are defined clockwise (CW)\r\n\t//\t- holes are defined counterclockwise (CCW)\r\n\t//\r\n\t//\tIf parameter noHoles==true:\r\n\t//  - all subPaths are regarded as solid shapes\r\n\t//  - definition order CW/CCW has no relevance\r\n\t//\r\n\t\r\n\tTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\t\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\t\r\n\t\t\tvar i, il, item, action, args;\r\n\t\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\t\r\n\t\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\titem = inActions[ i ];\r\n\t\r\n\t\t\t\targs = item.args;\r\n\t\t\t\taction = item.action;\r\n\t\r\n\t\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\t\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\t\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// console.log(subPaths);\r\n\t\r\n\t\t\treturn\tsubPaths;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\t\r\n\t\t\tvar shapes = [];\r\n\t\r\n\t\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\t\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tshapes.push( tmpShape );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\t\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\t\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\t\r\n\t\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\t\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\t\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tinside;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\t\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\t\r\n\t\tif ( subPaths.length === 1 ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\t\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\t\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\tvar i, il;\r\n\t\r\n\t\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\t\r\n\t\t\tif ( solid ) {\r\n\t\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\t\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\t\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\t\r\n\t\t\t\t//console.log('cw', i);\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\t\r\n\t\t\t\t//console.log('ccw', i);\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\t\r\n\t\r\n\t\tif ( newShapes.length > 1 ) {\r\n\t\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\t\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\t\r\n\t\t\t}\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\t\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tmpHoles, j, jl;\r\n\t\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//console.log(\"shape\", shapes);\r\n\t\r\n\t\treturn shapes;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/core/Shape.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * Defines a 2d shape plane using paths.\r\n\t **/\r\n\t\r\n\t// STEP 1 Create a path.\r\n\t// STEP 2 Turn path into shape.\r\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n\t// STEP 3a - Extract points from each shape, turn to vertices\r\n\t// STEP 3b - Triangulate each shape, add faces.\r\n\t\r\n\tTHREE.Shape = function () {\r\n\t\r\n\t\tTHREE.Path.apply( this, arguments );\r\n\t\tthis.holes = [];\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\n\tTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\t\r\n\t// Convenience method to return ExtrudeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.extrude = function ( options ) {\r\n\t\r\n\t\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\t\treturn extruded;\r\n\t\r\n\t};\r\n\t\r\n\t// Convenience method to return ShapeGeometry\r\n\t\r\n\tTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\t\r\n\t\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes\r\n\t\r\n\tTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t// Get points of holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\t\r\n\t\tvar i, il = this.holes.length, holesPts = [];\r\n\t\r\n\t\tfor ( i = 0; i < il; i ++ ) {\r\n\t\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn holesPts;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\t\r\n\t\tif ( this.useSpacedPoints ) {\r\n\t\r\n\t\t\treturn this.extractAllSpacedPoints( divisions );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this.extractAllPoints( divisions );\r\n\t\r\n\t};\r\n\t\r\n\t//\r\n\t// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n\t//\r\n\t// \treturn {\r\n\t//\r\n\t// \t\tshape: this.transform( bend, divisions ),\r\n\t// \t\tholes: this.getPointsHoles( divisions, bend )\r\n\t//\r\n\t// \t};\r\n\t//\r\n\t// };\r\n\t\r\n\t// Get points of shape and holes (spaced by regular distance)\r\n\t\r\n\tTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\t\r\n\t\treturn {\r\n\t\r\n\t\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\t\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\t/**************************************************************\r\n\t *\tUtils\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.Shape.Utils = {\r\n\t\r\n\t\ttriangulateShape: function ( contour, holes ) {\r\n\t\r\n\t\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\r\n\t\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\t\r\n\t\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\t\r\n\t\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// not parallel\r\n\t\r\n\t\t\t\t\tvar perpSeg2;\r\n\t\t\t\t\tif ( limit > 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( perpSeg2 === limit ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\t\r\n\t\t\t\t\t// return real intersection point\r\n\t\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\t\r\n\t\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t\t// both segments are points\r\n\t\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#1  is a single point\r\n\t\t\t\t\tif ( seg1Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// segment#2  is a single point\r\n\t\t\t\t\tif ( seg2Pt ) {\r\n\t\r\n\t\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\t\tif ( seg1dx !== 0 ) {\r\n\t\r\n\t\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\r\n\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\r\n\t\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg2min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\t\r\n\t\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\t\treturn [ seg1min ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\r\n\t\t\t\t// The order of legs is important\r\n\t\r\n\t\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\t\r\n\t\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\t\r\n\t\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\t\r\n\t\t\t\t\t// angle != 180 deg.\r\n\t\r\n\t\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\t\r\n\t\t\t\t\tif ( from2toAngle > 0 ) {\r\n\t\r\n\t\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfunction removeHoles( contour, holes ) {\r\n\t\r\n\t\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\t\tvar hole;\r\n\t\r\n\t\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\r\n\t\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\t\r\n\t\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\t\r\n\t\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\t\r\n\t\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\t\r\n\t\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\t\r\n\t\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\t\tif ( ! insideAngle ) {\r\n\t\r\n\t\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar indepHoles = [];\r\n\t\r\n\t\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\r\n\t\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\tfalse;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\t\tshapePt, holePt,\r\n\t\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\t\ttmpHole1, tmpHole2;\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tindepHoles.push( h );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar minShapeIndex = 0;\r\n\t\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\r\n\t\t\t\t\tcounter --;\r\n\t\t\t\t\tif ( counter < 0 ) {\r\n\t\r\n\t\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t\t// which can be connected without intersections\r\n\t\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\t\r\n\t\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\t\tholeIndex\t= - 1;\r\n\t\r\n\t\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\t\r\n\t\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\r\n\t\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\t\r\n\t\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\t\r\n\t\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\t\r\n\t\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\t\r\n\t\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tvar i, il, f, face,\r\n\t\t\t\tkey, index,\r\n\t\t\t\tallPointsMap = {};\r\n\t\r\n\t\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\t\r\n\t\t\tvar allpoints = contour.concat();\r\n\t\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\t\r\n\t\t\t// prepare all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\t\r\n\t\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\t\r\n\t\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tallPointsMap[ key ] = i;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\t\r\n\t\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\t\r\n\t\t\t// check all face vertices against all points map\r\n\t\r\n\t\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tface = triangles[ i ];\r\n\t\r\n\t\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\t\r\n\t\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\t\r\n\t\t\t\t\tindex = allPointsMap[ key ];\r\n\t\r\n\t\t\t\t\tif ( index !== undefined ) {\r\n\t\r\n\t\t\t\t\t\tface[ f ] = index;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn triangles.concat();\r\n\t\r\n\t\t},\r\n\t\r\n\t\tisClockWise: function ( pts ) {\r\n\t\r\n\t\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Bezier Curves formulas obtained from\r\n\t\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\t\r\n\t\t// Quad Bezier Functions\r\n\t\r\n\t\tb2p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p1: function ( t, p ) {\r\n\t\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2p2: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb2: function ( t, p0, p1, p2 ) {\r\n\t\r\n\t\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t// Cubic Bezier Functions\r\n\t\r\n\t\tb3p0: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p1: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p2: function ( t, p ) {\r\n\t\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3p3: function ( t, p ) {\r\n\t\r\n\t\t\treturn t * t * t * p;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\t\r\n\t\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/LineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve = function ( v1, v2 ) {\r\n\t\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\t\r\n\tTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar point = this.v2.clone().sub( this.v1 );\r\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\t\r\n\t\treturn point;\r\n\t\r\n\t};\r\n\t\r\n\t// Line curve is linear, so we can overwrite default getPointAt\r\n\t\r\n\tTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\t\r\n\t\treturn this.getPoint( u );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\t\r\n\t\treturn tangent.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\r\n\t\t// returns unit vector\r\n\t\r\n\t\treturn vector.normalize();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\treturn new THREE.Vector2( tx, ty );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\t\r\n\t\tvar tx, ty;\r\n\t\r\n\t\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\r\n\t\tvar tangent = new THREE.Vector2( tx, ty );\r\n\t\ttangent.normalize();\r\n\t\r\n\t\treturn tangent;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/SplineCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\t\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\t\r\n\tTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\t\r\n\t\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\tvar vector = new THREE.Vector2();\r\n\t\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\r\n\t\treturn vector;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/EllipseCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tEllipse curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\t\r\n\t\tthis.aX = aX;\r\n\t\tthis.aY = aY;\r\n\t\r\n\t\tthis.xRadius = xRadius;\r\n\t\tthis.yRadius = yRadius;\r\n\t\r\n\t\tthis.aStartAngle = aStartAngle;\r\n\t\tthis.aEndAngle = aEndAngle;\r\n\t\r\n\t\tthis.aClockwise = aClockwise;\r\n\t\t\r\n\t\tthis.aRotation = aRotation || 0;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\n\tTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\t\r\n\tTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\t\r\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\t\r\n\t\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\t\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\t\r\n\t\tvar angle;\r\n\t\r\n\t\tif ( this.aClockwise === true ) {\r\n\t\r\n\t\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\t\r\n\t\t}\r\n\t\t\r\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\t\r\n\t\tif ( this.aRotation !== 0 ) {\r\n\t\r\n\t\t\tvar cos = Math.cos( this.aRotation );\r\n\t\t\tvar sin = Math.sin( this.aRotation );\r\n\t\r\n\t\t\tvar tx = x, ty = y;\r\n\t\r\n\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn new THREE.Vector2( x, y );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/curves/ArcCurve.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tArc curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\t\r\n\t\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\n\tTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\t\r\n\t// File:src/extras/curves/LineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tLine3D\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.LineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v1, v2 ) {\r\n\t\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\t\tvector.multiplyScalar( t );\r\n\t\t\tvector.add( this.v1 );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tQuadratic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CubicBezierCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tCubic Bezier 3D curve\r\n\t **************************************************************/\r\n\t\r\n\tTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( v0, v1, v2, v3 ) {\r\n\t\r\n\t\t\tthis.v0 = v0;\r\n\t\t\tthis.v1 = v1;\r\n\t\t\tthis.v2 = v2;\r\n\t\t\tthis.v3 = v3;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/SplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tSpline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.SplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 1 ) * t;\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\t\tvar point1 = points[ intPoint ];\r\n\t\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/curves/CatmullRomCurve3.js\r\n\t\r\n\t/**\r\n\t * @author zz85 https://github.com/zz85\r\n\t *\r\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\r\n\t * cusps and self-intersections in non-uniform catmull rom curves.\r\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n\t *\r\n\t * curve.type accepts centripetal(default), chordal and catmullrom\r\n\t * curve.tension is used for catmullrom which defaults to 0.5\r\n\t */\r\n\t\r\n\tTHREE.CatmullRomCurve3 = ( function() {\r\n\t\r\n\t\tvar\r\n\t\t\ttmp = new THREE.Vector3(),\r\n\t\t\tpx = new CubicPoly(),\r\n\t\t\tpy = new CubicPoly(),\r\n\t\t\tpz = new CubicPoly();\r\n\t\r\n\t\t/*\r\n\t\tBased on an optimized c++ solution in\r\n\t\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t\t - http://ideone.com/NoEbVM\r\n\t\r\n\t\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\t\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\t\twhich can be placed in CurveUtils.\r\n\t\t*/\r\n\t\r\n\t\tfunction CubicPoly() {\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/*\r\n\t\t * Compute coefficients for a cubic polynomial\r\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t\t * such that\r\n\t\t *   p(0) = x0, p(1) = x1\r\n\t\t *  and\r\n\t\t *   p'(0) = t0, p'(1) = t1.\r\n\t\t */\r\n\t\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\t\r\n\t\t\tthis.c0 = x0;\r\n\t\t\tthis.c1 = t0;\r\n\t\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\t\r\n\t\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\t\r\n\t\t\t// rescale tangents for parametrization in [0,1]\r\n\t\t\tt1 *= dt1;\r\n\t\t\tt2 *= dt1;\r\n\t\r\n\t\t\t// initCubicPoly\r\n\t\t\tthis.init( x1, x2, t1, t2 );\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\t\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\t\r\n\t\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\t\r\n\t\t};\r\n\t\r\n\t\tCubicPoly.prototype.calc = function( t ) {\r\n\t\r\n\t\t\tvar t2 = t * t;\r\n\t\t\tvar t3 = t2 * t;\r\n\t\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\t\r\n\t\t};\r\n\t\r\n\t\t// Subclass Three.js curve\r\n\t\treturn THREE.Curve.create(\r\n\t\r\n\t\t\tfunction ( p /* array of Vector3 */ ) {\r\n\t\r\n\t\t\t\tthis.points = p || [];\r\n\t\r\n\t\t\t},\r\n\t\r\n\t\t\tfunction ( t ) {\r\n\t\r\n\t\t\t\tvar points = this.points,\r\n\t\t\t\t\tpoint, intPoint, weight, l;\r\n\t\r\n\t\t\t\tl = points.length;\r\n\t\r\n\t\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\t\r\n\t\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\t\r\n\t\t\t\t\tintPoint = l - 2;\r\n\t\t\t\t\tweight = 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar p0, p1, p2, p3;\r\n\t\r\n\t\t\t\tif ( intPoint === 0 ) {\r\n\t\r\n\t\t\t\t\t// extrapolate first point\r\n\t\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\t\tp0 = tmp;\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tp1 = points[ intPoint ];\r\n\t\t\t\tp2 = points[ intPoint + 1 ];\r\n\t\r\n\t\t\t\tif ( intPoint + 2 < l ) {\r\n\t\r\n\t\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// extrapolate last point\r\n\t\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\t\tp3 = tmp;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\t\r\n\t\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\t\r\n\t\t\t\t\t// safety check for repeated points\r\n\t\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\t\r\n\t\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\t\r\n\t\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\t\r\n\t\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\t\tpx.calc( weight ),\r\n\t\t\t\t\tpy.calc( weight ),\r\n\t\t\t\t\tpz.calc( weight )\r\n\t\t\t\t);\r\n\t\r\n\t\t\t\treturn v;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t);\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/curves/ClosedSplineCurve3.js\r\n\t\r\n\t/**************************************************************\r\n\t *\tClosed Spline 3D curve\r\n\t **************************************************************/\r\n\t\r\n\t\r\n\tTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\t\r\n\t\tfunction ( points /* array of Vector3 */ ) {\r\n\t\r\n\t\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tfunction ( t ) {\r\n\t\r\n\t\t\tvar points = this.points;\r\n\t\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\t\r\n\t\t\tvar intPoint = Math.floor( point );\r\n\t\t\tvar weight = point - intPoint;\r\n\t\r\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\t\r\n\t\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\t\r\n\t\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\t\r\n\t\t\treturn vector;\r\n\t\r\n\t\t}\r\n\t\r\n\t);\r\n\t\r\n\t// File:src/extras/animation/AnimationHandler.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t */\r\n\t\r\n\tTHREE.AnimationHandler = {\r\n\t\r\n\t\tLINEAR: 0,\r\n\t\tCATMULLROM: 1,\r\n\t\tCATMULLROM_FORWARD: 2,\r\n\t\r\n\t\t//\r\n\t\r\n\t\tadd: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tget: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\tremove: function () {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\t\r\n\t\t},\r\n\t\r\n\t\t//\r\n\t\r\n\t\tanimations: [],\r\n\t\r\n\t\tinit: function ( data ) {\r\n\t\r\n\t\t\tif ( data.initialized === true ) return data;\r\n\t\r\n\t\t\t// loop through all keys\r\n\t\r\n\t\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t// remove minus times\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\t\r\n\t\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t// create quaternions\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\t\r\n\t\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// prepare morph target keys\r\n\t\r\n\t\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\t\r\n\t\t\t\t\t// get all used\r\n\t\r\n\t\t\t\t\tvar usedMorphTargets = {};\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\t\r\n\t\r\n\t\t\t\t\t// set all used on all frames\r\n\t\r\n\t\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar influences = {};\r\n\t\r\n\t\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\t\r\n\t\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\t\r\n\t\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\t\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// remove all keys that are on the same time\r\n\t\r\n\t\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\t\r\n\t\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\t\tk --;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\r\n\t\t\t\t// set index\r\n\t\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\t\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tdata.initialized = true;\r\n\t\r\n\t\t\treturn data;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tparse: function ( root ) {\r\n\t\r\n\t\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\t\r\n\t\t\t\thierarchy.push( root );\r\n\t\r\n\t\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\t// setup hierarchy\r\n\t\r\n\t\t\tvar hierarchy = [];\r\n\t\r\n\t\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\t\r\n\t\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\t\r\n\t\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn hierarchy;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tplay: function ( animation ) {\r\n\t\r\n\t\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.push( animation );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function ( animation ) {\r\n\t\r\n\t\t\tvar index = this.animations.indexOf( animation );\r\n\t\r\n\t\t\tif ( index !== - 1 ) {\r\n\t\r\n\t\t\t\tthis.animations.splice( index, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( deltaTimeMS ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\t\r\n\t\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/Animation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.Animation = function ( root, data ) {\r\n\t\r\n\t\tthis.root = root;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\t\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 1;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.loop = true;\r\n\t\tthis.weight = 0;\r\n\t\r\n\t\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.Animation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.Animation,\r\n\t\r\n\t\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\t\r\n\t\tplay: function ( startTime, weight ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\tthis.reset();\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function() {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\treset: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( object.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\t\tanimations: {},\r\n\t\t\t\t\t\tblending: {\r\n\t\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar name = this.data.name;\r\n\t\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\t\tvar animationCache = animations[ name ];\r\n\t\r\n\t\t\t\tif ( animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\tanimationCache = {\r\n\t\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t\t};\r\n\t\r\n\t\t\t\t\tanimations[ name ] = animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Get keys to match our current time\r\n\t\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\tvar type = this.keyTypes[ t ];\r\n\t\r\n\t\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tresetBlendWeights: function () {\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache;\r\n\t\r\n\t\t\t\tif ( animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar blending = animationCache.blending;\r\n\t\r\n\t\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\t\tblending.scaleWeight = 0.0;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: ( function() {\r\n\t\r\n\t\t\tvar points = [];\r\n\t\t\tvar target = new THREE.Vector3();\r\n\t\t\tvar newVector = new THREE.Vector3();\r\n\t\t\tvar newQuat = new THREE.Quaternion();\r\n\t\r\n\t\t\t// Catmull-Rom spline\r\n\t\r\n\t\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\t\r\n\t\t\t\tvar c = [], v3 = [],\r\n\t\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\t\tpa, pb, pc, pd;\r\n\t\r\n\t\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\t\tintPoint = Math.floor( point );\r\n\t\t\t\tweight = point - intPoint;\r\n\t\r\n\t\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\t\tc[ 1 ] = intPoint;\r\n\t\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\t\r\n\t\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\t\tpd = points[ c[ 3 ] ];\r\n\t\r\n\t\t\t\tw2 = weight * weight;\r\n\t\t\t\tw3 = weight * w2;\r\n\t\r\n\t\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\t\r\n\t\t\t\treturn v3;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\t\r\n\t\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\t\r\n\t\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t\treturn function ( delta ) {\r\n\t\r\n\t\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t\tif ( this.weight === 0 )\r\n\t\t\t\t\treturn;\r\n\t\r\n\t\t\t\t//\r\n\t\r\n\t\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\t\r\n\t\t\t\t\tif ( this.loop ) {\r\n\t\r\n\t\t\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\t\tthis.currentTime += duration;\r\n\t\r\n\t\t\t\t\t\tthis.reset();\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tthis.stop();\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\t\tvar blending = object.animationCache.blending;\r\n\t\r\n\t\t\t\t\t// loop through pos/rot/scl\r\n\t\r\n\t\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\t\r\n\t\t\t\t\t\t// get keys\r\n\t\r\n\t\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\t\r\n\t\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\t\r\n\t\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\t\r\n\t\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\t\r\n\t\t\t\t\t\t// interpolate\r\n\t\r\n\t\t\t\t\t\tif ( type === \"pos\" ) {\r\n\t\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\t\r\n\t\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\t\r\n\t\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\t\r\n\t\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t\t// blend\r\n\t\r\n\t\t\t\t\t\t\t\tvar vector = object.position;\r\n\t\r\n\t\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\t\r\n\t\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\t\r\n\t\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\t\ttarget.normalize();\r\n\t\r\n\t\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\t\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\t\r\n\t\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\t\r\n\t\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\t\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\t\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\treturn true;\r\n\t\r\n\t\t\t};\r\n\t\r\n\t\t} )(),\r\n\t\r\n\t\tgetNextKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( type, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\t\r\n\t\t\t\tkey = key > 0 ? key : 0;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/KeyFrameAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mikael emtinger / http://gomo.se/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author khang duong\r\n\t * @author erik kitson\r\n\t */\r\n\t\r\n\tTHREE.KeyFrameAnimation = function ( data ) {\r\n\t\r\n\t\tthis.root = data.node;\r\n\t\tthis.data = THREE.AnimationHandler.init( data );\r\n\t\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.timeScale = 0.001;\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused = true;\r\n\t\tthis.loop = true;\r\n\t\r\n\t\t// initialize to first keyframes\r\n\t\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\t\tobj = this.hierarchy[ h ];\r\n\t\r\n\t\t\tif ( keys.length && sids ) {\r\n\t\r\n\t\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\t\r\n\t\t\t\t\tif ( next ) {\r\n\t\r\n\t\t\t\t\t\tnext.apply( sid );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.KeyFrameAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.KeyFrameAnimation,\r\n\t\r\n\t\tplay: function ( startTime ) {\r\n\t\r\n\t\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) {\r\n\t\r\n\t\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t\t\t// reset key cache\r\n\t\r\n\t\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\t\tobject,\r\n\t\t\t\t\tnode;\r\n\t\r\n\t\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\t\tif ( node.animationCache === undefined ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\r\n\t\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\t\r\n\t\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.update( 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.isPaused = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.play( this );\r\n\t\r\n\t\t},\r\n\t\r\n\t\tstop: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\t\tthis.isPaused  = false;\r\n\t\r\n\t\t\tTHREE.AnimationHandler.stop( this );\r\n\t\r\n\t\t\t// reset JIT matrix and remove cache\r\n\t\r\n\t\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\t\r\n\t\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tif ( node.animationCache !== undefined ) {\r\n\t\r\n\t\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\t\r\n\t\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\t\tobj.matrix = original;\r\n\t\r\n\t\t\t\t\tdelete node.animationCache;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar duration = this.data.length;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\t\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar node = this.data.hierarchy[ h ];\r\n\t\r\n\t\t\t\tvar keys = node.keys,\r\n\t\t\t\t\tanimationCache = node.animationCache;\r\n\t\r\n\t\r\n\t\t\t\tif ( keys.length ) {\r\n\t\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\t\r\n\t\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\t\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetNextKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key % keys.length;\r\n\t\r\n\t\t\tfor ( ; key < keys.length; key ++ ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ 0 ];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\t\r\n\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\t\r\n\t\t\tfor ( ; key >= 0; key -- ) {\r\n\t\r\n\t\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\t\r\n\t\t\t\t\treturn keys[ key ];\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn keys[ keys.length - 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/animation/MorphAnimation.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com\r\n\t * @author willy-vvu / http://willy-vvu.github.io\r\n\t */\r\n\t\r\n\tTHREE.MorphAnimation = function ( mesh ) {\r\n\t\r\n\t\tthis.mesh = mesh;\r\n\t\tthis.frames = mesh.morphTargetInfluences.length;\r\n\t\tthis.currentTime = 0;\r\n\t\tthis.duration = 1000;\r\n\t\tthis.loop = true;\r\n\t\tthis.lastFrame = 0;\r\n\t\tthis.currentFrame = 0;\r\n\t\r\n\t\tthis.isPlaying = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphAnimation.prototype = {\r\n\t\r\n\t\tconstructor: THREE.MorphAnimation,\r\n\t\r\n\t\tplay: function () {\r\n\t\r\n\t\t\tthis.isPlaying = true;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tpause: function () {\r\n\t\r\n\t\t\tthis.isPlaying = false;\r\n\t\r\n\t\t},\r\n\t\r\n\t\tupdate: function ( delta ) {\r\n\t\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\t\r\n\t\t\tthis.currentTime += delta;\r\n\t\r\n\t\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\t\r\n\t\t\t\tthis.currentTime %= this.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\t\r\n\t\t\tvar frameTime = this.duration / this.frames;\r\n\t\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\t\r\n\t\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\t\r\n\t\t\tif ( frame !== this.currentFrame ) {\r\n\t\r\n\t\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\t\tinfluences[ frame ] = 0;\r\n\t\r\n\t\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\t\tthis.currentFrame = frame;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\t\r\n\t\t\tinfluences[ frame ] = mix;\r\n\t\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/BoxGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n\t */\r\n\t\r\n\tTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'BoxGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\tdepth: depth,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tdepthSegments: depthSegments\r\n\t\t};\r\n\t\r\n\t\tthis.widthSegments = widthSegments || 1;\r\n\t\tthis.heightSegments = heightSegments || 1;\r\n\t\tthis.depthSegments = depthSegments || 1;\r\n\t\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\tvar depth_half = depth / 2;\r\n\t\r\n\t\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\t\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\t\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\t\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\t\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\t\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\t\r\n\t\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\t\r\n\t\t\tvar w, ix, iy,\r\n\t\t\tgridX = scope.widthSegments,\r\n\t\t\tgridY = scope.heightSegments,\r\n\t\t\twidth_half = width / 2,\r\n\t\t\theight_half = height / 2,\r\n\t\t\toffset = scope.vertices.length;\r\n\t\r\n\t\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'z';\r\n\t\r\n\t\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\t\r\n\t\t\t\tw = 'y';\r\n\t\t\t\tgridY = scope.depthSegments;\r\n\t\r\n\t\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\t\r\n\t\t\t\tw = 'x';\r\n\t\t\t\tgridX = scope.depthSegments;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar gridX1 = gridX + 1,\r\n\t\t\tgridY1 = gridY + 1,\r\n\t\t\tsegment_width = width / gridX,\r\n\t\t\tsegment_height = height / gridY,\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\r\n\t\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\t\tvector[ w ] = depth;\r\n\t\r\n\t\t\t\t\tscope.vertices.push( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\t\r\n\t\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\t\r\n\t\t\t\t\tscope.faces.push( face );\r\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\t\r\n\tTHREE.BoxGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.BoxGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.depth,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.depthSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\t\r\n\t// File:src/extras/geometries/CircleGeometry.js\r\n\t\r\n\t/**\r\n\t * @author hughes\r\n\t */\r\n\t\r\n\tTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar i, uvs = [],\r\n\t\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\t\r\n\t\tthis.vertices.push( center );\r\n\t\tuvs.push( centerUV );\r\n\t\r\n\t\tfor ( i = 0; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\t\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\t\r\n\tTHREE.CircleGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CircleBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t */\r\n\t\r\n\tTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'CircleBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tsegments: segments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tvar vertices = segments + 2;\r\n\t\r\n\t\tvar positions = new Float32Array( vertices * 3 );\r\n\t\tvar normals = new Float32Array( vertices * 3 );\r\n\t\tvar uvs = new Float32Array( vertices * 2 );\r\n\t\r\n\t\t// center data is already zero, but need to set a few extras\r\n\t\tnormals[ 3 ] = 1.0;\r\n\t\tuvs[ 0 ] = 0.5;\r\n\t\tuvs[ 1 ] = 0.5;\r\n\t\r\n\t\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\t\r\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\t\r\n\t\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\t\r\n\t\t\tnormals[ i + 2 ] = 1; // normal z\r\n\t\r\n\t\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\t\r\n\t\t\tindices.push( i );\r\n\t\t\tindices.push( i + 1 );\r\n\t\t\tindices.push( 0 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\t\r\n\tTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.segments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/CylinderGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'CylinderGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradiusTop: radiusTop,\r\n\t\t\tradiusBottom: radiusBottom,\r\n\t\t\theight: height,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\topenEnded: openEnded,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\t\theight = height !== undefined ? height : 100;\r\n\t\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\theightSegments = heightSegments || 1;\r\n\t\r\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\t\r\n\t\tvar heightHalf = height / 2;\r\n\t\r\n\t\tvar x, y, vertices = [], uvs = [];\r\n\t\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\t\tvar uvsRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\t\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / radialSegments;\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\t\tuvs.push( uvsRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\t\tvar na, nb;\r\n\t\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\tif ( radiusTop !== 0 ) {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\t\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\t\r\n\t\t\t\tvar n1 = na.clone();\r\n\t\t\t\tvar n2 = na.clone();\r\n\t\t\t\tvar n3 = nb.clone();\r\n\t\t\t\tvar n4 = nb.clone();\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// top cap\r\n\t\r\n\t\tif ( openEnded === false && radiusTop > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// bottom cap\r\n\t\r\n\t\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\t\r\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\t\tvar v3 = this.vertices.length - 1;\r\n\t\r\n\t\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\r\n\t\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\t\r\n\tTHREE.CylinderGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry(\r\n\t\t\tthis.parameters.radiusTop,\r\n\t\t\tthis.parameters.radiusBottom,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.openEnded,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/EdgesGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\t\r\n\t\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tvar geometry2;\r\n\t\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tgeometry2 = new THREE.Geometry();\r\n\t\t\tgeometry2.fromBufferGeometry( geometry );\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tgeometry2 = geometry.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry2.mergeVertices();\r\n\t\tgeometry2.computeFaceNormals();\r\n\t\r\n\t\tvar vertices = geometry2.vertices;\r\n\t\tvar faces = geometry2.faces;\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\thash[ key ].face2 = i;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar coords = [];\r\n\t\r\n\t\tfor ( var key in hash ) {\r\n\t\r\n\t\t\tvar h = hash[ key ];\r\n\t\r\n\t\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\t\r\n\t\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\t\tcoords.push( vertex.x );\r\n\t\t\t\tcoords.push( vertex.y );\r\n\t\t\t\tcoords.push( vertex.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\t\r\n\t// File:src/extras/geometries/ExtrudeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t *\r\n\t * Creates extruded geometry from a path shape.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *  curveSegments: <int>, // number of points on the curves\r\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n\t *  amount: <int>, // Depth to extrude the shape\r\n\t *\r\n\t *  bevelEnabled: <bool>, // turn on bevel\r\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n\t *  bevelSize: <float>, // how far from shape outline is bevel\r\n\t *  bevelSegments: <int>, // number of bevel layers\r\n\t *\r\n\t *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n\t *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n\t *\r\n\t *  uvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\r\n\t\t\tshapes = [];\r\n\t\t\treturn;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ExtrudeGeometry';\r\n\t\r\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\t// can't really use automatic vertex normals\r\n\t\t// as then front and back sides get smoothed too\r\n\t\t// should do separate smoothing just for sides\r\n\t\r\n\t\t//this.computeVertexNormals();\r\n\t\r\n\t\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tvar sl = shapes.length;\r\n\t\r\n\t\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\tvar shape = shapes[ s ];\r\n\t\t\tthis.addShape( shape, options );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\t\r\n\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\t\r\n\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\t\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\t\r\n\t\tvar extrudePath = options.extrudePath;\r\n\t\tvar extrudePts, extrudeByPath = false;\r\n\t\r\n\t\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\t\r\n\t\tvar splineTube, binormal, normal, position2;\r\n\t\tif ( extrudePath ) {\r\n\t\r\n\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\t\r\n\t\t\textrudeByPath = true;\r\n\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\t\r\n\t\t\t// SETUP TNB variables\r\n\t\r\n\t\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t\t// TODO1 - have a .isClosed in spline?\r\n\t\r\n\t\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\t\r\n\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\t\r\n\t\t\tbinormal = new THREE.Vector3();\r\n\t\t\tnormal = new THREE.Vector3();\r\n\t\t\tposition2 = new THREE.Vector3();\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Safeguards if bevels are not enabled\r\n\t\r\n\t\tif ( ! bevelEnabled ) {\r\n\t\r\n\t\t\tbevelSegments = 0;\r\n\t\t\tbevelThickness = 0;\r\n\t\t\tbevelSize = 0;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Variables initialization\r\n\t\r\n\t\tvar ahole, h, hl; // looping of holes\r\n\t\tvar scope = this;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ h ] = ahole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\t\r\n\t\t/* Vertices */\r\n\t\r\n\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\tvertices = vertices.concat( ahole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction scalePt2 ( pt, vec, size ) {\r\n\t\r\n\t\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\t\r\n\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar b, bs, t, z,\r\n\t\t\tvert, vlen = vertices.length,\r\n\t\t\tface, flen = faces.length;\r\n\t\r\n\t\r\n\t\t// Find directions for point movement\r\n\t\r\n\t\r\n\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\t\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\t\r\n\t\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t\t//\r\n\t\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\r\n\t\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\t\r\n\t\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\t\r\n\t\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\r\n\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\r\n\t\t\t// check for collinear edges\r\n\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\t\r\n\t\t\t\t// not collinear\r\n\t\r\n\t\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\r\n\t\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\r\n\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t\t//  but prevent crazy spikes\r\n\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\r\n\t\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// handle special case of collinear edges\r\n\t\r\n\t\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\t\r\n\t\t\t\t\t\t\tdirection_eq = true;\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif ( direction_eq ) {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar contourMovements = [];\r\n\t\r\n\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\t// console.log('i,j,k', i, j , k)\r\n\t\r\n\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\t\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\tahole = holes[ h ];\r\n\t\r\n\t\t\toneHoleMovements = [];\r\n\t\r\n\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\t\r\n\t\t\t\tif ( j === il ) j = 0;\r\n\t\t\t\tif ( k === il ) k = 0;\r\n\t\r\n\t\t\t\t//  (j)---(i)---(k)\r\n\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tholesMovements.push( oneHoleMovements );\r\n\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\t\r\n\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t\r\n\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\r\n\t\t\t//z = bevelThickness * t;\r\n\t\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t\t//bs = bevelSize * t; // linear\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y,  - z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tbs = bevelSize;\r\n\t\r\n\t\t// Back facing vertices\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\tv( vert.x, vert.y, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\t\r\n\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Add stepped vertices...\r\n\t\t// Including front facing vertices\r\n\t\r\n\t\tvar s;\r\n\t\r\n\t\tfor ( s = 1; s <= steps; s ++ ) {\r\n\t\r\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\t\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\t\r\n\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\t\r\n\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\t\r\n\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\t\r\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Add bevel segments planes\r\n\t\r\n\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\t\r\n\t\t\tt = b / bevelSegments;\r\n\t\t\tz = bevelThickness * ( 1 - t );\r\n\t\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\t\r\n\t\t\t// contract shape\r\n\t\r\n\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// expand holes\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\toneHoleMovements = holesMovements[ h ];\r\n\t\r\n\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\t\r\n\t\t\t\t\tif ( ! extrudeByPath ) {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t/* Faces */\r\n\t\r\n\t\t// Top and bottom faces\r\n\t\r\n\t\tbuildLidFaces();\r\n\t\r\n\t\t// Sides faces\r\n\t\r\n\t\tbuildSideFaces();\r\n\t\r\n\t\r\n\t\t/////  Internal functions\r\n\t\r\n\t\tfunction buildLidFaces() {\r\n\t\r\n\t\t\tif ( bevelEnabled ) {\r\n\t\r\n\t\t\t\tvar layer = 0; // steps + 1\r\n\t\t\t\tvar offset = vlen * layer;\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\t\toffset = vlen * layer;\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// Bottom faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// Top faces\r\n\t\r\n\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\t\t\tface = faces[ i ];\r\n\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// Create faces for the z-sides of the shape\r\n\t\r\n\t\tfunction buildSideFaces() {\r\n\t\r\n\t\t\tvar layeroffset = 0;\r\n\t\t\tsidewalls( contour, layeroffset );\r\n\t\t\tlayeroffset += contour.length;\r\n\t\r\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\t\r\n\t\t\t\tahole = holes[ h ];\r\n\t\t\t\tsidewalls( ahole, layeroffset );\r\n\t\r\n\t\t\t\t//, true\r\n\t\t\t\tlayeroffset += ahole.length;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction sidewalls( contour, layeroffset ) {\r\n\t\r\n\t\t\tvar j, k;\r\n\t\t\ti = contour.length;\r\n\t\r\n\t\t\twhile ( -- i >= 0 ) {\r\n\t\r\n\t\t\t\tj = i;\r\n\t\t\t\tk = i - 1;\r\n\t\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\t\r\n\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\t\r\n\t\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\t\r\n\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\t\r\n\t\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\t\r\n\t\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\t\td = layeroffset + j + slen2;\r\n\t\r\n\t\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction v( x, y, z ) {\r\n\t\r\n\t\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f3( a, b, c ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\t\r\n\t\t\ta += shapesOffset;\r\n\t\t\tb += shapesOffset;\r\n\t\t\tc += shapesOffset;\r\n\t\t\td += shapesOffset;\r\n\t\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\t\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\t\r\n\t\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t\t];\r\n\t\r\n\t\t},\r\n\t\r\n\t\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\r\n\t\t\tvar a = vertices[ indexA ];\r\n\t\t\tvar b = vertices[ indexB ];\r\n\t\t\tvar c = vertices[ indexC ];\r\n\t\t\tvar d = vertices[ indexD ];\r\n\t\r\n\t\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\treturn [\r\n\t\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t\t];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ShapeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author jonobr1 / http://jonobr1.com\r\n\t *\r\n\t * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n\t * ExtrudeGeometry.\r\n\t *\r\n\t * parameters = {\r\n\t *\r\n\t *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n\t *\r\n\t *\tmaterial: <int> // material index for front and back faces\r\n\t *\tuvGenerator: <Object> // object that provides UV generator functions\r\n\t *\r\n\t * }\r\n\t **/\r\n\t\r\n\tTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ShapeGeometry';\r\n\t\r\n\t\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\t\r\n\t\tthis.addShapeList( shapes, options );\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\t\r\n\t/**\r\n\t * Add an array of shapes to THREE.ShapeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\t\r\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.addShape( shapes[ i ], options );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n\t */\r\n\tTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\t\r\n\t\tif ( options === undefined ) options = {};\r\n\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\t\r\n\t\tvar material = options.material;\r\n\t\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar i, l, hole;\r\n\t\r\n\t\tvar shapesOffset = this.vertices.length;\r\n\t\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\t\r\n\t\tvar vertices = shapePoints.shape;\r\n\t\tvar holes = shapePoints.holes;\r\n\t\r\n\t\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\t\r\n\t\tif ( reverse ) {\r\n\t\r\n\t\t\tvertices = vertices.reverse();\r\n\t\r\n\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\t\r\n\t\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\thole = holes[ i ];\r\n\t\r\n\t\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\t\r\n\t\t\t\t\tholes[ i ] = hole.reverse();\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\treverse = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\t\r\n\t\t// Vertices\r\n\t\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\t\r\n\t\t\thole = holes[ i ];\r\n\t\t\tvertices = vertices.concat( hole );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar vert, vlen = vertices.length;\r\n\t\tvar face, flen = faces.length;\r\n\t\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\t\r\n\t\t\tvert = vertices[ i ];\r\n\t\r\n\t\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\t\r\n\t\t\tface = faces[ i ];\r\n\t\r\n\t\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\t\tvar c = face[ 2 ] + shapesOffset;\r\n\t\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/LatheGeometry.js\r\n\t\r\n\t/**\r\n\t * @author astrodud / http://astrodud.isgreat.org/\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t */\r\n\t\r\n\t// points - to create a closed torus, one must use a set of points \r\n\t//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n\t// segments - the number of circumference segments to create\r\n\t// phiStart - the starting radian\r\n\t// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n\t//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\t\r\n\tTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'LatheGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpoints: points,\r\n\t\t\tsegments: segments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 12;\r\n\t\tphiStart = phiStart || 0;\r\n\t\tphiLength = phiLength || 2 * Math.PI;\r\n\t\r\n\t\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\t\tvar inverseSegments = 1.0 / segments;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\t\r\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\t\r\n\t\t\tvar c = Math.cos( phi ),\r\n\t\t\t\ts = Math.sin( phi );\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar pt = points[ j ];\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\r\n\t\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\t\tvertex.z = pt.z;\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar np = points.length;\r\n\t\r\n\t\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\t\r\n\t\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\tvar base = j + np * i;\r\n\t\t\t\tvar a = base;\r\n\t\t\t\tvar b = base + np;\r\n\t\t\t\tvar c = base + 1 + np;\r\n\t\t\t\tvar d = base + 1;\r\n\t\r\n\t\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\t\tvar v1 = v0 + inversePointLength;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\t\r\n\t\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\t\r\n\t\t\t\t] );\r\n\t\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\t\r\n\t// File:src/extras/geometries/PlaneGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\t\r\n\tTHREE.PlaneGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n\t */\r\n\t\r\n\tTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'PlaneBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\twidth: width,\r\n\t\t\theight: height,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments\r\n\t\t};\r\n\t\r\n\t\tvar width_half = width / 2;\r\n\t\tvar height_half = height / 2;\r\n\t\r\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\t\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\t\r\n\t\tvar segment_width = width / gridX;\r\n\t\tvar segment_height = height / gridY;\r\n\t\r\n\t\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\t\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\t\r\n\t\tvar offset = 0;\r\n\t\tvar offset2 = 0;\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\t\r\n\t\t\tvar y = iy * segment_height - height_half;\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\t\r\n\t\t\t\tvar x = ix * segment_width - width_half;\r\n\t\r\n\t\t\t\tvertices[ offset ] = x;\r\n\t\t\t\tvertices[ offset + 1 ] = - y;\r\n\t\r\n\t\t\t\tnormals[ offset + 2 ] = 1;\r\n\t\r\n\t\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\t\r\n\t\t\t\toffset += 3;\r\n\t\t\t\toffset2 += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\toffset = 0;\r\n\t\r\n\t\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\t\r\n\t\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\t\r\n\t\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\t\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\t\r\n\t\t\t\tindices[ offset ] = a;\r\n\t\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\t\tindices[ offset + 2 ] = d;\r\n\t\r\n\t\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\t\tindices[ offset + 5 ] = d;\r\n\t\r\n\t\t\t\toffset += 6;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\t\r\n\tTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\t\tthis.parameters.width,\r\n\t\t\tthis.parameters.height,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/RingGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Kaleb Murphy\r\n\t */\r\n\t\r\n\tTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'RingGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tinnerRadius: innerRadius,\r\n\t\t\touterRadius: outerRadius,\r\n\t\t\tthetaSegments: thetaSegments,\r\n\t\t\tphiSegments: phiSegments,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tinnerRadius = innerRadius || 0;\r\n\t\touterRadius = outerRadius || 50;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\t\r\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\t\r\n\t\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tradius += radiusStep;\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\t\r\n\t\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\t\r\n\t\t\t// concentric circles inside ring\r\n\t\r\n\t\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\t\r\n\t\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\t\r\n\t\t\t\t// number of segments per circle\r\n\t\r\n\t\t\t\tvar segment = o + thetaSegment;\r\n\t\r\n\t\t\t\tvar v1 = segment;\r\n\t\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t\tv1 = segment;\r\n\t\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\t\tv3 = segment + 1;\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\t\r\n\tTHREE.RingGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.RingGeometry(\r\n\t\t\tthis.parameters.innerRadius,\r\n\t\t\tthis.parameters.outerRadius,\r\n\t\t\tthis.parameters.thetaSegments,\r\n\t\t\tthis.parameters.phiSegments,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\t\r\n\tTHREE.SphereGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/SphereBufferGeometry.js\r\n\t\r\n\t/**\r\n\t * @author benaadams / https://twitter.com/ben_a_adams\r\n\t * based on THREE.SphereGeometry\r\n\t */\r\n\t\r\n\tTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tthis.type = 'SphereBufferGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\twidthSegments: widthSegments,\r\n\t\t\theightSegments: heightSegments,\r\n\t\t\tphiStart: phiStart,\r\n\t\t\tphiLength: phiLength,\r\n\t\t\tthetaStart: thetaStart,\r\n\t\t\tthetaLength: thetaLength\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 50;\r\n\t\r\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\t\r\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\t\r\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\t\r\n\t\tvar thetaEnd = thetaStart + thetaLength;\r\n\t\r\n\t\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\t\r\n\t\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\t\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\t\r\n\t\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\t\r\n\t\t\tvar verticesRow = [];\r\n\t\r\n\t\t\tvar v = y / heightSegments;\r\n\t\r\n\t\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar u = x / widthSegments;\r\n\t\r\n\t\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\r\n\t\t\t\tnormal.set( px, py, pz ).normalize();\r\n\t\r\n\t\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\t\r\n\t\t\t\tverticesRow.push( index );\r\n\t\r\n\t\t\t\tindex ++;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvertices.push( verticesRow );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar indices = [];\r\n\t\r\n\t\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\t\r\n\t\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\t\r\n\t\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\t\r\n\t\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\t\tthis.addAttribute( 'position', positions );\r\n\t\tthis.addAttribute( 'normal', normals );\r\n\t\tthis.addAttribute( 'uv', uvs );\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\t\r\n\tTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.widthSegments,\r\n\t\t\tthis.parameters.heightSegments,\r\n\t\t\tthis.parameters.phiStart,\r\n\t\t\tthis.parameters.phiLength,\r\n\t\t\tthis.parameters.thetaStart,\r\n\t\t\tthis.parameters.thetaLength\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TextGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t * For creating 3D text geometry in three.js\r\n\t *\r\n\t * Text = 3D Text\r\n\t *\r\n\t * parameters = {\r\n\t *  size: \t\t\t<float>, \t// size of the text\r\n\t *  height: \t\t<float>, \t// thickness to extrude text\r\n\t *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n\t *\r\n\t *  font: \t\t\t<string>,\t\t// font name\r\n\t *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n\t *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n\t *\r\n\t *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n\t *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n\t *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n\t *  }\r\n\t *\r\n\t */\r\n\t\r\n\t/*\tUsage Examples\r\n\t\r\n\t\t// TextGeometry wrapper\r\n\t\r\n\t\tvar text3d = new TextGeometry( text, options );\r\n\t\r\n\t\t// Complete manner\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\t\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\t\r\n\t*/\r\n\t\r\n\t\r\n\tTHREE.TextGeometry = function ( text, parameters ) {\r\n\t\r\n\t\tparameters = parameters || {};\r\n\t\r\n\t\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\t\r\n\t\t// translate parameters to ExtrudeGeometry API\r\n\t\r\n\t\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\t\r\n\t\t// defaults\r\n\t\r\n\t\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\t\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\t\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\t\r\n\t\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\t\r\n\t\tthis.type = 'TextGeometry';\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\n\tTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\t\r\n\t// File:src/extras/geometries/TorusGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n\t */\r\n\t\r\n\tTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tarc: arc\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\ttubularSegments = tubularSegments || 6;\r\n\t\tarc = arc || Math.PI * 2;\r\n\t\r\n\t\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\t\r\n\t\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\r\n\t\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\t\tcenter.y = radius * Math.sin( u );\r\n\t\r\n\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\t\tvertex.z = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tthis.vertices.push( vertex );\r\n\t\r\n\t\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\t\r\n\t\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\t\r\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\t\r\n\t\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\t\tthis.faces.push( face );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\t\r\n\tTHREE.TorusGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.arc\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TorusKnotGeometry.js\r\n\t\r\n\t/**\r\n\t * @author oosmoxiecode\r\n\t * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n\t */\r\n\t\r\n\tTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TorusKnotGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\ttube: tube,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\ttubularSegments: tubularSegments,\r\n\t\t\tp: p,\r\n\t\t\tq: q,\r\n\t\t\theightScale: heightScale\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 100;\r\n\t\ttube = tube || 40;\r\n\t\tradialSegments = radialSegments || 64;\r\n\t\ttubularSegments = tubularSegments || 8;\r\n\t\tp = p || 2;\r\n\t\tq = q || 3;\r\n\t\theightScale = heightScale || 1;\r\n\t\r\n\t\tvar grid = new Array( radialSegments );\r\n\t\tvar tang = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\t\tvar bitan = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\t\ttang.subVectors( p2, p1 );\r\n\t\t\tn.addVectors( p2, p1 );\r\n\t\r\n\t\t\tbitan.crossVectors( tang, n );\r\n\t\t\tn.crossVectors( bitan, tang );\r\n\t\t\tbitan.normalize();\r\n\t\t\tn.normalize();\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tvar cy = tube * Math.sin( v );\r\n\t\r\n\t\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\t\r\n\t\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\t\r\n\t\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\t\r\n\t\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\t\tvar d = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\t\r\n\t\t\tvar cu = Math.cos( u );\r\n\t\t\tvar su = Math.sin( u );\r\n\t\t\tvar quOverP = in_q / in_p * u;\r\n\t\t\tvar cs = Math.cos( quOverP );\r\n\t\r\n\t\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\t\r\n\t\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\t\r\n\tTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.tube,\r\n\t\t\tthis.parameters.radialSegments,\r\n\t\t\tthis.parameters.tubularSegments,\r\n\t\t\tthis.parameters.p,\r\n\t\t\tthis.parameters.q,\r\n\t\t\tthis.parameters.heightScale\r\n\t\t);\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TubeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / https://github.com/WestLangley\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * @author miningold / https://github.com/miningold\r\n\t * @author jonobr1 / https://github.com/jonobr1\r\n\t *\r\n\t * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n\t *\r\n\t * Creates a tube which extrudes along a 3d spline\r\n\t *\r\n\t * Uses parallel transport frames as described in\r\n\t * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n\t */\r\n\t\r\n\tTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'TubeGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tpath: path,\r\n\t\t\tsegments: segments,\r\n\t\t\tradius: radius,\r\n\t\t\tradialSegments: radialSegments,\r\n\t\t\tclosed: closed\r\n\t\t};\r\n\t\r\n\t\tsegments = segments || 64;\r\n\t\tradius = radius || 1;\r\n\t\tradialSegments = radialSegments || 8;\r\n\t\tclosed = closed || false;\r\n\t\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\t\r\n\t\tvar grid = [];\r\n\t\r\n\t\tvar scope = this,\r\n\t\r\n\t\t\ttangent,\r\n\t\t\tnormal,\r\n\t\t\tbinormal,\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\r\n\t\t\tu, v, r,\r\n\t\r\n\t\t\tcx, cy,\r\n\t\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\t\ti, j,\r\n\t\t\tip, jp,\r\n\t\t\ta, b, c, d,\r\n\t\t\tuva, uvb, uvc, uvd;\r\n\t\r\n\t\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\t\ttangents = frames.tangents,\r\n\t\t\tnormals = frames.normals,\r\n\t\t\tbinormals = frames.binormals;\r\n\t\r\n\t\t// proxy internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\tfunction vert( x, y, z ) {\r\n\t\r\n\t\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// construct the grid\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tgrid[ i ] = [];\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\tpos = path.getPointAt( u );\r\n\t\r\n\t\t\ttangent = tangents[ i ];\r\n\t\t\tnormal = normals[ i ];\r\n\t\t\tbinormal = binormals[ i ];\r\n\t\r\n\t\t\tr = radius * taper( u );\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\t\r\n\t\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\t\tcy = r * Math.sin( v );\r\n\t\r\n\t\t\t\tpos2.copy( pos );\r\n\t\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\t\r\n\t\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// construct the mesh\r\n\t\r\n\t\tfor ( i = 0; i < segments; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\t\r\n\t\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\t\r\n\t\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\t\tb = grid[ ip ][ j ];\r\n\t\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\t\td = grid[ i ][ jp ];\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\t\r\n\tTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\t\r\n\t\treturn 1;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\t\r\n\t\treturn Math.sin( Math.PI * u );\r\n\t\r\n\t};\r\n\t\r\n\t// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\n\tTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\t\r\n\t\tvar\tnormal = new THREE.Vector3(),\r\n\t\r\n\t\t\ttangents = [],\r\n\t\t\tnormals = [],\r\n\t\t\tbinormals = [],\r\n\t\r\n\t\t\tvec = new THREE.Vector3(),\r\n\t\t\tmat = new THREE.Matrix4(),\r\n\t\r\n\t\t\tnumpoints = segments + 1,\r\n\t\t\ttheta,\r\n\t\t\tepsilon = 0.0001,\r\n\t\t\tsmallest,\r\n\t\r\n\t\t\ttx, ty, tz,\r\n\t\t\ti, u;\r\n\t\r\n\t\r\n\t\t// expose internals\r\n\t\tthis.tangents = tangents;\r\n\t\tthis.normals = normals;\r\n\t\tthis.binormals = binormals;\r\n\t\r\n\t\t// compute the tangent vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tu = i / ( numpoints - 1 );\r\n\t\r\n\t\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\t\ttangents[ i ].normalize();\r\n\t\r\n\t\t}\r\n\t\r\n\t\tinitialNormal3();\r\n\t\r\n\t\t/*\r\n\t\tfunction initialNormal1(lastBinormal) {\r\n\t\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\t}\r\n\t\r\n\t\tfunction initialNormal2() {\r\n\t\r\n\t\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\t\tvar t2 = path.getTangentAt( epsilon );\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t\tfunction initialNormal3() {\r\n\t\r\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t\t// and in the direction of the smallest tangent xyz component\r\n\t\r\n\t\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\t\tsmallest = Number.MAX_VALUE;\r\n\t\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\t\r\n\t\t\tif ( tx <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = tx;\r\n\t\t\t\tnormal.set( 1, 0, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( ty <= smallest ) {\r\n\t\r\n\t\t\t\tsmallest = ty;\r\n\t\t\t\tnormal.set( 0, 1, 0 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tif ( tz <= smallest ) {\r\n\t\r\n\t\t\t\tnormal.set( 0, 0, 1 );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\t\r\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\t\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\t\r\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\t\r\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\t\r\n\t\t\tif ( vec.length() > epsilon ) {\r\n\t\r\n\t\t\t\tvec.normalize();\r\n\t\r\n\t\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\t\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\t\r\n\t\tif ( closed ) {\r\n\t\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\t\ttheta /= ( numpoints - 1 );\r\n\t\r\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\t\r\n\t\t\t\ttheta = - theta;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\t\r\n\t\t\t\t// twist a little...\r\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/PolyhedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author clockworkgeek / https://github.com/clockworkgeek\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'PolyhedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tvertices: vertices,\r\n\t\t\tindices: indices,\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t\tradius = radius || 1;\r\n\t\tdetail = detail || 0;\r\n\t\r\n\t\tvar that = this;\r\n\t\r\n\t\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\t\r\n\t\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar p = this.vertices;\r\n\t\r\n\t\tvar faces = [];\r\n\t\r\n\t\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\t\r\n\t\t\tvar v1 = p[ indices[ i ] ];\r\n\t\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\t\r\n\t\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar centroid = new THREE.Vector3();\r\n\t\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tsubdivide( faces[ i ], detail );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Handle case when face straddles the seam\r\n\t\r\n\t\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\t\r\n\t\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\t\r\n\t\t\tvar x0 = uvs[ 0 ].x;\r\n\t\t\tvar x1 = uvs[ 1 ].x;\r\n\t\t\tvar x2 = uvs[ 2 ].x;\r\n\t\r\n\t\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\t\r\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\t\r\n\t\t\t\t// 0.9 is somewhat arbitrary\r\n\t\r\n\t\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Apply radius\r\n\t\r\n\t\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\t\r\n\t\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Merge vertices\r\n\t\r\n\t\tthis.mergeVertices();\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\r\n\t\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\t\r\n\t\r\n\t\t// Project vector onto sphere's surface\r\n\t\r\n\t\tfunction prepare( vector ) {\r\n\t\r\n\t\t\tvar vertex = vector.normalize().clone();\r\n\t\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\t\r\n\t\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\t\r\n\t\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\t\r\n\t\t\treturn vertex;\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Approximate a curved face with recursively sub-divided triangles.\r\n\t\r\n\t\tfunction make( v1, v2, v3, materialIndex ) {\r\n\t\r\n\t\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\t\tthat.faces.push( face );\r\n\t\r\n\t\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\t\r\n\t\t\tvar azi = azimuth( centroid );\r\n\t\r\n\t\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t\t] );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Analytically subdivide a face to the required detail level.\r\n\t\r\n\t\tfunction subdivide( face, detail ) {\r\n\t\r\n\t\t\tvar cols = Math.pow( 2, detail );\r\n\t\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\t\tvar v = [];\r\n\t\r\n\t\t\tvar materialIndex = face.materialIndex;\r\n\t\r\n\t\t\t// Construct all of the vertices for this subdivision.\r\n\t\r\n\t\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\t\r\n\t\t\t\tv[ i ] = [];\r\n\t\r\n\t\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\t\tvar rows = cols - i;\r\n\t\r\n\t\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\t\r\n\t\t\t\t\tif ( j === 0 && i === cols ) {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = aj;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\t// Construct all of the faces.\r\n\t\r\n\t\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar k = Math.floor( j / 2 );\r\n\t\r\n\t\t\t\t\tif ( j % 2 === 0 ) {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\r\n\t\t\t\t\t\tmake(\r\n\t\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t\t);\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\t\r\n\t\tfunction azimuth( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( vector.z, - vector.x );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Angle above the XZ plane.\r\n\t\r\n\t\tfunction inclination( vector ) {\r\n\t\r\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\t\r\n\t\tfunction correctUV( uv, vector, azimuth ) {\r\n\t\r\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\t\treturn uv.clone();\r\n\t\r\n\t\t}\r\n\t\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\t\tthis.parameters.vertices,\r\n\t\t\tthis.parameters.indices,\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\treturn geometry.copy( this );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\t\r\n\t\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\t\treturn this;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/DodecahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author Abe Pazos / https://hamoid.com\r\n\t */\r\n\t\r\n\tTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\tvar r = 1 / t;\r\n\t\r\n\t\tvar vertices = [\r\n\t\r\n\t\t\t// (±1, ±1, ±1)\r\n\t\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t\t 1,  1, - 1,     1,  1,  1,\r\n\t\r\n\t\t\t// (0, ±1/φ, ±φ)\r\n\t\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t\t 0,  r, - t,     0,  r,  t,\r\n\t\r\n\t\t\t// (±1/φ, ±φ, 0)\r\n\t\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t\t r, - t,  0,     r,  t,  0,\r\n\t\r\n\t\t\t// (±φ, 0, ±1/φ)\r\n\t\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t\t- t,  0,  r,     t,  0,  r\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'DodecahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\t\r\n\tTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/IcosahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'IcosahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\t\r\n\tTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/OctahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'OctahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\t\r\n\tTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/TetrahedronGeometry.js\r\n\t\r\n\t/**\r\n\t * @author timothypratley / https://github.com/timothypratley\r\n\t */\r\n\t\r\n\tTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\t\r\n\t\tvar vertices = [\r\n\t\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t\t];\r\n\t\r\n\t\tvar indices = [\r\n\t\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t\t];\r\n\t\r\n\t\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\t\r\n\t\tthis.type = 'TetrahedronGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tradius: radius,\r\n\t\t\tdetail: detail\r\n\t\t};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\n\tTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\t\r\n\tTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\t\r\n\t\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\t\tthis.parameters.radius,\r\n\t\t\tthis.parameters.detail\r\n\t\t);\r\n\t\r\n\t\tgeometry.copy( this );\r\n\t\r\n\t\treturn geometry;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/geometries/ParametricGeometry.js\r\n\t\r\n\t/**\r\n\t * @author zz85 / https://github.com/zz85\r\n\t * Parametric Surfaces Geometry\r\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n\t *\r\n\t * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n\t *\r\n\t */\r\n\t\r\n\tTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\t\r\n\t\tTHREE.Geometry.call( this );\r\n\t\r\n\t\tthis.type = 'ParametricGeometry';\r\n\t\r\n\t\tthis.parameters = {\r\n\t\t\tfunc: func,\r\n\t\t\tslices: slices,\r\n\t\t\tstacks: stacks\r\n\t\t};\r\n\t\r\n\t\tvar verts = this.vertices;\r\n\t\tvar faces = this.faces;\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\t\r\n\t\tvar i, j, p;\r\n\t\tvar u, v;\r\n\t\r\n\t\tvar sliceCount = slices + 1;\r\n\t\r\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\t\r\n\t\t\tv = i / stacks;\r\n\t\r\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\t\r\n\t\t\t\tu = j / slices;\r\n\t\r\n\t\t\t\tp = func( u, v );\r\n\t\t\t\tverts.push( p );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar a, b, c, d;\r\n\t\tvar uva, uvb, uvc, uvd;\r\n\t\r\n\t\tfor ( i = 0; i < stacks; i ++ ) {\r\n\t\r\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\t\r\n\t\t\t\ta = i * sliceCount + j;\r\n\t\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\t\r\n\t\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\t\r\n\t\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\t// console.log(this);\r\n\t\r\n\t\t// magic bullet\r\n\t\t// var diff = this.mergeVertices();\r\n\t\t// console.log('removed ', diff, ' vertices by merging');\r\n\t\r\n\t\tthis.computeFaceNormals();\r\n\t\tthis.computeVertexNormals();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\n\tTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\t\r\n\t// File:src/extras/geometries/WireframeGeometry.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeGeometry = function ( geometry ) {\r\n\t\r\n\t\tTHREE.BufferGeometry.call( this );\r\n\t\r\n\t\tvar edge = [ 0, 0 ], hash = {};\r\n\t\tvar sortFunction = function ( a, b ) {\r\n\t\r\n\t\t\treturn a - b;\r\n\t\r\n\t\t};\r\n\t\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\t\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tif ( geometry.index !== null ) {\r\n\t\r\n\t\t\t\t// Indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar indices = geometry.index.array;\r\n\t\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\t\tvar numEdges = 0;\r\n\t\r\n\t\t\t\tif ( drawcalls.length === 0 ) {\r\n\t\r\n\t\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// allocate maximal size\r\n\t\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\t\r\n\t\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\t\r\n\t\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\t\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\t\r\n\t\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\t\tedge.sort( sortFunction );\r\n\t\r\n\t\t\t\t\t\t\tvar key = edge.toString();\r\n\t\r\n\t\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\t\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\t\tnumEdges ++;\r\n\t\r\n\t\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\t\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\t// non-indexed BufferGeometry\r\n\t\r\n\t\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\t\tvar numTris = numEdges / 3;\r\n\t\r\n\t\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\t\r\n\t\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\t\r\n\t\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\n\tTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\t\r\n\t// File:src/extras/helpers/AxisHelper.js\r\n\t\r\n\t/**\r\n\t * @author sroucheray / http://sroucheray.org/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.AxisHelper = function ( size ) {\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t0, 0, 0,  size, 0, 0,\r\n\t\t\t0, 0, 0,  0, size, 0,\r\n\t\t\t0, 0, 0,  0, 0, size\r\n\t\t] );\r\n\t\r\n\t\tvar colors = new Float32Array( [\r\n\t\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t\t0, 0, 1,  0, 0.6, 1\r\n\t\t] );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\t\r\n\t// File:src/extras/helpers/ArrowHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @author zz85 / http://github.com/zz85\r\n\t * @author bhouston / http://exocortex.com\r\n\t *\r\n\t * Creates an arrow for visualizing directions\r\n\t *\r\n\t * Parameters:\r\n\t *  dir - Vector3\r\n\t *  origin - Vector3\r\n\t *  length - Number\r\n\t *  color - color in hex value\r\n\t *  headLength - Number\r\n\t *  headWidth - Number\r\n\t */\r\n\t\r\n\tTHREE.ArrowHelper = ( function () {\r\n\t\r\n\t\tvar lineGeometry = new THREE.Geometry();\r\n\t\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\t\r\n\t\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\t\r\n\t\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\t\tif ( length === undefined ) length = 1;\r\n\t\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\t\tthis.position.copy( origin );\r\n\t\t\t\r\n\t\t\tif ( headLength < length ) {\r\n\t\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\t\tthis.add( this.line );\r\n\t\t\t}\r\n\t\r\n\t\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.cone );\r\n\t\r\n\t\t\tthis.setDirection( dir );\r\n\t\t\tthis.setLength( length, headLength, headWidth );\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\t\r\n\t\tvar axis = new THREE.Vector3();\r\n\t\tvar radians;\r\n\t\r\n\t\treturn function setDirection( dir ) {\r\n\t\r\n\t\t\t// dir is assumed to be normalized\r\n\t\r\n\t\t\tif ( dir.y > 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\t\r\n\t\t\t} else if ( dir.y < - 0.99999 ) {\r\n\t\r\n\t\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\t\r\n\t\t\t\tradians = Math.acos( dir.y );\r\n\t\r\n\t\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t}() );\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\t\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\t\r\n\t\tif ( headLength < length ){\r\n\t\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\t\tthis.line.updateMatrix();\r\n\t\t}\r\n\t\r\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\t\tthis.cone.position.y = length;\r\n\t\tthis.cone.updateMatrix();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\t\r\n\t\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\t\tthis.cone.material.color.set( color );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/BoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.BoxHelper = function ( object ) {\r\n\t\r\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\t\tvar positions = new Float32Array( 8 * 3 );\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\t\r\n\t\tif ( object !== undefined ) {\r\n\t\r\n\t\t\tthis.update( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\t\r\n\tTHREE.BoxHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar box = new THREE.Box3();\r\n\t\r\n\t\treturn function ( object ) {\r\n\t\r\n\t\t\tbox.setFromObject( object );\r\n\t\r\n\t\t\tif ( box.empty() ) return;\r\n\t\r\n\t\t\tvar min = box.min;\r\n\t\t\tvar max = box.max;\r\n\t\r\n\t\t\t/*\r\n\t\t\t  5____4\r\n\t\t\t1/___0/|\r\n\t\t\t| 6__|_7\r\n\t\t\t2/___3/\r\n\t\r\n\t\t\t0: max.x, max.y, max.z\r\n\t\t\t1: min.x, max.y, max.z\r\n\t\t\t2: min.x, min.y, max.z\r\n\t\t\t3: max.x, min.y, max.z\r\n\t\t\t4: max.x, max.y, min.z\r\n\t\t\t5: min.x, max.y, min.z\r\n\t\t\t6: min.x, min.y, min.z\r\n\t\t\t7: max.x, min.y, min.z\r\n\t\t\t*/\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\t\tvar array = position.array;\r\n\t\r\n\t\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\tthis.geometry.computeBoundingSphere();\r\n\t\r\n\t\t}\r\n\t\r\n\t} )();\r\n\t\r\n\t// File:src/extras/helpers/BoundingBoxHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\t// a helper to show the world-axis-aligned bounding box for an object\r\n\t\r\n\tTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.box = new THREE.Box3();\r\n\t\r\n\t\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\t\r\n\tTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.box.setFromObject( this.object );\r\n\t\r\n\t\tthis.box.size( this.scale );\r\n\t\r\n\t\tthis.box.center( this.position );\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/CameraHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t *\r\n\t *\t- shows frustum, line of sight and up of the camera\r\n\t *\t- suitable for fast updates\r\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\r\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n\t */\r\n\t\r\n\tTHREE.CameraHelper = function ( camera ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\t\r\n\t\tvar pointMap = {};\r\n\t\r\n\t\t// colors\r\n\t\r\n\t\tvar hexFrustum = 0xffaa00;\r\n\t\tvar hexCone = 0xff0000;\r\n\t\tvar hexUp = 0x00aaff;\r\n\t\tvar hexTarget = 0xffffff;\r\n\t\tvar hexCross = 0x333333;\r\n\t\r\n\t\t// near\r\n\t\r\n\t\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\t\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\t\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\t\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\t\r\n\t\t// far\r\n\t\r\n\t\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\t\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\t\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\t\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\t\r\n\t\t// sides\r\n\t\r\n\t\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\t\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\t\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\t\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\t\r\n\t\t// cone\r\n\t\r\n\t\taddLine( \"p\", \"n1\", hexCone );\r\n\t\taddLine( \"p\", \"n2\", hexCone );\r\n\t\taddLine( \"p\", \"n3\", hexCone );\r\n\t\taddLine( \"p\", \"n4\", hexCone );\r\n\t\r\n\t\t// up\r\n\t\r\n\t\taddLine( \"u1\", \"u2\", hexUp );\r\n\t\taddLine( \"u2\", \"u3\", hexUp );\r\n\t\taddLine( \"u3\", \"u1\", hexUp );\r\n\t\r\n\t\t// target\r\n\t\r\n\t\taddLine( \"c\", \"t\", hexTarget );\r\n\t\taddLine( \"p\", \"c\", hexCross );\r\n\t\r\n\t\t// cross\r\n\t\r\n\t\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\t\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\t\r\n\t\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\t\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\t\r\n\t\tfunction addLine( a, b, hex ) {\r\n\t\r\n\t\t\taddPoint( a, hex );\r\n\t\t\taddPoint( b, hex );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction addPoint( id, hex ) {\r\n\t\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\t\r\n\t\t\tif ( pointMap[ id ] === undefined ) {\r\n\t\r\n\t\t\t\tpointMap[ id ] = [];\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.camera = camera;\r\n\t\tthis.matrix = camera.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.pointMap = pointMap;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\t\r\n\tTHREE.CameraHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry, pointMap;\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar camera = new THREE.Camera();\r\n\t\r\n\t\tvar setPoint = function ( point, x, y, z ) {\r\n\t\r\n\t\t\tvector.set( x, y, z ).unproject( camera );\r\n\t\r\n\t\t\tvar points = pointMap[ point ];\r\n\t\r\n\t\t\tif ( points !== undefined ) {\r\n\t\r\n\t\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\t\r\n\t\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t};\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tgeometry = this.geometry;\r\n\t\t\tpointMap = this.pointMap;\r\n\t\r\n\t\t\tvar w = 1, h = 1;\r\n\t\r\n\t\t\t// we need just camera projection matrix\r\n\t\t\t// world matrix must be identity\r\n\t\r\n\t\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\t\r\n\t\t\t// center / target\r\n\t\r\n\t\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\t\r\n\t\t\t// near\r\n\t\r\n\t\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\t\r\n\t\t\t// far\r\n\t\r\n\t\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\t\r\n\t\t\t// up\r\n\t\r\n\t\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\t\r\n\t\t\t// cross\r\n\t\r\n\t\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\t\r\n\t\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\t\r\n\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/DirectionalLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t */\r\n\t\r\n\tTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tsize = size || 1;\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t\t);\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.lightPlane );\r\n\t\r\n\t\tgeometry = new THREE.Geometry();\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t);\r\n\t\r\n\t\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tthis.targetLine = new THREE.Line( geometry, material );\r\n\t\tthis.add( this.targetLine );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightPlane.geometry.dispose();\r\n\t\tthis.lightPlane.material.dispose();\r\n\t\tthis.targetLine.geometry.dispose();\r\n\t\tthis.targetLine.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar v3 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\t\tv3.subVectors( v2, v1 );\r\n\t\r\n\t\t\tthis.lightPlane.lookAt( v3 );\r\n\t\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/EdgesHelper.js\r\n\t\r\n\t/**\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t * @param object THREE.Mesh whose geometry will be used\r\n\t * @param hex line color\r\n\t * @param thresholdAngle the minimum angle (in degrees),\r\n\t * between the face normals of adjacent faces,\r\n\t * that is required to render an edge. A value of 10 means\r\n\t * an edge is only rendered if the angle is at least 10 degrees.\r\n\t */\r\n\t\r\n\tTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\t\r\n\t// File:src/extras/helpers/FaceNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\t// FaceNormalsHelper only supports THREE.Geometry\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\t\r\n\tTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\tvar idx = 0;\r\n\t\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\tvar normal = face.normal;\r\n\t\r\n\t\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t\t.applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/GridHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.GridHelper = function ( size, step ) {\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\t\r\n\t\tthis.color1 = new THREE.Color( 0x444444 );\r\n\t\tthis.color2 = new THREE.Color( 0x888888 );\r\n\t\r\n\t\tfor ( var i = - size; i <= size; i += step ) {\r\n\t\r\n\t\t\tgeometry.vertices.push(\r\n\t\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t\t);\r\n\t\r\n\t\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\t\r\n\t\t\tgeometry.colors.push( color, color, color, color );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\t\r\n\tTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\t\r\n\t\tthis.color1.set( colorCenterLine );\r\n\t\tthis.color2.set( colorGrid );\r\n\t\r\n\t\tthis.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/HemisphereLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\t\r\n\t\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\t\r\n\t\t}\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.lightSphere );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.lightSphere.geometry.dispose();\r\n\t\tthis.lightSphere.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/PointLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.matrix = this.light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\t/*\r\n\t\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\t\r\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\t\r\n\t\tvar d = light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.add( this.lightDistance );\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\t\r\n\tTHREE.PointLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.PointLightHelper.prototype.update = function () {\r\n\t\r\n\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t/*\r\n\t\tvar d = this.light.distance;\r\n\t\r\n\t\tif ( d === 0.0 ) {\r\n\t\r\n\t\t\tthis.lightDistance.visible = false;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\t\r\n\t\t}\r\n\t\t*/\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SkeletonHelper.js\r\n\t\r\n\t/**\r\n\t * @author Sean Griffin / http://twitter.com/sgrif\r\n\t * @author Michael Guerrero / http://realitymeltdown.com\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author ikerr / http://verold.com\r\n\t */\r\n\t\r\n\tTHREE.SkeletonHelper = function ( object ) {\r\n\t\r\n\t\tthis.bones = this.getBoneList( object );\r\n\t\r\n\t\tvar geometry = new THREE.Geometry();\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.dynamic = true;\r\n\t\r\n\t\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, material );\r\n\t\r\n\t\tthis.root = object;\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\tTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\t\r\n\t\tvar boneList = [];\r\n\t\r\n\t\tif ( object instanceof THREE.Bone ) {\r\n\t\r\n\t\t\tboneList.push( object );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\t\r\n\t\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn boneList;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SkeletonHelper.prototype.update = function () {\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\t\r\n\t\tvar boneMatrix = new THREE.Matrix4();\r\n\t\r\n\t\tvar j = 0;\r\n\t\r\n\t\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\t\r\n\t\t\tvar bone = this.bones[ i ];\r\n\t\r\n\t\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\t\r\n\t\t\t\tj += 2;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\t\r\n\t\tgeometry.computeBoundingSphere();\r\n\t\r\n\t};\r\n\t\r\n\t// File:src/extras/helpers/SpotLightHelper.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.SpotLightHelper = function ( light ) {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.light = light;\r\n\t\tthis.light.updateMatrixWorld();\r\n\t\r\n\t\tthis.matrix = light.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\t\r\n\t\tgeometry.translate( 0, - 0.5, 0 );\r\n\t\tgeometry.rotateX( - Math.PI / 2 );\r\n\t\r\n\t\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\t\r\n\t\tthis.cone = new THREE.Mesh( geometry, material );\r\n\t\tthis.add( this.cone );\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\t\r\n\t\tthis.cone.geometry.dispose();\r\n\t\tthis.cone.material.dispose();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.SpotLightHelper.prototype.update = function () {\r\n\t\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar vector2 = new THREE.Vector3();\r\n\t\r\n\t\treturn function () {\r\n\t\r\n\t\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\t\r\n\t\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\t\r\n\t\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\r\n\t\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\t\r\n\t\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\r\n\t\t};\r\n\t\r\n\t}();\r\n\t\r\n\t// File:src/extras/helpers/VertexNormalsHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t * @author WestLangley / http://github.com/WestLangley\r\n\t*/\r\n\t\r\n\tTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\t\r\n\t\tthis.object = object;\r\n\t\r\n\t\tthis.size = ( size !== undefined ) ? size : 1;\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\t\r\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar nNormals = 0;\r\n\t\r\n\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.faces.length * 3;\r\n\t\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\tnNormals = objGeometry.attributes.normal.count\r\n\t\r\n\t\t}\r\n\t\r\n\t\t//\r\n\t\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\t\r\n\t\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\t\r\n\t\tgeometry.addAttribute( 'position', positions );\r\n\t\r\n\t\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\t\r\n\t\t//\r\n\t\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t\tthis.update();\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\t\r\n\tTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\t\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar normalMatrix = new THREE.Matrix3();\r\n\t\r\n\t\treturn function update() {\r\n\t\r\n\t\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\t\r\n\t\t\tthis.object.updateMatrixWorld( true );\r\n\t\r\n\t\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\t\r\n\t\t\tvar matrixWorld = this.object.matrixWorld;\r\n\t\r\n\t\t\tvar position = this.geometry.attributes.position;\r\n\t\r\n\t\t\t//\r\n\t\r\n\t\t\tvar objGeometry = this.object.geometry;\r\n\t\r\n\t\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\t\r\n\t\t\t\tvar vertices = objGeometry.vertices;\r\n\t\r\n\t\t\t\tvar faces = objGeometry.faces;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\t\r\n\t\t\t\t\tvar face = faces[ i ];\r\n\t\r\n\t\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\t\r\n\t\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\t\r\n\t\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\t\r\n\t\t\t\tvar objPos = objGeometry.attributes.position;\r\n\t\r\n\t\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\t\r\n\t\t\t\tvar idx = 0;\r\n\t\r\n\t\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\t\r\n\t\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\t\r\n\t\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\t\r\n\t\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\t\r\n\t\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\t\r\n\t\t\t\t\tidx = idx + 1;\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tposition.needsUpdate = true;\r\n\t\r\n\t\t\treturn this;\r\n\t\r\n\t\t}\r\n\t\r\n\t}() );\r\n\t\r\n\t// File:src/extras/helpers/WireframeHelper.js\r\n\t\r\n\t/**\r\n\t * @author mrdoob / http://mrdoob.com/\r\n\t */\r\n\t\r\n\tTHREE.WireframeHelper = function ( object, hex ) {\r\n\t\r\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\t\r\n\t\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\r\n\t\tthis.matrix = object.matrixWorld;\r\n\t\tthis.matrixAutoUpdate = false;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\n\tTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\t\r\n\t// File:src/extras/objects/ImmediateRenderObject.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.ImmediateRenderObject = function () {\r\n\t\r\n\t\tTHREE.Object3D.call( this );\r\n\t\r\n\t\tthis.render = function ( renderCallback ) {};\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\n\tTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\t\r\n\t// File:src/extras/objects/MorphBlendMesh.js\r\n\t\r\n\t/**\r\n\t * @author alteredq / http://alteredqualia.com/\r\n\t */\r\n\t\r\n\tTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\t\r\n\t\tTHREE.Mesh.call( this, geometry, material );\r\n\t\r\n\t\tthis.animationsMap = {};\r\n\t\tthis.animationsList = [];\r\n\t\r\n\t\t// prepare default animation\r\n\t\t// (all frames played together in 1 second)\r\n\t\r\n\t\tvar numFrames = this.geometry.morphTargets.length;\r\n\t\r\n\t\tvar name = \"__default\";\r\n\t\r\n\t\tvar startFrame = 0;\r\n\t\tvar endFrame = numFrames - 1;\r\n\t\r\n\t\tvar fps = numFrames / 1;\r\n\t\r\n\t\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\t\tthis.setAnimationWeight( name, 1 );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\n\tTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\t\r\n\t\tvar animation = {\r\n\t\r\n\t\t\tstart: start,\r\n\t\t\tend: end,\r\n\t\r\n\t\t\tlength: end - start + 1,\r\n\t\r\n\t\t\tfps: fps,\r\n\t\t\tduration: ( end - start ) / fps,\r\n\t\r\n\t\t\tlastFrame: 0,\r\n\t\t\tcurrentFrame: 0,\r\n\t\r\n\t\t\tactive: false,\r\n\t\r\n\t\t\ttime: 0,\r\n\t\t\tdirection: 1,\r\n\t\t\tweight: 1,\r\n\t\r\n\t\t\tdirectionBackwards: false,\r\n\t\t\tmirroredLoop: false\r\n\t\r\n\t\t};\r\n\t\r\n\t\tthis.animationsMap[ name ] = animation;\r\n\t\tthis.animationsList.push( animation );\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\t\r\n\t\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\t\r\n\t\tvar firstAnimation, frameRanges = {};\r\n\t\r\n\t\tvar geometry = this.geometry;\r\n\t\r\n\t\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\t\tvar chunks = morph.name.match( pattern );\r\n\t\r\n\t\t\tif ( chunks && chunks.length > 1 ) {\r\n\t\r\n\t\t\t\tvar name = chunks[ 1 ];\r\n\t\r\n\t\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\t\r\n\t\t\t\tvar range = frameRanges[ name ];\r\n\t\r\n\t\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\t\tif ( i > range.end ) range.end = i;\r\n\t\r\n\t\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfor ( var name in frameRanges ) {\r\n\t\r\n\t\t\tvar range = frameRanges[ name ];\r\n\t\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\t\r\n\t\t}\r\n\t\r\n\t\tthis.firstAnimation = firstAnimation;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = 1;\r\n\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.direction = - 1;\r\n\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.fps = fps;\r\n\t\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.duration = duration;\r\n\t\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.weight = weight;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = time;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\t\r\n\t\tvar time = 0;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\ttime = animation.time;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn time;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\t\r\n\t\tvar duration = - 1;\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tduration = animation.duration;\r\n\t\r\n\t\t}\r\n\t\r\n\t\treturn duration;\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.time = 0;\r\n\t\t\tanimation.active = true;\r\n\t\r\n\t\t} else {\r\n\t\r\n\t\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\t\r\n\t\tvar animation = this.animationsMap[ name ];\r\n\t\r\n\t\tif ( animation ) {\r\n\t\r\n\t\t\tanimation.active = false;\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\tTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\t\r\n\t\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\t\r\n\t\t\tvar animation = this.animationsList[ i ];\r\n\t\r\n\t\t\tif ( ! animation.active ) continue;\r\n\t\r\n\t\t\tvar frameTime = animation.duration / animation.length;\r\n\t\r\n\t\t\tanimation.time += animation.direction * delta;\r\n\t\r\n\t\t\tif ( animation.mirroredLoop ) {\r\n\t\r\n\t\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\tanimation.direction *= - 1;\r\n\t\r\n\t\t\t\t\tif ( animation.time > animation.duration ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\t\tanimation.directionBackwards = true;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tif ( animation.time < 0 ) {\r\n\t\r\n\t\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\t\tanimation.directionBackwards = false;\r\n\t\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t}\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tanimation.time = animation.time % animation.duration;\r\n\t\r\n\t\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\t\tvar weight = animation.weight;\r\n\t\r\n\t\t\tif ( keyframe !== animation.currentFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\t\r\n\t\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\t\tanimation.currentFrame = keyframe;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\t\r\n\t\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\t\r\n\t\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\t\r\n\t\t\t} else {\r\n\t\r\n\t\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\t\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t};\r\n\t\r\n\t\r\n\t// Export the THREE object for **Node.js**, with\r\n\t// backwards-compatibility for the old `require()` API. If we're in\r\n\t// the browser, add `_` as a global object via a string identifier,\r\n\t// for Closure Compiler \"advanced\" mode.\r\n\tif (true) {\r\n\t  if (typeof module !== 'undefined' && module.exports) {\r\n\t    exports = module.exports = THREE;\r\n\t  }\r\n\t  exports.THREE = THREE;\r\n\t} else {\r\n\t  this['THREE'] = THREE;\r\n\t}\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// react-bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9d446f4ba207451d9eb2","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nReactDOM.render(\n  <App />\n, document.getElementById('react-app'));\n\n\n\n// WEBPACK FOOTER //\n// ./react/app.js","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/index.js\n// module id = 1\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var REACT_ELEMENT_TYPE = (typeof Symbol === 'function' &&\n    Symbol.for &&\n    Symbol.for('react.element')) ||\n    0xeac7;\n\n  var isValidElement = function(object) {\n    return typeof object === 'object' &&\n      object !== null &&\n      object.$$typeof === REACT_ELEMENT_TYPE;\n  };\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(isValidElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/index.js\n// module id = 2\n// module chunks = 0","'use strict';\n\nvar getVendorPropertyName = require('./getVendorPropertyName');\n\nmodule.exports = function(target, sources) {\n  var to = Object(target);\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  for (var nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n    var nextSource = arguments[nextIndex];\n    if (nextSource == null) {\n      continue;\n    }\n\n    var from = Object(nextSource);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n  }\n\n  var prefixed = {};\n  for (var key in to) {\n    prefixed[getVendorPropertyName(key)] = to[key]\n  }\n\n  return prefixed\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/appendVendorPrefix.js\n// module id = 3\n// module chunks = 0","'use strict';\n\nvar insertRule = require('./insertRule');\nvar vendorPrefix = require('./getVendorPrefix')();\nvar index = 0;\n\nmodule.exports = function(keyframes) {\n  // random name\n  var name = 'anim_' + (++index) + (+new Date);\n  var css = \"@\" + vendorPrefix + \"keyframes \" + name + \" {\";\n\n  for (var key in keyframes) {\n    css += key + \" {\";\n\n    for (var property in keyframes[key]) {\n      var part = \":\" + keyframes[key][property] + \";\";\n      // We do vendor prefix for every property\n      css += vendorPrefix + property + part;\n      css += property + part;\n    }\n\n    css += \"}\";\n  }\n\n  css += \"}\";\n\n  insertRule(css);\n\n  return name\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertKeyframesRule.js\n// module id = 4\n// module chunks = 0","\"use strict\";\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nfunction makeEmptyFunction(arg) {\n  return function () {\n    return arg;\n  };\n}\n\n/**\n * This function accepts and discards inputs; it has no side effects. This is\n * primarily useful idiomatically for overridable function endpoints which\n * always need to be callable, since JS lacks a null-call idiom ala Cocoa.\n */\nvar emptyFunction = function emptyFunction() {};\n\nemptyFunction.thatReturns = makeEmptyFunction;\nemptyFunction.thatReturnsFalse = makeEmptyFunction(false);\nemptyFunction.thatReturnsTrue = makeEmptyFunction(true);\nemptyFunction.thatReturnsNull = makeEmptyFunction(null);\nemptyFunction.thatReturnsThis = function () {\n  return this;\n};\nemptyFunction.thatReturnsArgument = function (arg) {\n  return arg;\n};\n\nmodule.exports = emptyFunction;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyFunction.js\n// module id = 5\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar emptyObject = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  Object.freeze(emptyObject);\n}\n\nmodule.exports = emptyObject;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/emptyObject.js\n// module id = 6\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/object-assign/index.js\n// module id = 7\n// module chunks = 0","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/index.js\n// module id = 8\n// module chunks = 0","import React, { Component } from 'react';\nimport STLViewer from '../../src/STLViewer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '#FF0000',\n      model: undefined\n    };\n\n    this.clickBlue = this.clickBlue.bind(this);\n    this.clickRed = this.clickRed.bind(this);\n  }\n\n  clickBlue(e) {\n    e.preventDefault();\n    this.setState({ color: '#0000FF' });\n  }\n\n  clickRed(e) {\n    e.preventDefault();\n    this.setState({ color: '#FF0000' });\n  }\n\n  onChange = ({ target }) => {\n    const { files } = target;\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(files[0]);\n    reader.onload = () => {\n      this.setState({ model: reader.result });\n    };\n  };\n\n  render() {\n    return (\n      <div>\n        <input id=\"image-file\" type=\"file\" onChange={this.onChange} />\n        <STLViewer\n          modelColor={this.state.color}\n          lights={[[0.5, 1, -1], [1, 1, 1]]}\n          rotate={true}\n          model={this.state.model}\n        />\n        <button onClick={this.clickRed}>red</button>\n        <button onClick={this.clickBlue}>blue</button>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ./react/containers/App.js","import ReactDOM from 'react-dom';\nimport THREE from './Three';\nlet OrbitControls = require('three-orbit-controls')(THREE);\n\nconst DIRECTIONAL_LIGHT = 'directionalLight';\n\nclass Paint {\n  constructor() {\n    this.loader = new THREE.STLLoader();\n    this.scene = new THREE.Scene();\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.reqNumber = 0;\n  }\n\n  init(context) {\n    this.component = context;\n    this.width = context.props.width;\n    this.height = context.props.height;\n    this.modelColor = context.props.modelColor;\n    this.backgroundColor = context.props.backgroundColor;\n    this.orbitControls = context.props.orbitControls;\n    this.rotate = context.props.rotate;\n    this.cameraX = context.props.cameraX;\n    this.cameraY = context.props.cameraY;\n    this.cameraZ = context.props.cameraZ;\n    this.rotationSpeeds = context.props.rotationSpeeds;\n    this.lights = context.props.lights;\n    this.lightColor = context.props.lightColor;\n    this.model = context.props.model;\n\n    if (this.mesh !== undefined) {\n      this.scene.remove(this.mesh);\n      this.mesh.geometry.dispose();\n      this.mesh.material.dispose();\n      this.scene.remove(this.grid);\n    }\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n    if (directionalLightObj) {\n      this.scene.remove(directionalLightObj);\n    }\n    const directionalLightObj0 = this.scene.getObjectByName(DIRECTIONAL_LIGHT + '0');\n    if (directionalLightObj0) {\n      this.scene.remove(directionalLightObj0);\n    }\n    const directionalLightObj1 = this.scene.getObjectByName(DIRECTIONAL_LIGHT + '1');\n    if (directionalLightObj1) {\n      this.scene.remove(directionalLightObj1);\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n\n    //Detector.addGetWebGLMessage();\n    this.distance = 10000;\n\n    // lights processing\n    const hasMultipleLights = this.lights.reduce(\n      (acc, item) => acc && Array.isArray(item),\n      true\n    );\n    if (hasMultipleLights) {\n      this.lights.forEach(this.addLight.bind(this));\n    } else {\n      this.addLight(this.lights);\n    }\n\n    this.reqNumber += 1;\n    this.addSTLToScene(this.reqNumber);\n  }\n\n  addLight(lights, index = 0) {\n    const directionalLight = new THREE.DirectionalLight(this.lightColor);\n    directionalLight.position.set(...lights);\n    directionalLight.name = DIRECTIONAL_LIGHT + index;\n    directionalLight.position.normalize();\n    this.scene.add(directionalLight);\n  }\n\n  loadSTLFromUrl(url, reqId) {\n    return new Promise(resolve => {\n      this.loader.crossOrigin = '';\n      this.loader.loadFromUrl(url, geometry => {\n        if (this.reqNumber !== reqId) {\n          return;\n        }\n        resolve(geometry);\n      });\n    });\n  }\n\n  loadFromFile(file) {\n    return new Promise(resolve => {\n      this.loader.loadFromFile(file, geometry => {\n        resolve(geometry);\n      });\n    });\n  }\n\n  addSTLToScene(reqId) {\n    let loadPromise;\n    if (typeof this.model === 'string') {\n      loadPromise = this.loadSTLFromUrl(this.model, reqId);\n    } else if (this.model instanceof ArrayBuffer) {\n      loadPromise = this.loadFromFile(this.model);\n    } else {\n      return Promise.resolve(null);\n    }\n    return loadPromise.then(geometry => {\n      // Calculate mesh noramls for MeshLambertMaterial.\n      geometry.computeFaceNormals();\n      geometry.computeVertexNormals();\n\n      // Center the object\n      geometry.center();\n\n      let material = new THREE.MeshLambertMaterial({\n        overdraw: true,\n        color: this.modelColor\n      });\n\n      if (geometry.hasColors) {\n        material = new THREE.MeshPhongMaterial({\n          opacity: geometry.alpha,\n          vertexColors: THREE.VertexColors\n        });\n      }\n\n      this.mesh = new THREE.Mesh(geometry, material);\n      // Set the object's dimensions\n      geometry.computeBoundingBox();\n      this.xDims = geometry.boundingBox.max.x - geometry.boundingBox.min.x;\n      this.yDims = geometry.boundingBox.max.y - geometry.boundingBox.min.y;\n      this.zDims = geometry.boundingBox.max.z - geometry.boundingBox.min.z;\n\n      if (this.rotate) {\n        this.mesh.rotation.x = this.rotationSpeeds[0];\n        this.mesh.rotation.y = this.rotationSpeeds[1];\n        this.mesh.rotation.z = this.rotationSpeeds[2];\n      }\n\n      this.scene.add(this.mesh);\n\n      this.addCamera();\n      this.addInteractionControls();\n      this.addToReactComponent();\n\n      // Start the animation\n      this.animate();\n    });\n  }\n\n  addCamera() {\n    // Add the camera\n    this.camera = new THREE.PerspectiveCamera(\n      30,\n      this.width / this.height,\n      1,\n      this.distance\n    );\n\n    if (this.cameraZ === null) {\n      this.cameraZ = Math.max(this.xDims * 3, this.yDims * 3, this.zDims * 3);\n    }\n\n    this.camera.position.set(this.cameraX, this.cameraY, this.cameraZ);\n\n    this.scene.add(this.camera);\n\n    this.camera.lookAt(this.mesh);\n\n    this.renderer.set;\n    this.renderer.setSize(this.width, this.height);\n    this.renderer.setClearColor(this.backgroundColor, 1);\n  }\n\n  addInteractionControls() {\n    // Add controls for mouse interaction\n    if (this.orbitControls) {\n      this.controls = new OrbitControls(\n        this.camera,\n        ReactDOM.findDOMNode(this.component)\n      );\n      this.controls.enableKeys = false;\n      this.controls.addEventListener('change', this.orbitRender.bind(this));\n    }\n  }\n\n  addToReactComponent() {\n    // Add to the React Component\n    ReactDOM.findDOMNode(this.component).replaceChild(\n      this.renderer.domElement,\n      ReactDOM.findDOMNode(this.component).firstChild\n    );\n  }\n\n  /**\n   * Animate the scene\n   * @returns {void}\n   */\n  animate() {\n    // note: three.js includes requestAnimationFrame shim\n    if (this.rotate) {\n      this.animationRequestId = requestAnimationFrame(this.animate.bind(this));\n    }\n\n    if (this.orbitControls) {\n      this.controls.update();\n    }\n    this.render();\n  }\n\n  /**\n   * Render the scene after turning off the rotation\n   * @returns {void}\n   */\n  orbitRender() {\n    if (this.rotate) {\n      this.rotate = false;\n    }\n\n    this.render();\n  }\n\n  /**\n   * Deallocate Mesh, renderer context.\n   * @returns {void}\n   */\n  clean() {\n    if (this.mesh !== undefined) {\n      this.mesh.geometry.dispose();\n      this.mesh.material.dispose();\n      this.scene.remove(this.mesh);\n      delete this.mesh;\n    }\n    const directionalLightObj = this.scene.getObjectByName(DIRECTIONAL_LIGHT);\n    if (directionalLightObj) {\n      this.scene.remove(directionalLightObj);\n    }\n\n    if (this.animationRequestId) {\n      cancelAnimationFrame(this.animationRequestId);\n    }\n    this.renderer.dispose();\n    this.renderer.forceContextLoss();\n  }\n\n  /**\n   * Render the scene\n   * @returns {void}\n   */\n  render() {\n    if (this.mesh && this.rotate) {\n      this.mesh.rotation.x += this.rotationSpeeds[0];\n      this.mesh.rotation.y += this.rotationSpeeds[1];\n      this.mesh.rotation.z += this.rotationSpeeds[2];\n    }\n\n    this.renderer.render(this.scene, this.camera);\n  }\n}\n\nexport default Paint;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Paint.js","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ScaleLoader } from 'halogenium';\nimport Paint from './Paint';\n\nclass STLViewer extends Component {\n  static propTypes = {\n    className: PropTypes.string,\n    url: PropTypes.string,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    backgroundColor: PropTypes.string,\n    modelColor: PropTypes.string,\n    rotate: PropTypes.bool,\n    orbitControls: PropTypes.bool,\n    cameraX: PropTypes.number,\n    cameraY: PropTypes.number,\n    cameraZ: PropTypes.number,\n    lights: PropTypes.array,\n    lightColor: PropTypes.string,\n    rotationSpeeds: PropTypes.arrayOf(PropTypes.number),\n    model: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.instanceOf(ArrayBuffer)\n    ]).isRequired\n  };\n\n  static defaultProps = {\n    backgroundColor: '#EAEAEA',\n    modelColor: '#B92C2C',\n    height: 400,\n    width: 400,\n    rotate: true,\n    orbitControls: true,\n    cameraX: 0,\n    cameraY: 0,\n    cameraZ: null,\n    lights: [0, 0, 1],\n    lightColor: '#ffffff',\n    rotationSpeeds: [0, 0, 0.02],\n    model: undefined\n  };\n\n  componentDidMount() {\n    this.paint = new Paint();\n    this.paint.init(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    return JSON.stringify(nextProps) !== JSON.stringify(this.props);\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.props = nextProps;\n    this.paint.init(this);\n  }\n\n  componentWillUnmount() {\n    this.paint.clean();\n    delete this.paint;\n  }\n\n  render() {\n    const { width, height, modelColor } = this.props;\n    return (\n      <div\n        className={this.props.className}\n        style={{\n          width: width,\n          height: height,\n          overflow: 'hidden'\n        }}\n      >\n        <div\n          style={{\n            height: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}\n        >\n          <ScaleLoader color={modelColor} size=\"16px\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nmodule.exports = STLViewer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/STLViewer.js","var THREE = require('three');\n\n//\n// STL Loader added\n//\n/**\n * @author aleeper / http://adamleeper.com/\n * @author mrdoob / http://mrdoob.com/\n * @author gero3 / https://github.com/gero3\n *\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8. Seems to work for the examples...\n *\n * Usage:\n *  var loader = new THREE.STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: THREE.VertexColors });\n *  } else { .... }\n *  var mesh = new THREE.Mesh( geometry, material );\n */\n\nTHREE.STLLoader = function(manager) {\n  this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.STLLoader.prototype = {\n  constructor: THREE.STLLoader,\n\n  loadFromUrl: function(url, onLoad, onProgress, onError) {\n    var scope = this;\n\n    var loader = new THREE.XHRLoader(scope.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setResponseType('arraybuffer');\n    loader.load(\n      url,\n      function(text) {\n        onLoad(scope.parse(text));\n      },\n      onProgress,\n      onError\n    );\n  },\n\n  loadFromFile: function(buffer, onLoad) {\n    var scope = this;\n    onLoad(scope.parse(buffer));\n  },\n\n  parse: function(data) {\n    var isBinary = function() {\n      var expect, face_size, n_faces, reader;\n      reader = new DataView(binData);\n      face_size = (32 / 8) * 3 + (32 / 8) * 3 * 3 + 16 / 8;\n      n_faces = reader.getUint32(80, true);\n      expect = 80 + 32 / 8 + n_faces * face_size;\n\n      if (expect === reader.byteLength) {\n        return true;\n      }\n\n      // some binary files will have different size from expected,\n      // checking characters higher than ASCII to confirm is binary\n      var fileLength = reader.byteLength;\n      for (var index = 0; index < fileLength; index++) {\n        if (reader.getUint8(index, false) > 127) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    var binData = this.ensureBinary(data);\n\n    return isBinary()\n      ? this.parseBinary(binData)\n      : this.parseASCII(this.ensureString(data));\n  },\n\n  parseBinary: function(data) {\n    var reader = new DataView(data);\n    var faces = reader.getUint32(80, true);\n\n    var r,\n      g,\n      b,\n      hasColors = false,\n      colors;\n    var defaultR, defaultG, defaultB, alpha;\n\n    // process STL header\n    // check for default color in header (\"COLOR=rgba\" sequence).\n\n    for (var index = 0; index < 80 - 10; index++) {\n      if (\n        reader.getUint32(index, false) == 0x434f4c4f /*COLO*/ &&\n        reader.getUint8(index + 4) == 0x52 /*'R'*/ &&\n        reader.getUint8(index + 5) == 0x3d /*'='*/\n      ) {\n        hasColors = true;\n        colors = new Float32Array(faces * 3 * 3);\n\n        defaultR = reader.getUint8(index + 6) / 255;\n        defaultG = reader.getUint8(index + 7) / 255;\n        defaultB = reader.getUint8(index + 8) / 255;\n        alpha = reader.getUint8(index + 9) / 255;\n      }\n    }\n\n    var dataOffset = 84;\n    var faceLength = 12 * 4 + 2;\n\n    var offset = 0;\n\n    var geometry = new THREE.BufferGeometry();\n\n    var vertices = new Float32Array(faces * 3 * 3);\n    var normals = new Float32Array(faces * 3 * 3);\n\n    for (var face = 0; face < faces; face++) {\n      var start = dataOffset + face * faceLength;\n      var normalX = reader.getFloat32(start, true);\n      var normalY = reader.getFloat32(start + 4, true);\n      var normalZ = reader.getFloat32(start + 8, true);\n\n      if (hasColors) {\n        var packedColor = reader.getUint16(start + 48, true);\n\n        if ((packedColor & 0x8000) === 0) {\n          // facet has its own unique color\n\n          r = (packedColor & 0x1f) / 31;\n          g = ((packedColor >> 5) & 0x1f) / 31;\n          b = ((packedColor >> 10) & 0x1f) / 31;\n        } else {\n          r = defaultR;\n          g = defaultG;\n          b = defaultB;\n        }\n      }\n\n      for (var i = 1; i <= 3; i++) {\n        var vertexstart = start + i * 12;\n\n        vertices[offset] = reader.getFloat32(vertexstart, true);\n        vertices[offset + 1] = reader.getFloat32(vertexstart + 4, true);\n        vertices[offset + 2] = reader.getFloat32(vertexstart + 8, true);\n\n        normals[offset] = normalX;\n        normals[offset + 1] = normalY;\n        normals[offset + 2] = normalZ;\n\n        if (hasColors) {\n          colors[offset] = r;\n          colors[offset + 1] = g;\n          colors[offset + 2] = b;\n        }\n\n        offset += 3;\n      }\n    }\n\n    geometry.addAttribute('position', new THREE.BufferAttribute(vertices, 3));\n    geometry.addAttribute('normal', new THREE.BufferAttribute(normals, 3));\n\n    if (hasColors) {\n      geometry.addAttribute('color', new THREE.BufferAttribute(colors, 3));\n      geometry.hasColors = true;\n      geometry.alpha = alpha;\n    }\n\n    return geometry;\n  },\n\n  parseASCII: function(data) {\n    var geometry,\n      length,\n      normal,\n      patternFace,\n      patternNormal,\n      patternVertex,\n      result,\n      text;\n    geometry = new THREE.Geometry();\n    patternFace = /facet([\\s\\S]*?)endfacet/g;\n\n    while ((result = patternFace.exec(data)) !== null) {\n      text = result[0];\n      patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n      while ((result = patternNormal.exec(text)) !== null) {\n        normal = new THREE.Vector3(\n          parseFloat(result[1]),\n          parseFloat(result[3]),\n          parseFloat(result[5])\n        );\n      }\n\n      patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n      while ((result = patternVertex.exec(text)) !== null) {\n        geometry.vertices.push(\n          new THREE.Vector3(\n            parseFloat(result[1]),\n            parseFloat(result[3]),\n            parseFloat(result[5])\n          )\n        );\n      }\n\n      length = geometry.vertices.length;\n\n      geometry.faces.push(\n        new THREE.Face3(length - 3, length - 2, length - 1, normal)\n      );\n    }\n\n    geometry.computeBoundingBox();\n    geometry.computeBoundingSphere();\n\n    return geometry;\n  },\n\n  ensureString: function(buf) {\n    if (typeof buf !== 'string') {\n      var array_buffer = new Uint8Array(buf);\n      var str = '';\n      for (var i = 0; i < buf.byteLength; i++) {\n        str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n      }\n      return str;\n    } else {\n      return buf;\n    }\n  },\n\n  ensureBinary: function(buf) {\n    if (typeof buf === 'string') {\n      var array_buffer = new Uint8Array(buf.length);\n      for (var i = 0; i < buf.length; i++) {\n        array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n      }\n      return array_buffer.buffer || array_buffer;\n    } else {\n      return buf;\n    }\n  }\n};\n\nif (typeof DataView === 'undefined') {\n  DataView = function(buffer, byteOffset, byteLength) {\n    this.buffer = buffer;\n    this.byteOffset = byteOffset || 0;\n    this.byteLength = byteLength || buffer.byteLength || buffer.length;\n    this._isString = typeof buffer === 'string';\n  };\n\n  DataView.prototype = {\n    _getCharCodes: function(buffer, start, length) {\n      start = start || 0;\n      length = length || buffer.length;\n      var end = start + length;\n      var codes = [];\n      for (var i = start; i < end; i++) {\n        codes.push(buffer.charCodeAt(i) & 0xff);\n      }\n      return codes;\n    },\n\n    _getBytes: function(length, byteOffset, littleEndian) {\n      var result;\n\n      // Handle the lack of endianness\n      if (littleEndian === undefined) {\n        littleEndian = this._littleEndian;\n      }\n\n      // Handle the lack of byteOffset\n      if (byteOffset === undefined) {\n        byteOffset = this.byteOffset;\n      } else {\n        byteOffset = this.byteOffset + byteOffset;\n      }\n\n      if (length === undefined) {\n        length = this.byteLength - byteOffset;\n      }\n\n      // Error Checking\n      if (typeof byteOffset !== 'number') {\n        throw new TypeError('DataView byteOffset is not a number');\n      }\n\n      if (length < 0 || byteOffset + length > this.byteLength) {\n        throw new Error(\n          'DataView length or (byteOffset+length) value is out of bounds'\n        );\n      }\n\n      if (this.isString) {\n        result = this._getCharCodes(\n          this.buffer,\n          byteOffset,\n          byteOffset + length\n        );\n      } else {\n        result = this.buffer.slice(byteOffset, byteOffset + length);\n      }\n\n      if (!littleEndian && length > 1) {\n        if (!(result instanceof Array)) {\n          result = Array.prototype.slice.call(result);\n        }\n\n        result.reverse();\n      }\n\n      return result;\n    },\n\n    // Compatibility functions on a String Buffer\n\n    getFloat64: function(byteOffset, littleEndian) {\n      var b = this._getBytes(8, byteOffset, littleEndian),\n        sign = 1 - 2 * (b[7] >> 7),\n        exponent =\n          ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\n        // Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n        mantissa =\n          (b[6] & 0x0f) * Math.pow(2, 48) +\n          b[5] * Math.pow(2, 40) +\n          b[4] * Math.pow(2, 32) +\n          b[3] * Math.pow(2, 24) +\n          b[2] * Math.pow(2, 16) +\n          b[1] * Math.pow(2, 8) +\n          b[0];\n\n      if (exponent === 1024) {\n        if (mantissa !== 0) {\n          return NaN;\n        } else {\n          return sign * Infinity;\n        }\n      }\n\n      if (exponent === -1023) {\n        // Denormalized\n        return sign * mantissa * Math.pow(2, -1022 - 52);\n      }\n\n      return sign * (1 + mantissa * Math.pow(2, -52)) * Math.pow(2, exponent);\n    },\n\n    getFloat32: function(byteOffset, littleEndian) {\n      var b = this._getBytes(4, byteOffset, littleEndian),\n        sign = 1 - 2 * (b[3] >> 7),\n        exponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\n        mantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\n\n      if (exponent === 128) {\n        if (mantissa !== 0) {\n          return NaN;\n        } else {\n          return sign * Infinity;\n        }\n      }\n\n      if (exponent === -127) {\n        // Denormalized\n        return sign * mantissa * Math.pow(2, -126 - 23);\n      }\n\n      return sign * (1 + mantissa * Math.pow(2, -23)) * Math.pow(2, exponent);\n    },\n\n    getInt32: function(byteOffset, littleEndian) {\n      var b = this._getBytes(4, byteOffset, littleEndian);\n      return (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\n    },\n\n    getUint32: function(byteOffset, littleEndian) {\n      return this.getInt32(byteOffset, littleEndian) >>> 0;\n    },\n\n    getInt16: function(byteOffset, littleEndian) {\n      return (this.getUint16(byteOffset, littleEndian) << 16) >> 16;\n    },\n\n    getUint16: function(byteOffset, littleEndian) {\n      var b = this._getBytes(2, byteOffset, littleEndian);\n      return (b[1] << 8) | b[0];\n    },\n\n    getInt8: function(byteOffset) {\n      return (this.getUint8(byteOffset) << 24) >> 24;\n    },\n\n    getUint8: function(byteOffset) {\n      return this._getBytes(1, byteOffset)[0];\n    }\n  };\n}\n\nmodule.exports = THREE;\n\n\n\n// WEBPACK FOOTER //\n// ./src/Three.js","'use strict';\n\nmodule.exports = document.createElement('div').style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/builtinStyle.js\n// module id = 13\n// module chunks = 0","'use strict';\n\nvar cssVendorPrefix;\n\nmodule.exports = function() {\n\n  if (cssVendorPrefix) return cssVendorPrefix;\n\n  var styles = window.getComputedStyle(document.documentElement, '');\n  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || (styles.OLink === '' && ['', 'o']))[1];\n\n  return cssVendorPrefix = '-' + pre + '-';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPrefix.js\n// module id = 14\n// module chunks = 0","'use strict';\n\nvar builtinStyle = require('./builtinStyle');\nvar prefixes = ['Moz', 'Webkit', 'O', 'ms'];\nvar domVendorPrefix;\n\n// Helper function to get the proper vendor property name. (transition => WebkitTransition)\nmodule.exports = function(prop, isSupportTest) {\n\n  var vendorProp;\n  if (prop in builtinStyle) return prop;\n\n  var UpperProp = prop.charAt(0).toUpperCase() + prop.substr(1);\n\n  if (domVendorPrefix) {\n\n    vendorProp = domVendorPrefix + UpperProp;\n    if (vendorProp in builtinStyle) {\n      return vendorProp;\n    }\n  } else {\n\n    for (var i = 0; i < prefixes.length; ++i) {\n      vendorProp = prefixes[i] + UpperProp;\n      if (vendorProp in builtinStyle) {\n        domVendorPrefix = prefixes[i];\n        return vendorProp;\n      }\n    }\n  }\n\n  // if support test, not fallback to origin prop name\n  if (!isSupportTest) {\n    return prop;\n  }\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/getVendorPropertyName.js\n// module id = 15\n// module chunks = 0","'use strict';\n\nvar extraSheet;\n\nmodule.exports = function(css) {\n\n  if (!extraSheet) {\n    // First time, create an extra stylesheet for adding rules\n    extraSheet = document.createElement('style');\n    document.getElementsByTagName('head')[0].appendChild(extraSheet);\n    // Keep reference to actual StyleSheet object (`styleSheet` for IE < 9)\n    extraSheet = extraSheet.sheet || extraSheet.styleSheet;\n  }\n\n  var index = (extraSheet.cssRules || extraSheet.rules).length;\n  extraSheet.insertRule(css, index);\n\n  return extraSheet;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/domkit/insertRule.js\n// module id = 16\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar emptyFunction = require('./emptyFunction');\n\n/**\n * Upstream version of event listener. Does not take into account specific\n * nature of platform.\n */\nvar EventListener = {\n  /**\n   * Listen to DOM events during the bubble phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  listen: function listen(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, false);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, false);\n        }\n      };\n    } else if (target.attachEvent) {\n      target.attachEvent('on' + eventType, callback);\n      return {\n        remove: function remove() {\n          target.detachEvent('on' + eventType, callback);\n        }\n      };\n    }\n  },\n\n  /**\n   * Listen to DOM events during the capture phase.\n   *\n   * @param {DOMEventTarget} target DOM element to register listener on.\n   * @param {string} eventType Event type, e.g. 'click' or 'mouseover'.\n   * @param {function} callback Callback function.\n   * @return {object} Object with a `remove` method.\n   */\n  capture: function capture(target, eventType, callback) {\n    if (target.addEventListener) {\n      target.addEventListener(eventType, callback, true);\n      return {\n        remove: function remove() {\n          target.removeEventListener(eventType, callback, true);\n        }\n      };\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error('Attempted to listen to events during the capture phase on a ' + 'browser that does not support the capture phase. Your application ' + 'will not receive some events.');\n      }\n      return {\n        remove: emptyFunction\n      };\n    }\n  },\n\n  registerDefault: function registerDefault() {}\n};\n\nmodule.exports = EventListener;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/EventListener.js\n// module id = 17\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\n/**\n * Simple, lightweight module assisting with the detection and context of\n * Worker. Helps avoid circular dependencies and allows code to reason about\n * whether or not they are in a Worker, even if they never include the main\n * `ReactWorker` dependency.\n */\nvar ExecutionEnvironment = {\n\n  canUseDOM: canUseDOM,\n\n  canUseWorkers: typeof Worker !== 'undefined',\n\n  canUseEventListeners: canUseDOM && !!(window.addEventListener || window.attachEvent),\n\n  canUseViewport: canUseDOM && !!window.screen,\n\n  isInWorker: !canUseDOM // For now, this is true - might change in the future.\n\n};\n\nmodule.exports = ExecutionEnvironment;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/ExecutionEnvironment.js\n// module id = 18\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nvar isTextNode = require('./isTextNode');\n\n/*eslint-disable no-bitwise */\n\n/**\n * Checks if a given DOM node contains or is another DOM node.\n */\nfunction containsNode(outerNode, innerNode) {\n  if (!outerNode || !innerNode) {\n    return false;\n  } else if (outerNode === innerNode) {\n    return true;\n  } else if (isTextNode(outerNode)) {\n    return false;\n  } else if (isTextNode(innerNode)) {\n    return containsNode(outerNode, innerNode.parentNode);\n  } else if ('contains' in outerNode) {\n    return outerNode.contains(innerNode);\n  } else if (outerNode.compareDocumentPosition) {\n    return !!(outerNode.compareDocumentPosition(innerNode) & 16);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = containsNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/containsNode.js\n// module id = 19\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * @param {DOMElement} node input/textarea to focus\n */\n\nfunction focusNode(node) {\n  // IE8 can throw \"Can't move focus to the control because it is invisible,\n  // not enabled, or of a type that does not accept the focus.\" for all kinds of\n  // reasons that are too expensive and fragile to test.\n  try {\n    node.focus();\n  } catch (e) {}\n}\n\nmodule.exports = focusNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/focusNode.js\n// module id = 20\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/* eslint-disable fb-www/typeof-undefined */\n\n/**\n * Same as document.activeElement but wraps in a try-catch block. In IE it is\n * not safe to call document.activeElement if there is nothing focused.\n *\n * The activeElement will be null only if the document or document body is not\n * yet defined.\n *\n * @param {?DOMDocument} doc Defaults to current document.\n * @return {?DOMElement}\n */\nfunction getActiveElement(doc) /*?DOMElement*/{\n  doc = doc || (typeof document !== 'undefined' ? document : undefined);\n  if (typeof doc === 'undefined') {\n    return null;\n  }\n  try {\n    return doc.activeElement || doc.body;\n  } catch (e) {\n    return doc.body;\n  }\n}\n\nmodule.exports = getActiveElement;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/getActiveElement.js\n// module id = 21\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar validateFormat = function validateFormat(format) {};\n\nif (process.env.NODE_ENV !== 'production') {\n  validateFormat = function validateFormat(format) {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  };\n}\n\nfunction invariant(condition, format, a, b, c, d, e, f) {\n  validateFormat(format);\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(format.replace(/%s/g, function () {\n        return args[argIndex++];\n      }));\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n}\n\nmodule.exports = invariant;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/invariant.js\n// module id = 22\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM node.\n */\nfunction isNode(object) {\n  var doc = object ? object.ownerDocument || object : document;\n  var defaultView = doc.defaultView || window;\n  return !!(object && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nmodule.exports = isNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isNode.js\n// module id = 23\n// module chunks = 0","'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar isNode = require('./isNode');\n\n/**\n * @param {*} object The object to check.\n * @return {boolean} Whether or not the object is a DOM text node.\n */\nfunction isTextNode(object) {\n  return isNode(object) && object.nodeType == 3;\n}\n\nmodule.exports = isTextNode;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/isTextNode.js\n// module id = 24\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n * \n */\n\n/*eslint-disable no-self-compare */\n\n'use strict';\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x, y) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = shallowEqual;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fbjs/lib/shallowEqual.js\n// module id = 25\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    transform: 'scale(0.75)',\n    opacity: 0.2\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BeatLoader = function (_Component) {\n  _inherits(BeatLoader, _Component);\n\n  function BeatLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BeatLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BeatLoader.__proto__ || Object.getPrototypeOf(BeatLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.7s', (i % 2 ? 0 : 0.35) + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BeatLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle(1) }),\n          _react2.default.createElement('div', { style: this.getStyle(2) }),\n          _react2.default.createElement('div', { style: this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BeatLoader;\n}(_react.Component);\n\nBeatLoader.propTypes = propTypes;\nBeatLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = BeatLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BeatLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BeatLoader.js\n// module id = 26\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar keyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n};\n\nvar animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar BounceLoader = function (_Component) {\n  _inherits(BounceLoader, _Component);\n\n  function BounceLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BounceLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BounceLoader.__proto__ || Object.getPrototypeOf(BounceLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        borderRadius: '100%',\n        opacity: 0.6,\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '2s', i === 1 ? '1s' : '0s', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)({\n        width: _this.props.size,\n        height: _this.props.size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(BounceLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle() },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return BounceLoader;\n}(_react.Component);\n\nBounceLoader.propTypes = propTypes;\nBounceLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px'\n};\nexports.default = BounceLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=BounceLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/BounceLoader.js\n// module id = 27\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg) scale(1)'\n  },\n  '50%': {\n    transform: 'rotate(180deg) scale(0.8)'\n  },\n  '100%': {\n    transform: 'rotate(360deg) scale(1)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ClipLoader = function (_Component) {\n  _inherits(ClipLoader, _Component);\n\n  function ClipLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ClipLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ClipLoader.__proto__ || Object.getPrototypeOf(ClipLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        width: _this.props.size,\n        height: _this.props.size,\n        border: '2px solid',\n        borderColor: _this.props.color,\n        borderBottomColor: 'transparent',\n        borderRadius: '100%',\n        background: 'transparent !important',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.75s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getBallStyle(i), _this.getAnimationStyle(), {\n        display: 'inline-block'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(ClipLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: this.getStyle() })\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return ClipLoader;\n}(_react.Component);\n\nClipLoader.propTypes = propTypes;\nClipLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '35px'\n};\nexports.default = ClipLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ClipLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ClipLoader.js\n// module id = 28\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rotateKeyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var bounceKeyframes = {\n  '0%, 100%': {\n    transform: 'scale(0)'\n  },\n  '50%': {\n    transform: 'scale(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rotateAnimationName = (0, _insertKeyframesRule2.default)(rotateKeyframes);\n\n/**\n * @type {String}\n */\nvar bounceAnimationName = (0, _insertKeyframesRule2.default)(bounceKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar DotLoader = function (_Component) {\n  _inherits(DotLoader, _Component);\n\n  function DotLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, DotLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = DotLoader.__proto__ || Object.getPrototypeOf(DotLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        backgroundColor: _this.props.color,\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i === 0 ? rotateAnimationName : bounceAnimationName, '2s', i === 2 ? '-1s' : '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var ballSize = size / 2;\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(ballSize), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: i % 2 ? 0 : 'auto',\n          bottom: i % 2 ? 'auto' : 0,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getAnimationStyle(i), {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(DotLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return DotLoader;\n}(_react.Component);\n\nDotLoader.propTypes = propTypes;\nDotLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = DotLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=DotLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/DotLoader.js\n// module id = 29\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '50%': {\n    opacity: 0.3\n  },\n  '100%': {\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar FadeLoader = function (_Component) {\n  _inherits(FadeLoader, _Component);\n\n  function FadeLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, FadeLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = FadeLoader.__proto__ || Object.getPrototypeOf(FadeLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1.2s', i * 0.12 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getPosStyle = function (i) {\n      var radius = 20;\n      var quarter = radius / 2 + radius / 5.5;\n\n      var lines = {\n        l1: {\n          top: radius,\n          left: 0\n        },\n        l2: {\n          top: quarter,\n          left: quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l3: {\n          top: 0,\n          left: radius,\n          transform: 'rotate(90deg)'\n        },\n        l4: {\n          top: -quarter,\n          left: quarter,\n          transform: 'rotate(45deg)'\n        },\n        l5: {\n          top: -radius,\n          left: 0\n        },\n        l6: {\n          top: -quarter,\n          left: -quarter,\n          transform: 'rotate(-45deg)'\n        },\n        l7: {\n          top: 0,\n          left: -radius,\n          transform: 'rotate(90deg)'\n        },\n        l8: {\n          top: quarter,\n          left: -quarter,\n          transform: 'rotate(45deg)'\n        }\n      };\n\n      return lines['l' + i];\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getPosStyle(i), _this.getAnimationStyle(i), {\n        position: 'absolute',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(FadeLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return FadeLoader;\n}(_react.Component);\n\nFadeLoader.propTypes = propTypes;\nFadeLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  height: '15px',\n  width: '5px',\n  margin: '2px',\n  radius: '2px'\n};\nexports.default = FadeLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=FadeLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/FadeLoader.js\n// module id = 30\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '50%': {\n    transform: 'scale(0.5)',\n    opacity: 0.7\n  },\n  '100%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\n/**\n * @param  {Number} top\n * @return {Number}\n */\nfunction random(top) {\n  return Math.random() * top;\n}\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar GridLoader = function (_Component) {\n  _inherits(GridLoader, _Component);\n\n  function GridLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, GridLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = GridLoader.__proto__ || Object.getPrototypeOf(GridLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animationDuration = random(100) / 100 + 0.6 + 's';\n      var animationDelay = random(100) / 100 - 0.2 + 's';\n\n      var animation = [animationName, animationDuration, animationDelay, 'infinite', 'ease'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(GridLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var style = {\n          width: parseFloat(this.props.size) * 3 + parseFloat(this.props.margin) * 6,\n          fontSize: 0\n        };\n\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) }),\n            _react2.default.createElement('div', { style: this.getStyle(3) }),\n            _react2.default.createElement('div', { style: this.getStyle(4) }),\n            _react2.default.createElement('div', { style: this.getStyle(5) }),\n            _react2.default.createElement('div', { style: this.getStyle(6) }),\n            _react2.default.createElement('div', { style: this.getStyle(7) }),\n            _react2.default.createElement('div', { style: this.getStyle(8) }),\n            _react2.default.createElement('div', { style: this.getStyle(9) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return GridLoader;\n}(_react.Component);\n\nGridLoader.propTypes = propTypes;\nGridLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px'\n};\nexports.default = GridLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=GridLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/GridLoader.js\n// module id = 31\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SyncLoader = exports.SquareLoader = exports.SkewLoader = exports.ScaleLoader = exports.RotateLoader = exports.RiseLoader = exports.RingLoader = exports.PulseLoader = exports.PacmanLoader = exports.MoonLoader = exports.GridLoader = exports.FadeLoader = exports.DotLoader = exports.ClipLoader = exports.BounceLoader = exports.BeatLoader = undefined;\n\nvar _BeatLoader2 = require('./BeatLoader');\n\nvar _BeatLoader3 = _interopRequireDefault(_BeatLoader2);\n\nvar _BounceLoader2 = require('./BounceLoader');\n\nvar _BounceLoader3 = _interopRequireDefault(_BounceLoader2);\n\nvar _ClipLoader2 = require('./ClipLoader');\n\nvar _ClipLoader3 = _interopRequireDefault(_ClipLoader2);\n\nvar _DotLoader2 = require('./DotLoader');\n\nvar _DotLoader3 = _interopRequireDefault(_DotLoader2);\n\nvar _FadeLoader2 = require('./FadeLoader');\n\nvar _FadeLoader3 = _interopRequireDefault(_FadeLoader2);\n\nvar _GridLoader2 = require('./GridLoader');\n\nvar _GridLoader3 = _interopRequireDefault(_GridLoader2);\n\nvar _MoonLoader2 = require('./MoonLoader');\n\nvar _MoonLoader3 = _interopRequireDefault(_MoonLoader2);\n\nvar _PacmanLoader2 = require('./PacmanLoader');\n\nvar _PacmanLoader3 = _interopRequireDefault(_PacmanLoader2);\n\nvar _PulseLoader2 = require('./PulseLoader');\n\nvar _PulseLoader3 = _interopRequireDefault(_PulseLoader2);\n\nvar _RingLoader2 = require('./RingLoader');\n\nvar _RingLoader3 = _interopRequireDefault(_RingLoader2);\n\nvar _RiseLoader2 = require('./RiseLoader');\n\nvar _RiseLoader3 = _interopRequireDefault(_RiseLoader2);\n\nvar _RotateLoader2 = require('./RotateLoader');\n\nvar _RotateLoader3 = _interopRequireDefault(_RotateLoader2);\n\nvar _ScaleLoader2 = require('./ScaleLoader');\n\nvar _ScaleLoader3 = _interopRequireDefault(_ScaleLoader2);\n\nvar _SkewLoader2 = require('./SkewLoader');\n\nvar _SkewLoader3 = _interopRequireDefault(_SkewLoader2);\n\nvar _SquareLoader2 = require('./SquareLoader');\n\nvar _SquareLoader3 = _interopRequireDefault(_SquareLoader2);\n\nvar _SyncLoader2 = require('./SyncLoader');\n\nvar _SyncLoader3 = _interopRequireDefault(_SyncLoader2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.BeatLoader = _BeatLoader3.default;\nexports.BounceLoader = _BounceLoader3.default;\nexports.ClipLoader = _ClipLoader3.default;\nexports.DotLoader = _DotLoader3.default;\nexports.FadeLoader = _FadeLoader3.default;\nexports.GridLoader = _GridLoader3.default;\nexports.MoonLoader = _MoonLoader3.default;\nexports.PacmanLoader = _PacmanLoader3.default;\nexports.PulseLoader = _PulseLoader3.default;\nexports.RingLoader = _RingLoader3.default;\nexports.RiseLoader = _RiseLoader3.default;\nexports.RotateLoader = _RotateLoader3.default;\nexports.ScaleLoader = _ScaleLoader3.default;\nexports.SkewLoader = _SkewLoader3.default;\nexports.SquareLoader = _SquareLoader3.default;\nexports.SyncLoader = _SyncLoader3.default;\n//# sourceMappingURL=Halogenium.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/Halogenium.js\n// module id = 32\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar MoonLoader = function (_Component) {\n  _inherits(MoonLoader, _Component);\n\n  function MoonLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, MoonLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = MoonLoader.__proto__ || Object.getPrototypeOf(MoonLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '0.6s', '0s', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'forwards';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = _this.props.size | 0;\n      var moonSize = size / 7;\n\n      if (i === 1) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(moonSize), _this.getAnimationStyle(i), {\n          backgroundColor: _this.props.color,\n          opacity: '0.8',\n          position: 'absolute',\n          top: size / 2 - moonSize / 2\n        });\n      } else if (i === 2) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getBallStyle(size), {\n          border: moonSize + 'px solid ' + _this.props.color,\n          opacity: 0.1\n        });\n      }\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getAnimationStyle(i), {\n        position: 'relative'\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @param  {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(MoonLoader, [{\n    key: 'render',\n    value: function render() {\n      var loading = this.props.loading;\n\n\n      if (loading) {\n        var props = _extends({}, this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: this.getStyle(0) },\n            _react2.default.createElement('div', { style: this.getStyle(1) }),\n            _react2.default.createElement('div', { style: this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }\n  }]);\n\n  return MoonLoader;\n}(_react.Component);\n\nMoonLoader.propTypes = propTypes;\nMoonLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = MoonLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=MoonLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/MoonLoader.js\n// module id = 33\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar animations = {};\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PacmanLoader = function (_Component) {\n  _inherits(PacmanLoader, _Component);\n\n  function PacmanLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PacmanLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PacmanLoader.__proto__ || Object.getPrototypeOf(PacmanLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign,\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var size = _this.props.size;\n      var animationName = animations[size];\n\n      if (!animationName) {\n        var keyframes = {\n          '75%': {\n            opacity: 0.7\n          },\n          '100%': {\n            transform: 'translate(' + -4 * size + 'px, ' + -size / 4 + 'px)'\n          }\n        };\n        animationName = animations[size] = (0, _insertKeyframesRule2.default)(keyframes);\n      }\n\n      var animation = [animationName, '1s', i * 0.25 + 's', 'infinite', 'linear'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i | 0 === 1) {\n        var s1 = _this.props.size + 'px solid transparent';\n        var s2 = _this.props.size + 'px solid ' + _this.props.color;\n\n        return {\n          width: 0,\n          height: 0,\n          borderRight: s1,\n          borderTop: s2,\n          borderLeft: s2,\n          borderBottom: s2,\n          borderRadius: _this.props.size\n        };\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        width: 10,\n        height: 10,\n        transform: 'translate(0, ' + -_this.props.size / 4 + 'px)',\n        position: 'absolute',\n        top: 25,\n        left: 100\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var style = {\n          position: 'relative',\n          fontSize: 0\n        };\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: style },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) }),\n            _react2.default.createElement('div', { style: _this.getStyle(3) }),\n            _react2.default.createElement('div', { style: _this.getStyle(4) }),\n            _react2.default.createElement('div', { style: _this.getStyle(5) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  _createClass(PacmanLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PacmanLoader;\n}(_react.Component);\n\nPacmanLoader.propTypes = propTypes;\nPacmanLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: 25,\n  margin: 2 };\nexports.default = PacmanLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PacmanLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PacmanLoader.js\n// module id = 34\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scale(1)',\n    opacity: 1\n  },\n  '45%': {\n    transform: 'scale(0.1)',\n    opacity: 0.7\n  },\n  '80%': {\n    transform: 'scale(1)',\n    opacity: 1\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar PulseLoader = function (_Component) {\n  _inherits(PulseLoader, _Component);\n\n  function PulseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, PulseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PulseLoader.__proto__ || Object.getPrototypeOf(PulseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.75s', i * 0.12 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(PulseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return PulseLoader;\n}(_react.Component);\n\nPulseLoader.propTypes = propTypes;\nPulseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = PulseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=PulseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/PulseLoader.js\n// module id = 35\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar rightRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n\n  },\n  '100%': {\n    transform: 'rotateX(180deg) rotateY(360deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var leftRotateKeyframes = {\n  '0%': {\n    transform: 'rotateX(0deg) rotateY(0deg) rotateZ(0deg)'\n  },\n  '100%': {\n    transform: 'rotateX(360deg) rotateY(180deg) rotateZ(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var rightRotateAnimationName = (0, _insertKeyframesRule2.default)(rightRotateKeyframes);\n\n/**\n * @type {String}\n */\nvar leftRotateAnimationName = (0, _insertKeyframesRule2.default)(leftRotateKeyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RingLoader = function (_Component) {\n  _inherits(RingLoader, _Component);\n\n  function RingLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RingLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RingLoader.__proto__ || Object.getPrototypeOf(RingLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getCircleStyle = function (size) {\n      return {\n        width: size,\n        height: size,\n        border: size / 10 + 'px solid ' + _this.props.color,\n        opacity: 0.4,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i | 0 === 1 ? rightRotateAnimationName : leftRotateAnimationName, '2s', '0s', 'infinite', 'linear'].join(' ');\n\n      var animationFillMode = 'forwards';\n      var perspective = '800px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      var size = parseInt(_this.props.size, 10);\n\n      if (i) {\n        return (0, _appendVendorPrefix2.default)({\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        }, _this.getCircleStyle(size), _this.getAnimationStyle(i), {\n          position: 'absolute',\n          top: 0,\n          left: 0\n        });\n      }\n\n      return {\n        width: size,\n        height: size,\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      };\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle(0) },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @param {String} size\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RingLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RingLoader;\n}(_react.Component);\n\nRingLoader.propTypes = propTypes;\nRingLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '60px' };\nexports.default = RingLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RingLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RingLoader.js\n// module id = 36\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Number}\n */\nvar riseAmount = 30;\n\n/**\n * @type {Object}\n */\nvar keyframesEven = {\n  '0%': {\n    transform: 'scale(1.1)'\n  },\n  '25%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(0.4)'\n  },\n  '75%': {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(1.0)'\n  }\n\n  /**\n   * @type {Object}\n   */\n};var keyframesOdd = {\n  '0%': {\n    transform: 'scale(0.4)'\n  },\n  25: {\n    transform: 'translateY(' + riseAmount + 'px)'\n  },\n  '50%': {\n    transform: 'scale(1.1)'\n  },\n  '75%': {\n    transform: 'translateY(-' + riseAmount + 'px)'\n  },\n  '100%': {\n    transform: 'translateY(0) scale(0.75)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationNameEven = (0, _insertKeyframesRule2.default)(keyframesEven);\n\n/**\n * @type {String}\n */\nvar animationNameOdd = (0, _insertKeyframesRule2.default)(keyframesOdd);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RiseLoader = function (_Component) {\n  _inherits(RiseLoader, _Component);\n\n  function RiseLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RiseLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RiseLoader.__proto__ || Object.getPrototypeOf(RiseLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [i % 2 === 0 ? animationNameEven : animationNameOdd, '1s', '0s', 'infinite', 'cubic-bezier(.15,.46,.9,.6)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RiseLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RiseLoader;\n}(_react.Component);\n\nRiseLoader.propTypes = propTypes;\nRiseLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RiseLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RiseLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RiseLoader.js\n// module id = 37\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'rotate(0deg)'\n  },\n  '50%': {\n    transform: 'rotate(180deg)'\n  },\n  '100%': {\n    transform: 'rotate(360deg)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar RotateLoader = function (_Component) {\n  _inherits(RotateLoader, _Component);\n\n  function RotateLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, RotateLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RotateLoader.__proto__ || Object.getPrototypeOf(RotateLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '1s', '0s', 'infinite', 'cubic-bezier(.7,-.13,.22,.86)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      if (i) {\n        return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), {\n          opacity: '0.8',\n          position: 'absolute',\n          top: 0,\n          left: i % 2 ? -28 : 25,\n          border: '0px solid transparent' // fix firefox/chrome/opera rendering\n        });\n      }\n\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        position: 'relative',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement(\n            'div',\n            { style: _this.getStyle() },\n            _react2.default.createElement('div', { style: _this.getStyle(1) }),\n            _react2.default.createElement('div', { style: _this.getStyle(2) })\n          )\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(RotateLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return RotateLoader;\n}(_react.Component);\n\nRotateLoader.propTypes = propTypes;\nRotateLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = RotateLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=RotateLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/RotateLoader.js\n// module id = 38\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '0%': {\n    transform: 'scaley(1.0)'\n  },\n  '50%': {\n    transform: 'scaley(0.4)'\n  },\n  '100%': {\n    transform: 'scaley(1.0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  height: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  width: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  radius: _propTypes2.default.string,\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar ScaleLoader = function (_Component) {\n  _inherits(ScaleLoader, _Component);\n\n  function ScaleLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ScaleLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ScaleLoader.__proto__ || Object.getPrototypeOf(ScaleLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getLineStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        height: _this.props.height,\n        width: _this.props.width,\n        margin: _this.props.margin,\n        borderRadius: _this.props.radius,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '1s', i * 0.1 + 's', 'infinite', 'cubic-bezier(.2,.68,.18,1.08)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getLineStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) }),\n          _react2.default.createElement('div', { style: _this.getStyle(4) }),\n          _react2.default.createElement('div', { style: _this.getStyle(5) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(ScaleLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return ScaleLoader;\n}(_react.Component);\n\nScaleLoader.propTypes = propTypes;\nScaleLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  height: '35px',\n  width: '4px',\n  margin: '2px',\n  radius: '2px' };\nexports.default = ScaleLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=ScaleLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/ScaleLoader.js\n// module id = 39\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'perspective(100px) rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'perspective(100px) rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SkewLoader = function (_Component) {\n  _inherits(SkewLoader, _Component);\n\n  function SkewLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SkewLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SkewLoader.__proto__ || Object.getPrototypeOf(SkewLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSharpStyle = function () {\n      return {\n        width: 0,\n        height: 0,\n        borderLeft: _this.props.size + ' solid transparent',\n        borderRight: _this.props.size + ' solid transparent',\n        borderBottom: _this.props.size + ' solid ' + _this.props.color,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)({\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      }, _this.getSharpStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block'\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SkewLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SkewLoader;\n}(_react.Component);\n\nSkewLoader.propTypes = propTypes;\nSkewLoader.defaultProps = {\n  loading: true,\n  color: '#fff',\n  size: '20px' };\nexports.default = SkewLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SkewLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SkewLoader.js\n// module id = 40\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '25%': {\n    transform: 'rotateX(180deg) rotateY(0)'\n  },\n  '50%': {\n    transform: 'rotateX(180deg) rotateY(180deg)'\n  },\n  '75%': {\n    transform: 'rotateX(0) rotateY(180deg)'\n  },\n  '100%': {\n    transform: 'rotateX(0) rotateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SquareLoader = function (_Component) {\n  _inherits(SquareLoader, _Component);\n\n  function SquareLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SquareLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SquareLoader.__proto__ || Object.getPrototypeOf(SquareLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getSquareStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function () {\n      var animation = [animationName, '3s', '0s', 'infinite', 'cubic-bezier(.09,.57,.49,.9)'].join(' ');\n      var animationFillMode = 'both';\n      var perspective = '100px';\n\n      return {\n        perspective: perspective,\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getSquareStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle() })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SquareLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SquareLoader;\n}(_react.Component);\n\nSquareLoader.propTypes = propTypes;\nSquareLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '50px' };\nexports.default = SquareLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SquareLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SquareLoader.js\n// module id = 41\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _appendVendorPrefix = require('domkit/appendVendorPrefix');\n\nvar _appendVendorPrefix2 = _interopRequireDefault(_appendVendorPrefix);\n\nvar _insertKeyframesRule = require('domkit/insertKeyframesRule');\n\nvar _insertKeyframesRule2 = _interopRequireDefault(_insertKeyframesRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * @type {Object}\n */\nvar keyframes = {\n  '33%': {\n    transform: 'translateY(10px)'\n  },\n  '66%': {\n    transform: 'translateY(-10px)'\n  },\n  '100%': {\n    transform: 'translateY(0)'\n  }\n\n  /**\n   * @type {String}\n   */\n};var animationName = (0, _insertKeyframesRule2.default)(keyframes);\n\nvar propTypes = {\n  loading: _propTypes2.default.bool,\n  color: _propTypes2.default.string,\n  size: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  margin: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string]),\n  verticalAlign: _propTypes2.default.oneOfType([_propTypes2.default.number, _propTypes2.default.string])\n};\n\nvar ptKeys = Object.keys(propTypes);\n\nvar SyncLoader = function (_Component) {\n  _inherits(SyncLoader, _Component);\n\n  function SyncLoader() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, SyncLoader);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SyncLoader.__proto__ || Object.getPrototypeOf(SyncLoader)).call.apply(_ref, [this].concat(args))), _this), _this.getBallStyle = function () {\n      return {\n        backgroundColor: _this.props.color,\n        width: _this.props.size,\n        height: _this.props.size,\n        margin: _this.props.margin,\n        borderRadius: '100%',\n        verticalAlign: _this.props.verticalAlign\n      };\n    }, _this.getAnimationStyle = function (i) {\n      var animation = [animationName, '0.6s', i * 0.07 + 's', 'infinite', 'ease-in-out'].join(' ');\n      var animationFillMode = 'both';\n\n      return {\n        animation: animation,\n        animationFillMode: animationFillMode\n      };\n    }, _this.getStyle = function (i) {\n      return (0, _appendVendorPrefix2.default)(_this.getBallStyle(i), _this.getAnimationStyle(i), {\n        display: 'inline-block',\n        border: '0px solid transparent' // fix firefox/chrome/opera rendering\n      });\n    }, _this.renderLoader = function (loading) {\n      if (loading) {\n        var props = Object.assign({}, _this.props);\n\n        if (propTypes && ptKeys) {\n          var klen = ptKeys.length;\n          for (var i = 0; i < klen; i++) {\n            delete props[ptKeys[i]];\n          }\n        }\n\n        return _react2.default.createElement(\n          'div',\n          props,\n          _react2.default.createElement('div', { style: _this.getStyle(1) }),\n          _react2.default.createElement('div', { style: _this.getStyle(2) }),\n          _react2.default.createElement('div', { style: _this.getStyle(3) })\n        );\n      }\n\n      return null;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n  /**\n   * @type {Object}\n   */\n\n\n  /**\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Number} i\n   * @return {Object}\n   */\n\n\n  /**\n   * @param  {Boolean} loading\n   * @return {ReactComponent || null}\n   */\n\n\n  _createClass(SyncLoader, [{\n    key: 'render',\n    value: function render() {\n      return this.renderLoader(this.props.loading);\n    }\n  }]);\n\n  return SyncLoader;\n}(_react.Component);\n\nSyncLoader.propTypes = propTypes;\nSyncLoader.defaultProps = {\n  loading: true,\n  color: '#ffffff',\n  size: '15px',\n  margin: '2px' };\nexports.default = SyncLoader;\nmodule.exports = exports['default'];\n//# sourceMappingURL=SyncLoader.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/halogenium/lib/SyncLoader.js\n// module id = 42\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    invariant(\n      false,\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim\n  };\n\n  ReactPropTypes.checkPropTypes = emptyFunction;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/factoryWithThrowingShims.js\n// module id = 43\n// module chunks = 0","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/prop-types/lib/ReactPropTypesSecret.js\n// module id = 44\n// module chunks = 0","/** @license React v16.2.0\n * react-dom.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),l=require(\"fbjs/lib/ExecutionEnvironment\"),B=require(\"object-assign\"),C=require(\"fbjs/lib/emptyFunction\"),ba=require(\"fbjs/lib/EventListener\"),da=require(\"fbjs/lib/getActiveElement\"),ea=require(\"fbjs/lib/shallowEqual\"),fa=require(\"fbjs/lib/containsNode\"),ia=require(\"fbjs/lib/focusNode\"),D=require(\"fbjs/lib/emptyObject\");\nfunction E(a){for(var b=arguments.length-1,c=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,d=0;d<b;d++)c+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[d+1]);b=Error(c+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}aa?void 0:E(\"227\");\nvar oa={children:!0,dangerouslySetInnerHTML:!0,defaultValue:!0,defaultChecked:!0,innerHTML:!0,suppressContentEditableWarning:!0,suppressHydrationWarning:!0,style:!0};function pa(a,b){return(a&b)===b}\nvar ta={MUST_USE_PROPERTY:1,HAS_BOOLEAN_VALUE:4,HAS_NUMERIC_VALUE:8,HAS_POSITIVE_NUMERIC_VALUE:24,HAS_OVERLOADED_BOOLEAN_VALUE:32,HAS_STRING_BOOLEAN_VALUE:64,injectDOMPropertyConfig:function(a){var b=ta,c=a.Properties||{},d=a.DOMAttributeNamespaces||{},e=a.DOMAttributeNames||{};a=a.DOMMutationMethods||{};for(var f in c){ua.hasOwnProperty(f)?E(\"48\",f):void 0;var g=f.toLowerCase(),h=c[f];g={attributeName:g,attributeNamespace:null,propertyName:f,mutationMethod:null,mustUseProperty:pa(h,b.MUST_USE_PROPERTY),\nhasBooleanValue:pa(h,b.HAS_BOOLEAN_VALUE),hasNumericValue:pa(h,b.HAS_NUMERIC_VALUE),hasPositiveNumericValue:pa(h,b.HAS_POSITIVE_NUMERIC_VALUE),hasOverloadedBooleanValue:pa(h,b.HAS_OVERLOADED_BOOLEAN_VALUE),hasStringBooleanValue:pa(h,b.HAS_STRING_BOOLEAN_VALUE)};1>=g.hasBooleanValue+g.hasNumericValue+g.hasOverloadedBooleanValue?void 0:E(\"50\",f);e.hasOwnProperty(f)&&(g.attributeName=e[f]);d.hasOwnProperty(f)&&(g.attributeNamespace=d[f]);a.hasOwnProperty(f)&&(g.mutationMethod=a[f]);ua[f]=g}}},ua={};\nfunction va(a,b){if(oa.hasOwnProperty(a)||2<a.length&&(\"o\"===a[0]||\"O\"===a[0])&&(\"n\"===a[1]||\"N\"===a[1]))return!1;if(null===b)return!0;switch(typeof b){case \"boolean\":return oa.hasOwnProperty(a)?a=!0:(b=wa(a))?a=b.hasBooleanValue||b.hasStringBooleanValue||b.hasOverloadedBooleanValue:(a=a.toLowerCase().slice(0,5),a=\"data-\"===a||\"aria-\"===a),a;case \"undefined\":case \"number\":case \"string\":case \"object\":return!0;default:return!1}}function wa(a){return ua.hasOwnProperty(a)?ua[a]:null}\nvar xa=ta,ya=xa.MUST_USE_PROPERTY,K=xa.HAS_BOOLEAN_VALUE,za=xa.HAS_NUMERIC_VALUE,Aa=xa.HAS_POSITIVE_NUMERIC_VALUE,Ba=xa.HAS_OVERLOADED_BOOLEAN_VALUE,Ca=xa.HAS_STRING_BOOLEAN_VALUE,Da={Properties:{allowFullScreen:K,async:K,autoFocus:K,autoPlay:K,capture:Ba,checked:ya|K,cols:Aa,contentEditable:Ca,controls:K,\"default\":K,defer:K,disabled:K,download:Ba,draggable:Ca,formNoValidate:K,hidden:K,loop:K,multiple:ya|K,muted:ya|K,noValidate:K,open:K,playsInline:K,readOnly:K,required:K,reversed:K,rows:Aa,rowSpan:za,\nscoped:K,seamless:K,selected:ya|K,size:Aa,start:za,span:Aa,spellCheck:Ca,style:0,tabIndex:0,itemScope:K,acceptCharset:0,className:0,htmlFor:0,httpEquiv:0,value:Ca},DOMAttributeNames:{acceptCharset:\"accept-charset\",className:\"class\",htmlFor:\"for\",httpEquiv:\"http-equiv\"},DOMMutationMethods:{value:function(a,b){if(null==b)return a.removeAttribute(\"value\");\"number\"!==a.type||!1===a.hasAttribute(\"value\")?a.setAttribute(\"value\",\"\"+b):a.validity&&!a.validity.badInput&&a.ownerDocument.activeElement!==a&&\na.setAttribute(\"value\",\"\"+b)}}},Ea=xa.HAS_STRING_BOOLEAN_VALUE,M={xlink:\"http://www.w3.org/1999/xlink\",xml:\"http://www.w3.org/XML/1998/namespace\"},Ga={Properties:{autoReverse:Ea,externalResourcesRequired:Ea,preserveAlpha:Ea},DOMAttributeNames:{autoReverse:\"autoReverse\",externalResourcesRequired:\"externalResourcesRequired\",preserveAlpha:\"preserveAlpha\"},DOMAttributeNamespaces:{xlinkActuate:M.xlink,xlinkArcrole:M.xlink,xlinkHref:M.xlink,xlinkRole:M.xlink,xlinkShow:M.xlink,xlinkTitle:M.xlink,xlinkType:M.xlink,\nxmlBase:M.xml,xmlLang:M.xml,xmlSpace:M.xml}},Ha=/[\\-\\:]([a-z])/g;function Ia(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode x-height xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type xml:base xmlns:xlink xml:lang xml:space\".split(\" \").forEach(function(a){var b=a.replace(Ha,\nIa);Ga.Properties[b]=0;Ga.DOMAttributeNames[b]=a});xa.injectDOMPropertyConfig(Da);xa.injectDOMPropertyConfig(Ga);\nvar P={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,injection:{injectErrorUtils:function(a){\"function\"!==typeof a.invokeGuardedCallback?E(\"197\"):void 0;Ja=a.invokeGuardedCallback}},invokeGuardedCallback:function(a,b,c,d,e,f,g,h,k){Ja.apply(P,arguments)},invokeGuardedCallbackAndCatchFirstError:function(a,b,c,d,e,f,g,h,k){P.invokeGuardedCallback.apply(this,arguments);if(P.hasCaughtError()){var q=P.clearCaughtError();P._hasRethrowError||(P._hasRethrowError=!0,P._rethrowError=\nq)}},rethrowCaughtError:function(){return Ka.apply(P,arguments)},hasCaughtError:function(){return P._hasCaughtError},clearCaughtError:function(){if(P._hasCaughtError){var a=P._caughtError;P._caughtError=null;P._hasCaughtError=!1;return a}E(\"198\")}};function Ja(a,b,c,d,e,f,g,h,k){P._hasCaughtError=!1;P._caughtError=null;var q=Array.prototype.slice.call(arguments,3);try{b.apply(c,q)}catch(v){P._caughtError=v,P._hasCaughtError=!0}}\nfunction Ka(){if(P._hasRethrowError){var a=P._rethrowError;P._rethrowError=null;P._hasRethrowError=!1;throw a;}}var La=null,Ma={};\nfunction Na(){if(La)for(var a in Ma){var b=Ma[a],c=La.indexOf(a);-1<c?void 0:E(\"96\",a);if(!Oa[c]){b.extractEvents?void 0:E(\"97\",a);Oa[c]=b;c=b.eventTypes;for(var d in c){var e=void 0;var f=c[d],g=b,h=d;Pa.hasOwnProperty(h)?E(\"99\",h):void 0;Pa[h]=f;var k=f.phasedRegistrationNames;if(k){for(e in k)k.hasOwnProperty(e)&&Qa(k[e],g,h);e=!0}else f.registrationName?(Qa(f.registrationName,g,h),e=!0):e=!1;e?void 0:E(\"98\",d,a)}}}}\nfunction Qa(a,b,c){Ra[a]?E(\"100\",a):void 0;Ra[a]=b;Sa[a]=b.eventTypes[c].dependencies}var Oa=[],Pa={},Ra={},Sa={};function Ta(a){La?E(\"101\"):void 0;La=Array.prototype.slice.call(a);Na()}function Ua(a){var b=!1,c;for(c in a)if(a.hasOwnProperty(c)){var d=a[c];Ma.hasOwnProperty(c)&&Ma[c]===d||(Ma[c]?E(\"102\",c):void 0,Ma[c]=d,b=!0)}b&&Na()}\nvar Va=Object.freeze({plugins:Oa,eventNameDispatchConfigs:Pa,registrationNameModules:Ra,registrationNameDependencies:Sa,possibleRegistrationNames:null,injectEventPluginOrder:Ta,injectEventPluginsByName:Ua}),Wa=null,Xa=null,Ya=null;function Za(a,b,c,d){b=a.type||\"unknown-event\";a.currentTarget=Ya(d);P.invokeGuardedCallbackAndCatchFirstError(b,c,void 0,a);a.currentTarget=null}\nfunction $a(a,b){null==b?E(\"30\"):void 0;if(null==a)return b;if(Array.isArray(a)){if(Array.isArray(b))return a.push.apply(a,b),a;a.push(b);return a}return Array.isArray(b)?[a].concat(b):[a,b]}function ab(a,b,c){Array.isArray(a)?a.forEach(b,c):a&&b.call(c,a)}var bb=null;\nfunction cb(a,b){if(a){var c=a._dispatchListeners,d=a._dispatchInstances;if(Array.isArray(c))for(var e=0;e<c.length&&!a.isPropagationStopped();e++)Za(a,b,c[e],d[e]);else c&&Za(a,b,c,d);a._dispatchListeners=null;a._dispatchInstances=null;a.isPersistent()||a.constructor.release(a)}}function db(a){return cb(a,!0)}function gb(a){return cb(a,!1)}var hb={injectEventPluginOrder:Ta,injectEventPluginsByName:Ua};\nfunction ib(a,b){var c=a.stateNode;if(!c)return null;var d=Wa(c);if(!d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;c&&\"function\"!==typeof c?E(\"231\",b,typeof c):void 0;\nreturn c}function jb(a,b,c,d){for(var e,f=0;f<Oa.length;f++){var g=Oa[f];g&&(g=g.extractEvents(a,b,c,d))&&(e=$a(e,g))}return e}function kb(a){a&&(bb=$a(bb,a))}function lb(a){var b=bb;bb=null;b&&(a?ab(b,db):ab(b,gb),bb?E(\"95\"):void 0,P.rethrowCaughtError())}var mb=Object.freeze({injection:hb,getListener:ib,extractEvents:jb,enqueueEvents:kb,processEventQueue:lb}),nb=Math.random().toString(36).slice(2),Q=\"__reactInternalInstance$\"+nb,ob=\"__reactEventHandlers$\"+nb;\nfunction pb(a){if(a[Q])return a[Q];for(var b=[];!a[Q];)if(b.push(a),a.parentNode)a=a.parentNode;else return null;var c=void 0,d=a[Q];if(5===d.tag||6===d.tag)return d;for(;a&&(d=a[Q]);a=b.pop())c=d;return c}function qb(a){if(5===a.tag||6===a.tag)return a.stateNode;E(\"33\")}function rb(a){return a[ob]||null}\nvar sb=Object.freeze({precacheFiberNode:function(a,b){b[Q]=a},getClosestInstanceFromNode:pb,getInstanceFromNode:function(a){a=a[Q];return!a||5!==a.tag&&6!==a.tag?null:a},getNodeFromInstance:qb,getFiberCurrentPropsFromNode:rb,updateFiberProps:function(a,b){a[ob]=b}});function tb(a){do a=a[\"return\"];while(a&&5!==a.tag);return a?a:null}function ub(a,b,c){for(var d=[];a;)d.push(a),a=tb(a);for(a=d.length;0<a--;)b(d[a],\"captured\",c);for(a=0;a<d.length;a++)b(d[a],\"bubbled\",c)}\nfunction vb(a,b,c){if(b=ib(a,c.dispatchConfig.phasedRegistrationNames[b]))c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a)}function wb(a){a&&a.dispatchConfig.phasedRegistrationNames&&ub(a._targetInst,vb,a)}function xb(a){if(a&&a.dispatchConfig.phasedRegistrationNames){var b=a._targetInst;b=b?tb(b):null;ub(b,vb,a)}}\nfunction yb(a,b,c){a&&c&&c.dispatchConfig.registrationName&&(b=ib(a,c.dispatchConfig.registrationName))&&(c._dispatchListeners=$a(c._dispatchListeners,b),c._dispatchInstances=$a(c._dispatchInstances,a))}function zb(a){a&&a.dispatchConfig.registrationName&&yb(a._targetInst,null,a)}function Ab(a){ab(a,wb)}\nfunction Bb(a,b,c,d){if(c&&d)a:{var e=c;for(var f=d,g=0,h=e;h;h=tb(h))g++;h=0;for(var k=f;k;k=tb(k))h++;for(;0<g-h;)e=tb(e),g--;for(;0<h-g;)f=tb(f),h--;for(;g--;){if(e===f||e===f.alternate)break a;e=tb(e);f=tb(f)}e=null}else e=null;f=e;for(e=[];c&&c!==f;){g=c.alternate;if(null!==g&&g===f)break;e.push(c);c=tb(c)}for(c=[];d&&d!==f;){g=d.alternate;if(null!==g&&g===f)break;c.push(d);d=tb(d)}for(d=0;d<e.length;d++)yb(e[d],\"bubbled\",a);for(a=c.length;0<a--;)yb(c[a],\"captured\",b)}\nvar Cb=Object.freeze({accumulateTwoPhaseDispatches:Ab,accumulateTwoPhaseDispatchesSkipTarget:function(a){ab(a,xb)},accumulateEnterLeaveDispatches:Bb,accumulateDirectDispatches:function(a){ab(a,zb)}}),Db=null;function Eb(){!Db&&l.canUseDOM&&(Db=\"textContent\"in document.documentElement?\"textContent\":\"innerText\");return Db}var S={_root:null,_startText:null,_fallbackText:null};\nfunction Fb(){if(S._fallbackText)return S._fallbackText;var a,b=S._startText,c=b.length,d,e=Gb(),f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);S._fallbackText=e.slice(a,1<d?1-d:void 0);return S._fallbackText}function Gb(){return\"value\"in S._root?S._root.value:S._root[Eb()]}\nvar Hb=\"dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances\".split(\" \"),Ib={type:null,target:null,currentTarget:C.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};\nfunction T(a,b,c,d){this.dispatchConfig=a;this._targetInst=b;this.nativeEvent=c;a=this.constructor.Interface;for(var e in a)a.hasOwnProperty(e)&&((b=a[e])?this[e]=b(c):\"target\"===e?this.target=d:this[e]=c[e]);this.isDefaultPrevented=(null!=c.defaultPrevented?c.defaultPrevented:!1===c.returnValue)?C.thatReturnsTrue:C.thatReturnsFalse;this.isPropagationStopped=C.thatReturnsFalse;return this}\nB(T.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&(a.returnValue=!1),this.isDefaultPrevented=C.thatReturnsTrue)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=C.thatReturnsTrue)},persist:function(){this.isPersistent=C.thatReturnsTrue},isPersistent:C.thatReturnsFalse,\ndestructor:function(){var a=this.constructor.Interface,b;for(b in a)this[b]=null;for(a=0;a<Hb.length;a++)this[Hb[a]]=null}});T.Interface=Ib;T.augmentClass=function(a,b){function c(){}c.prototype=this.prototype;var d=new c;B(d,a.prototype);a.prototype=d;a.prototype.constructor=a;a.Interface=B({},this.Interface,b);a.augmentClass=this.augmentClass;Jb(a)};Jb(T);function Kb(a,b,c,d){if(this.eventPool.length){var e=this.eventPool.pop();this.call(e,a,b,c,d);return e}return new this(a,b,c,d)}\nfunction Lb(a){a instanceof this?void 0:E(\"223\");a.destructor();10>this.eventPool.length&&this.eventPool.push(a)}function Jb(a){a.eventPool=[];a.getPooled=Kb;a.release=Lb}function Mb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Mb,{data:null});function Nb(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Nb,{data:null});var Pb=[9,13,27,32],Vb=l.canUseDOM&&\"CompositionEvent\"in window,Wb=null;l.canUseDOM&&\"documentMode\"in document&&(Wb=document.documentMode);var Xb;\nif(Xb=l.canUseDOM&&\"TextEvent\"in window&&!Wb){var Yb=window.opera;Xb=!(\"object\"===typeof Yb&&\"function\"===typeof Yb.version&&12>=parseInt(Yb.version(),10))}\nvar Zb=Xb,$b=l.canUseDOM&&(!Vb||Wb&&8<Wb&&11>=Wb),ac=String.fromCharCode(32),bc={beforeInput:{phasedRegistrationNames:{bubbled:\"onBeforeInput\",captured:\"onBeforeInputCapture\"},dependencies:[\"topCompositionEnd\",\"topKeyPress\",\"topTextInput\",\"topPaste\"]},compositionEnd:{phasedRegistrationNames:{bubbled:\"onCompositionEnd\",captured:\"onCompositionEndCapture\"},dependencies:\"topBlur topCompositionEnd topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionStart:{phasedRegistrationNames:{bubbled:\"onCompositionStart\",\ncaptured:\"onCompositionStartCapture\"},dependencies:\"topBlur topCompositionStart topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")},compositionUpdate:{phasedRegistrationNames:{bubbled:\"onCompositionUpdate\",captured:\"onCompositionUpdateCapture\"},dependencies:\"topBlur topCompositionUpdate topKeyDown topKeyPress topKeyUp topMouseDown\".split(\" \")}},cc=!1;\nfunction dc(a,b){switch(a){case \"topKeyUp\":return-1!==Pb.indexOf(b.keyCode);case \"topKeyDown\":return 229!==b.keyCode;case \"topKeyPress\":case \"topMouseDown\":case \"topBlur\":return!0;default:return!1}}function ec(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var fc=!1;function gc(a,b){switch(a){case \"topCompositionEnd\":return ec(b);case \"topKeyPress\":if(32!==b.which)return null;cc=!0;return ac;case \"topTextInput\":return a=b.data,a===ac&&cc?null:a;default:return null}}\nfunction hc(a,b){if(fc)return\"topCompositionEnd\"===a||!Vb&&dc(a,b)?(a=Fb(),S._root=null,S._startText=null,S._fallbackText=null,fc=!1,a):null;switch(a){case \"topPaste\":return null;case \"topKeyPress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"topCompositionEnd\":return $b?null:b.data;default:return null}}\nvar ic={eventTypes:bc,extractEvents:function(a,b,c,d){var e;if(Vb)b:{switch(a){case \"topCompositionStart\":var f=bc.compositionStart;break b;case \"topCompositionEnd\":f=bc.compositionEnd;break b;case \"topCompositionUpdate\":f=bc.compositionUpdate;break b}f=void 0}else fc?dc(a,c)&&(f=bc.compositionEnd):\"topKeyDown\"===a&&229===c.keyCode&&(f=bc.compositionStart);f?($b&&(fc||f!==bc.compositionStart?f===bc.compositionEnd&&fc&&(e=Fb()):(S._root=d,S._startText=Gb(),fc=!0)),f=Mb.getPooled(f,b,c,d),e?f.data=\ne:(e=ec(c),null!==e&&(f.data=e)),Ab(f),e=f):e=null;(a=Zb?gc(a,c):hc(a,c))?(b=Nb.getPooled(bc.beforeInput,b,c,d),b.data=a,Ab(b)):b=null;return[e,b]}},jc=null,kc=null,lc=null;function mc(a){if(a=Xa(a)){jc&&\"function\"===typeof jc.restoreControlledState?void 0:E(\"194\");var b=Wa(a.stateNode);jc.restoreControlledState(a.stateNode,a.type,b)}}var nc={injectFiberControlledHostComponent:function(a){jc=a}};function oc(a){kc?lc?lc.push(a):lc=[a]:kc=a}\nfunction pc(){if(kc){var a=kc,b=lc;lc=kc=null;mc(a);if(b)for(a=0;a<b.length;a++)mc(b[a])}}var qc=Object.freeze({injection:nc,enqueueStateRestore:oc,restoreStateIfNeeded:pc});function rc(a,b){return a(b)}var sc=!1;function tc(a,b){if(sc)return rc(a,b);sc=!0;try{return rc(a,b)}finally{sc=!1,pc()}}var uc={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};\nfunction vc(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!uc[a.type]:\"textarea\"===b?!0:!1}function wc(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var xc;l.canUseDOM&&(xc=document.implementation&&document.implementation.hasFeature&&!0!==document.implementation.hasFeature(\"\",\"\"));\nfunction yc(a,b){if(!l.canUseDOM||b&&!(\"addEventListener\"in document))return!1;b=\"on\"+a;var c=b in document;c||(c=document.createElement(\"div\"),c.setAttribute(b,\"return;\"),c=\"function\"===typeof c[b]);!c&&xc&&\"wheel\"===a&&(c=document.implementation.hasFeature(\"Events.wheel\",\"3.0\"));return c}function zc(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ac(a){var b=zc(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"function\"===typeof c.get&&\"function\"===typeof c.set)return Object.defineProperty(a,b,{enumerable:c.enumerable,configurable:!0,get:function(){return c.get.call(this)},set:function(a){d=\"\"+a;c.set.call(this,a)}}),{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=null;delete a[b]}}}\nfunction Bc(a){a._valueTracker||(a._valueTracker=Ac(a))}function Cc(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=zc(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}var Dc={change:{phasedRegistrationNames:{bubbled:\"onChange\",captured:\"onChangeCapture\"},dependencies:\"topBlur topChange topClick topFocus topInput topKeyDown topKeyUp topSelectionChange\".split(\" \")}};\nfunction Ec(a,b,c){a=T.getPooled(Dc.change,a,b,c);a.type=\"change\";oc(c);Ab(a);return a}var Fc=null,Gc=null;function Hc(a){kb(a);lb(!1)}function Ic(a){var b=qb(a);if(Cc(b))return a}function Jc(a,b){if(\"topChange\"===a)return b}var Kc=!1;l.canUseDOM&&(Kc=yc(\"input\")&&(!document.documentMode||9<document.documentMode));function Lc(){Fc&&(Fc.detachEvent(\"onpropertychange\",Mc),Gc=Fc=null)}function Mc(a){\"value\"===a.propertyName&&Ic(Gc)&&(a=Ec(Gc,a,wc(a)),tc(Hc,a))}\nfunction Nc(a,b,c){\"topFocus\"===a?(Lc(),Fc=b,Gc=c,Fc.attachEvent(\"onpropertychange\",Mc)):\"topBlur\"===a&&Lc()}function Oc(a){if(\"topSelectionChange\"===a||\"topKeyUp\"===a||\"topKeyDown\"===a)return Ic(Gc)}function Pc(a,b){if(\"topClick\"===a)return Ic(b)}function $c(a,b){if(\"topInput\"===a||\"topChange\"===a)return Ic(b)}\nvar ad={eventTypes:Dc,_isInputEventSupported:Kc,extractEvents:function(a,b,c,d){var e=b?qb(b):window,f=e.nodeName&&e.nodeName.toLowerCase();if(\"select\"===f||\"input\"===f&&\"file\"===e.type)var g=Jc;else if(vc(e))if(Kc)g=$c;else{g=Oc;var h=Nc}else f=e.nodeName,!f||\"input\"!==f.toLowerCase()||\"checkbox\"!==e.type&&\"radio\"!==e.type||(g=Pc);if(g&&(g=g(a,b)))return Ec(g,c,d);h&&h(a,e,b);\"topBlur\"===a&&null!=b&&(a=b._wrapperState||e._wrapperState)&&a.controlled&&\"number\"===e.type&&(a=\"\"+e.value,e.getAttribute(\"value\")!==\na&&e.setAttribute(\"value\",a))}};function bd(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(bd,{view:null,detail:null});var cd={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function dd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=cd[a])?!!b[a]:!1}function ed(){return dd}function fd(a,b,c,d){return T.call(this,a,b,c,d)}\nbd.augmentClass(fd,{screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:ed,button:null,buttons:null,relatedTarget:function(a){return a.relatedTarget||(a.fromElement===a.srcElement?a.toElement:a.fromElement)}});\nvar gd={mouseEnter:{registrationName:\"onMouseEnter\",dependencies:[\"topMouseOut\",\"topMouseOver\"]},mouseLeave:{registrationName:\"onMouseLeave\",dependencies:[\"topMouseOut\",\"topMouseOver\"]}},hd={eventTypes:gd,extractEvents:function(a,b,c,d){if(\"topMouseOver\"===a&&(c.relatedTarget||c.fromElement)||\"topMouseOut\"!==a&&\"topMouseOver\"!==a)return null;var e=d.window===d?d:(e=d.ownerDocument)?e.defaultView||e.parentWindow:window;\"topMouseOut\"===a?(a=b,b=(b=c.relatedTarget||c.toElement)?pb(b):null):a=null;if(a===\nb)return null;var f=null==a?e:qb(a);e=null==b?e:qb(b);var g=fd.getPooled(gd.mouseLeave,a,c,d);g.type=\"mouseleave\";g.target=f;g.relatedTarget=e;c=fd.getPooled(gd.mouseEnter,b,c,d);c.type=\"mouseenter\";c.target=e;c.relatedTarget=f;Bb(g,c,a,b);return[g,c]}},id=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner;function jd(a){a=a.type;return\"string\"===typeof a?a:\"function\"===typeof a?a.displayName||a.name:null}\nfunction kd(a){var b=a;if(a.alternate)for(;b[\"return\"];)b=b[\"return\"];else{if(0!==(b.effectTag&2))return 1;for(;b[\"return\"];)if(b=b[\"return\"],0!==(b.effectTag&2))return 1}return 3===b.tag?2:3}function ld(a){return(a=a._reactInternalFiber)?2===kd(a):!1}function md(a){2!==kd(a)?E(\"188\"):void 0}\nfunction nd(a){var b=a.alternate;if(!b)return b=kd(a),3===b?E(\"188\"):void 0,1===b?null:a;for(var c=a,d=b;;){var e=c[\"return\"],f=e?e.alternate:null;if(!e||!f)break;if(e.child===f.child){for(var g=e.child;g;){if(g===c)return md(e),a;if(g===d)return md(e),b;g=g.sibling}E(\"188\")}if(c[\"return\"]!==d[\"return\"])c=e,d=f;else{g=!1;for(var h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===c){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}g?\nvoid 0:E(\"189\")}}c.alternate!==d?E(\"190\"):void 0}3!==c.tag?E(\"188\"):void 0;return c.stateNode.current===c?a:b}function od(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}\nfunction pd(a){a=nd(a);if(!a)return null;for(var b=a;;){if(5===b.tag||6===b.tag)return b;if(b.child&&4!==b.tag)b.child[\"return\"]=b,b=b.child;else{if(b===a)break;for(;!b.sibling;){if(!b[\"return\"]||b[\"return\"]===a)return null;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}return null}var qd=[];\nfunction rd(a){var b=a.targetInst;do{if(!b){a.ancestors.push(b);break}var c;for(c=b;c[\"return\"];)c=c[\"return\"];c=3!==c.tag?null:c.stateNode.containerInfo;if(!c)break;a.ancestors.push(b);b=pb(c)}while(b);for(c=0;c<a.ancestors.length;c++)b=a.ancestors[c],sd(a.topLevelType,b,a.nativeEvent,wc(a.nativeEvent))}var td=!0,sd=void 0;function ud(a){td=!!a}function U(a,b,c){return c?ba.listen(c,b,vd.bind(null,a)):null}function wd(a,b,c){return c?ba.capture(c,b,vd.bind(null,a)):null}\nfunction vd(a,b){if(td){var c=wc(b);c=pb(c);null===c||\"number\"!==typeof c.tag||2===kd(c)||(c=null);if(qd.length){var d=qd.pop();d.topLevelType=a;d.nativeEvent=b;d.targetInst=c;a=d}else a={topLevelType:a,nativeEvent:b,targetInst:c,ancestors:[]};try{tc(rd,a)}finally{a.topLevelType=null,a.nativeEvent=null,a.targetInst=null,a.ancestors.length=0,10>qd.length&&qd.push(a)}}}\nvar xd=Object.freeze({get _enabled(){return td},get _handleTopLevel(){return sd},setHandleTopLevel:function(a){sd=a},setEnabled:ud,isEnabled:function(){return td},trapBubbledEvent:U,trapCapturedEvent:wd,dispatchEvent:vd});function yd(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;c[\"ms\"+a]=\"MS\"+b;c[\"O\"+a]=\"o\"+b.toLowerCase();return c}\nvar zd={animationend:yd(\"Animation\",\"AnimationEnd\"),animationiteration:yd(\"Animation\",\"AnimationIteration\"),animationstart:yd(\"Animation\",\"AnimationStart\"),transitionend:yd(\"Transition\",\"TransitionEnd\")},Ad={},Bd={};l.canUseDOM&&(Bd=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete zd.animationend.animation,delete zd.animationiteration.animation,delete zd.animationstart.animation),\"TransitionEvent\"in window||delete zd.transitionend.transition);\nfunction Cd(a){if(Ad[a])return Ad[a];if(!zd[a])return a;var b=zd[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Bd)return Ad[a]=b[c];return\"\"}\nvar Dd={topAbort:\"abort\",topAnimationEnd:Cd(\"animationend\")||\"animationend\",topAnimationIteration:Cd(\"animationiteration\")||\"animationiteration\",topAnimationStart:Cd(\"animationstart\")||\"animationstart\",topBlur:\"blur\",topCancel:\"cancel\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topChange:\"change\",topClick:\"click\",topClose:\"close\",topCompositionEnd:\"compositionend\",topCompositionStart:\"compositionstart\",topCompositionUpdate:\"compositionupdate\",topContextMenu:\"contextmenu\",topCopy:\"copy\",\ntopCut:\"cut\",topDoubleClick:\"dblclick\",topDrag:\"drag\",topDragEnd:\"dragend\",topDragEnter:\"dragenter\",topDragExit:\"dragexit\",topDragLeave:\"dragleave\",topDragOver:\"dragover\",topDragStart:\"dragstart\",topDrop:\"drop\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topFocus:\"focus\",topInput:\"input\",topKeyDown:\"keydown\",topKeyPress:\"keypress\",topKeyUp:\"keyup\",topLoadedData:\"loadeddata\",topLoad:\"load\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",\ntopMouseDown:\"mousedown\",topMouseMove:\"mousemove\",topMouseOut:\"mouseout\",topMouseOver:\"mouseover\",topMouseUp:\"mouseup\",topPaste:\"paste\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topScroll:\"scroll\",topSeeked:\"seeked\",topSeeking:\"seeking\",topSelectionChange:\"selectionchange\",topStalled:\"stalled\",topSuspend:\"suspend\",topTextInput:\"textInput\",topTimeUpdate:\"timeupdate\",topToggle:\"toggle\",topTouchCancel:\"touchcancel\",topTouchEnd:\"touchend\",topTouchMove:\"touchmove\",\ntopTouchStart:\"touchstart\",topTransitionEnd:Cd(\"transitionend\")||\"transitionend\",topVolumeChange:\"volumechange\",topWaiting:\"waiting\",topWheel:\"wheel\"},Ed={},Fd=0,Gd=\"_reactListenersID\"+(\"\"+Math.random()).slice(2);function Hd(a){Object.prototype.hasOwnProperty.call(a,Gd)||(a[Gd]=Fd++,Ed[a[Gd]]={});return Ed[a[Gd]]}function Id(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Jd(a,b){var c=Id(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Id(c)}}function Kd(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&\"text\"===a.type||\"textarea\"===b||\"true\"===a.contentEditable)}\nvar Ld=l.canUseDOM&&\"documentMode\"in document&&11>=document.documentMode,Md={select:{phasedRegistrationNames:{bubbled:\"onSelect\",captured:\"onSelectCapture\"},dependencies:\"topBlur topContextMenu topFocus topKeyDown topKeyUp topMouseDown topMouseUp topSelectionChange\".split(\" \")}},Nd=null,Od=null,Pd=null,Qd=!1;\nfunction Rd(a,b){if(Qd||null==Nd||Nd!==da())return null;var c=Nd;\"selectionStart\"in c&&Kd(c)?c={start:c.selectionStart,end:c.selectionEnd}:window.getSelection?(c=window.getSelection(),c={anchorNode:c.anchorNode,anchorOffset:c.anchorOffset,focusNode:c.focusNode,focusOffset:c.focusOffset}):c=void 0;return Pd&&ea(Pd,c)?null:(Pd=c,a=T.getPooled(Md.select,Od,a,b),a.type=\"select\",a.target=Nd,Ab(a),a)}\nvar Sd={eventTypes:Md,extractEvents:function(a,b,c,d){var e=d.window===d?d.document:9===d.nodeType?d:d.ownerDocument,f;if(!(f=!e)){a:{e=Hd(e);f=Sa.onSelect;for(var g=0;g<f.length;g++){var h=f[g];if(!e.hasOwnProperty(h)||!e[h]){e=!1;break a}}e=!0}f=!e}if(f)return null;e=b?qb(b):window;switch(a){case \"topFocus\":if(vc(e)||\"true\"===e.contentEditable)Nd=e,Od=b,Pd=null;break;case \"topBlur\":Pd=Od=Nd=null;break;case \"topMouseDown\":Qd=!0;break;case \"topContextMenu\":case \"topMouseUp\":return Qd=!1,Rd(c,d);case \"topSelectionChange\":if(Ld)break;\ncase \"topKeyDown\":case \"topKeyUp\":return Rd(c,d)}return null}};function Td(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Td,{animationName:null,elapsedTime:null,pseudoElement:null});function Ud(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(Ud,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}});function Vd(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(Vd,{relatedTarget:null});\nfunction Wd(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;return 32<=a||13===a?a:0}\nvar Xd={Esc:\"Escape\",Spacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Yd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",\n116:\"F5\",117:\"F6\",118:\"F7\",119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"};function Zd(a,b,c,d){return T.call(this,a,b,c,d)}\nbd.augmentClass(Zd,{key:function(a){if(a.key){var b=Xd[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=Wd(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Yd[a.keyCode]||\"Unidentified\":\"\"},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:ed,charCode:function(a){return\"keypress\"===a.type?Wd(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?Wd(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}});function $d(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass($d,{dataTransfer:null});function ae(a,b,c,d){return T.call(this,a,b,c,d)}bd.augmentClass(ae,{touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:ed});function be(a,b,c,d){return T.call(this,a,b,c,d)}T.augmentClass(be,{propertyName:null,elapsedTime:null,pseudoElement:null});\nfunction ce(a,b,c,d){return T.call(this,a,b,c,d)}fd.augmentClass(ce,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},deltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:null,deltaMode:null});var de={},ee={};\n\"abort animationEnd animationIteration animationStart blur cancel canPlay canPlayThrough click close contextMenu copy cut doubleClick drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error focus input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing progress rateChange reset scroll seeked seeking stalled submit suspend timeUpdate toggle touchCancel touchEnd touchMove touchStart transitionEnd volumeChange waiting wheel\".split(\" \").forEach(function(a){var b=a[0].toUpperCase()+\na.slice(1),c=\"on\"+b;b=\"top\"+b;c={phasedRegistrationNames:{bubbled:c,captured:c+\"Capture\"},dependencies:[b]};de[a]=c;ee[b]=c});\nvar fe={eventTypes:de,extractEvents:function(a,b,c,d){var e=ee[a];if(!e)return null;switch(a){case \"topKeyPress\":if(0===Wd(c))return null;case \"topKeyDown\":case \"topKeyUp\":a=Zd;break;case \"topBlur\":case \"topFocus\":a=Vd;break;case \"topClick\":if(2===c.button)return null;case \"topDoubleClick\":case \"topMouseDown\":case \"topMouseMove\":case \"topMouseUp\":case \"topMouseOut\":case \"topMouseOver\":case \"topContextMenu\":a=fd;break;case \"topDrag\":case \"topDragEnd\":case \"topDragEnter\":case \"topDragExit\":case \"topDragLeave\":case \"topDragOver\":case \"topDragStart\":case \"topDrop\":a=\n$d;break;case \"topTouchCancel\":case \"topTouchEnd\":case \"topTouchMove\":case \"topTouchStart\":a=ae;break;case \"topAnimationEnd\":case \"topAnimationIteration\":case \"topAnimationStart\":a=Td;break;case \"topTransitionEnd\":a=be;break;case \"topScroll\":a=bd;break;case \"topWheel\":a=ce;break;case \"topCopy\":case \"topCut\":case \"topPaste\":a=Ud;break;default:a=T}b=a.getPooled(e,b,c,d);Ab(b);return b}};sd=function(a,b,c,d){a=jb(a,b,c,d);kb(a);lb(!1)};hb.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nWa=sb.getFiberCurrentPropsFromNode;Xa=sb.getInstanceFromNode;Ya=sb.getNodeFromInstance;hb.injectEventPluginsByName({SimpleEventPlugin:fe,EnterLeaveEventPlugin:hd,ChangeEventPlugin:ad,SelectEventPlugin:Sd,BeforeInputEventPlugin:ic});var ge=[],he=-1;function V(a){0>he||(a.current=ge[he],ge[he]=null,he--)}function W(a,b){he++;ge[he]=a.current;a.current=b}new Set;var ie={current:D},X={current:!1},je=D;function ke(a){return le(a)?je:ie.current}\nfunction me(a,b){var c=a.type.contextTypes;if(!c)return D;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}function le(a){return 2===a.tag&&null!=a.type.childContextTypes}function ne(a){le(a)&&(V(X,a),V(ie,a))}\nfunction oe(a,b,c){null!=ie.cursor?E(\"168\"):void 0;W(ie,b,a);W(X,c,a)}function pe(a,b){var c=a.stateNode,d=a.type.childContextTypes;if(\"function\"!==typeof c.getChildContext)return b;c=c.getChildContext();for(var e in c)e in d?void 0:E(\"108\",jd(a)||\"Unknown\",e);return B({},b,c)}function qe(a){if(!le(a))return!1;var b=a.stateNode;b=b&&b.__reactInternalMemoizedMergedChildContext||D;je=ie.current;W(ie,b,a);W(X,X.current,a);return!0}\nfunction re(a,b){var c=a.stateNode;c?void 0:E(\"169\");if(b){var d=pe(a,je);c.__reactInternalMemoizedMergedChildContext=d;V(X,a);V(ie,a);W(ie,d,a)}else V(X,a);W(X,b,a)}\nfunction Y(a,b,c){this.tag=a;this.key=b;this.stateNode=this.type=null;this.sibling=this.child=this[\"return\"]=null;this.index=0;this.memoizedState=this.updateQueue=this.memoizedProps=this.pendingProps=this.ref=null;this.internalContextTag=c;this.effectTag=0;this.lastEffect=this.firstEffect=this.nextEffect=null;this.expirationTime=0;this.alternate=null}\nfunction se(a,b,c){var d=a.alternate;null===d?(d=new Y(a.tag,a.key,a.internalContextTag),d.type=a.type,d.stateNode=a.stateNode,d.alternate=a,a.alternate=d):(d.effectTag=0,d.nextEffect=null,d.firstEffect=null,d.lastEffect=null);d.expirationTime=c;d.pendingProps=b;d.child=a.child;d.memoizedProps=a.memoizedProps;d.memoizedState=a.memoizedState;d.updateQueue=a.updateQueue;d.sibling=a.sibling;d.index=a.index;d.ref=a.ref;return d}\nfunction te(a,b,c){var d=void 0,e=a.type,f=a.key;\"function\"===typeof e?(d=e.prototype&&e.prototype.isReactComponent?new Y(2,f,b):new Y(0,f,b),d.type=e,d.pendingProps=a.props):\"string\"===typeof e?(d=new Y(5,f,b),d.type=e,d.pendingProps=a.props):\"object\"===typeof e&&null!==e&&\"number\"===typeof e.tag?(d=e,d.pendingProps=a.props):E(\"130\",null==e?e:typeof e,\"\");d.expirationTime=c;return d}function ue(a,b,c,d){b=new Y(10,d,b);b.pendingProps=a;b.expirationTime=c;return b}\nfunction ve(a,b,c){b=new Y(6,null,b);b.pendingProps=a;b.expirationTime=c;return b}function we(a,b,c){b=new Y(7,a.key,b);b.type=a.handler;b.pendingProps=a;b.expirationTime=c;return b}function xe(a,b,c){a=new Y(9,null,b);a.expirationTime=c;return a}function ye(a,b,c){b=new Y(4,a.key,b);b.pendingProps=a.children||[];b.expirationTime=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}var ze=null,Ae=null;\nfunction Be(a){return function(b){try{return a(b)}catch(c){}}}function Ce(a){if(\"undefined\"===typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var b=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(b.isDisabled||!b.supportsFiber)return!0;try{var c=b.inject(a);ze=Be(function(a){return b.onCommitFiberRoot(c,a)});Ae=Be(function(a){return b.onCommitFiberUnmount(c,a)})}catch(d){}return!0}function De(a){\"function\"===typeof ze&&ze(a)}function Ee(a){\"function\"===typeof Ae&&Ae(a)}\nfunction Fe(a){return{baseState:a,expirationTime:0,first:null,last:null,callbackList:null,hasForceUpdate:!1,isInitialized:!1}}function Ge(a,b){null===a.last?a.first=a.last=b:(a.last.next=b,a.last=b);if(0===a.expirationTime||a.expirationTime>b.expirationTime)a.expirationTime=b.expirationTime}\nfunction He(a,b){var c=a.alternate,d=a.updateQueue;null===d&&(d=a.updateQueue=Fe(null));null!==c?(a=c.updateQueue,null===a&&(a=c.updateQueue=Fe(null))):a=null;a=a!==d?a:null;null===a?Ge(d,b):null===d.last||null===a.last?(Ge(d,b),Ge(a,b)):(Ge(d,b),a.last=b)}function Ie(a,b,c,d){a=a.partialState;return\"function\"===typeof a?a.call(b,c,d):a}\nfunction Je(a,b,c,d,e,f){null!==a&&a.updateQueue===c&&(c=b.updateQueue={baseState:c.baseState,expirationTime:c.expirationTime,first:c.first,last:c.last,isInitialized:c.isInitialized,callbackList:null,hasForceUpdate:!1});c.expirationTime=0;c.isInitialized?a=c.baseState:(a=c.baseState=b.memoizedState,c.isInitialized=!0);for(var g=!0,h=c.first,k=!1;null!==h;){var q=h.expirationTime;if(q>f){var v=c.expirationTime;if(0===v||v>q)c.expirationTime=q;k||(k=!0,c.baseState=a)}else{k||(c.first=h.next,null===\nc.first&&(c.last=null));if(h.isReplace)a=Ie(h,d,a,e),g=!0;else if(q=Ie(h,d,a,e))a=g?B({},a,q):B(a,q),g=!1;h.isForced&&(c.hasForceUpdate=!0);null!==h.callback&&(q=c.callbackList,null===q&&(q=c.callbackList=[]),q.push(h))}h=h.next}null!==c.callbackList?b.effectTag|=32:null!==c.first||c.hasForceUpdate||(b.updateQueue=null);k||(c.baseState=a);return a}\nfunction Ke(a,b){var c=a.callbackList;if(null!==c)for(a.callbackList=null,a=0;a<c.length;a++){var d=c[a],e=d.callback;d.callback=null;\"function\"!==typeof e?E(\"191\",e):void 0;e.call(b)}}\nfunction Le(a,b,c,d){function e(a,b){b.updater=f;a.stateNode=b;b._reactInternalFiber=a}var f={isMounted:ld,enqueueSetState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!1,isForced:!1,nextCallback:null,next:null});a(c,g)},enqueueReplaceState:function(c,d,e){c=c._reactInternalFiber;e=void 0===e?null:e;var g=b(c);He(c,{expirationTime:g,partialState:d,callback:e,isReplace:!0,isForced:!1,nextCallback:null,next:null});\na(c,g)},enqueueForceUpdate:function(c,d){c=c._reactInternalFiber;d=void 0===d?null:d;var e=b(c);He(c,{expirationTime:e,partialState:null,callback:d,isReplace:!1,isForced:!0,nextCallback:null,next:null});a(c,e)}};return{adoptClassInstance:e,constructClassInstance:function(a,b){var c=a.type,d=ke(a),f=2===a.tag&&null!=a.type.contextTypes,g=f?me(a,d):D;b=new c(b,g);e(a,b);f&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=d,a.__reactInternalMemoizedMaskedChildContext=g);return b},mountClassInstance:function(a,\nb){var c=a.alternate,d=a.stateNode,e=d.state||null,g=a.pendingProps;g?void 0:E(\"158\");var h=ke(a);d.props=g;d.state=a.memoizedState=e;d.refs=D;d.context=me(a,h);null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent&&(a.internalContextTag|=1);\"function\"===typeof d.componentWillMount&&(e=d.state,d.componentWillMount(),e!==d.state&&f.enqueueReplaceState(d,d.state,null),e=a.updateQueue,null!==e&&(d.state=Je(c,a,e,d,g,b)));\"function\"===typeof d.componentDidMount&&(a.effectTag|=\n4)},updateClassInstance:function(a,b,e){var g=b.stateNode;g.props=b.memoizedProps;g.state=b.memoizedState;var h=b.memoizedProps,k=b.pendingProps;k||(k=h,null==k?E(\"159\"):void 0);var u=g.context,z=ke(b);z=me(b,z);\"function\"!==typeof g.componentWillReceiveProps||h===k&&u===z||(u=g.state,g.componentWillReceiveProps(k,z),g.state!==u&&f.enqueueReplaceState(g,g.state,null));u=b.memoizedState;e=null!==b.updateQueue?Je(a,b,b.updateQueue,g,k,e):u;if(!(h!==k||u!==e||X.current||null!==b.updateQueue&&b.updateQueue.hasForceUpdate))return\"function\"!==\ntypeof g.componentDidUpdate||h===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),!1;var G=k;if(null===h||null!==b.updateQueue&&b.updateQueue.hasForceUpdate)G=!0;else{var I=b.stateNode,L=b.type;G=\"function\"===typeof I.shouldComponentUpdate?I.shouldComponentUpdate(G,e,z):L.prototype&&L.prototype.isPureReactComponent?!ea(h,G)||!ea(u,e):!0}G?(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(k,e,z),\"function\"===typeof g.componentDidUpdate&&(b.effectTag|=4)):(\"function\"!==typeof g.componentDidUpdate||\nh===a.memoizedProps&&u===a.memoizedState||(b.effectTag|=4),c(b,k),d(b,e));g.props=k;g.state=e;g.context=z;return G}}}var Qe=\"function\"===typeof Symbol&&Symbol[\"for\"],Re=Qe?Symbol[\"for\"](\"react.element\"):60103,Se=Qe?Symbol[\"for\"](\"react.call\"):60104,Te=Qe?Symbol[\"for\"](\"react.return\"):60105,Ue=Qe?Symbol[\"for\"](\"react.portal\"):60106,Ve=Qe?Symbol[\"for\"](\"react.fragment\"):60107,We=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction Xe(a){if(null===a||\"undefined\"===typeof a)return null;a=We&&a[We]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var Ye=Array.isArray;\nfunction Ze(a,b){var c=b.ref;if(null!==c&&\"function\"!==typeof c){if(b._owner){b=b._owner;var d=void 0;b&&(2!==b.tag?E(\"110\"):void 0,d=b.stateNode);d?void 0:E(\"147\",c);var e=\"\"+c;if(null!==a&&null!==a.ref&&a.ref._stringRef===e)return a.ref;a=function(a){var b=d.refs===D?d.refs={}:d.refs;null===a?delete b[e]:b[e]=a};a._stringRef=e;return a}\"string\"!==typeof c?E(\"148\"):void 0;b._owner?void 0:E(\"149\",c)}return c}\nfunction $e(a,b){\"textarea\"!==a.type&&E(\"31\",\"[object Object]\"===Object.prototype.toString.call(b)?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":b,\"\")}\nfunction af(a){function b(b,c){if(a){var d=b.lastEffect;null!==d?(d.nextEffect=c,b.lastEffect=c):b.firstEffect=b.lastEffect=c;c.nextEffect=null;c.effectTag=8}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b,c){a=se(a,b,c);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.effectTag=\n2,c):d;b.effectTag=2;return c}function g(b){a&&null===b.alternate&&(b.effectTag=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=ve(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function k(a,b,c,d){if(null!==b&&b.type===c.type)return d=e(b,c.props,d),d.ref=Ze(b,c),d[\"return\"]=a,d;d=te(c,a.internalContextTag,d);d.ref=Ze(b,c);d[\"return\"]=a;return d}function q(a,b,c,d){if(null===b||7!==b.tag)return b=we(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c,d);\nb[\"return\"]=a;return b}function v(a,b,c,d){if(null===b||9!==b.tag)return b=xe(c,a.internalContextTag,d),b.type=c.value,b[\"return\"]=a,b;b=e(b,null,d);b.type=c.value;b[\"return\"]=a;return b}function y(a,b,c,d){if(null===b||4!==b.tag||b.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=ye(c,a.internalContextTag,d),b[\"return\"]=a,b;b=e(b,c.children||[],d);b[\"return\"]=a;return b}function u(a,b,c,d,f){if(null===b||10!==b.tag)return b=ue(c,a.internalContextTag,\nd,f),b[\"return\"]=a,b;b=e(b,c,d);b[\"return\"]=a;return b}function z(a,b,c){if(\"string\"===typeof b||\"number\"===typeof b)return b=ve(\"\"+b,a.internalContextTag,c),b[\"return\"]=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case Re:if(b.type===Ve)return b=ue(b.props.children,a.internalContextTag,c,b.key),b[\"return\"]=a,b;c=te(b,a.internalContextTag,c);c.ref=Ze(null,b);c[\"return\"]=a;return c;case Se:return b=we(b,a.internalContextTag,c),b[\"return\"]=a,b;case Te:return c=xe(b,a.internalContextTag,\nc),c.type=b.value,c[\"return\"]=a,c;case Ue:return b=ye(b,a.internalContextTag,c),b[\"return\"]=a,b}if(Ye(b)||Xe(b))return b=ue(b,a.internalContextTag,c,null),b[\"return\"]=a,b;$e(a,b)}return null}function G(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case Re:return c.key===e?c.type===Ve?u(a,b,c.props.children,d,e):k(a,b,c,d):null;case Se:return c.key===e?q(a,b,c,d):null;case Te:return null===\ne?v(a,b,c,d):null;case Ue:return c.key===e?y(a,b,c,d):null}if(Ye(c)||Xe(c))return null!==e?null:u(a,b,c,d,null);$e(a,c)}return null}function I(a,b,c,d,e){if(\"string\"===typeof d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case Re:return a=a.get(null===d.key?c:d.key)||null,d.type===Ve?u(b,a,d.props.children,e,d.key):k(b,a,d,e);case Se:return a=a.get(null===d.key?c:d.key)||null,q(b,a,d,e);case Te:return a=a.get(c)||null,v(b,a,d,e);case Ue:return a=\na.get(null===d.key?c:d.key)||null,y(b,a,d,e)}if(Ye(d)||Xe(d))return a=a.get(c)||null,u(b,a,d,e,null);$e(b,d)}return null}function L(e,g,m,A){for(var h=null,r=null,n=g,w=g=0,k=null;null!==n&&w<m.length;w++){n.index>w?(k=n,n=null):k=n.sibling;var x=G(e,n,m[w],A);if(null===x){null===n&&(n=k);break}a&&n&&null===x.alternate&&b(e,n);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x;n=k}if(w===m.length)return c(e,n),h;if(null===n){for(;w<m.length;w++)if(n=z(e,m[w],A))g=f(n,g,w),null===r?h=n:r.sibling=n,r=n;return h}for(n=\nd(e,n);w<m.length;w++)if(k=I(n,e,w,m[w],A)){if(a&&null!==k.alternate)n[\"delete\"](null===k.key?w:k.key);g=f(k,g,w);null===r?h=k:r.sibling=k;r=k}a&&n.forEach(function(a){return b(e,a)});return h}function N(e,g,m,A){var h=Xe(m);\"function\"!==typeof h?E(\"150\"):void 0;m=h.call(m);null==m?E(\"151\"):void 0;for(var r=h=null,n=g,w=g=0,k=null,x=m.next();null!==n&&!x.done;w++,x=m.next()){n.index>w?(k=n,n=null):k=n.sibling;var J=G(e,n,x.value,A);if(null===J){n||(n=k);break}a&&n&&null===J.alternate&&b(e,n);g=f(J,\ng,w);null===r?h=J:r.sibling=J;r=J;n=k}if(x.done)return c(e,n),h;if(null===n){for(;!x.done;w++,x=m.next())x=z(e,x.value,A),null!==x&&(g=f(x,g,w),null===r?h=x:r.sibling=x,r=x);return h}for(n=d(e,n);!x.done;w++,x=m.next())if(x=I(n,e,w,x.value,A),null!==x){if(a&&null!==x.alternate)n[\"delete\"](null===x.key?w:x.key);g=f(x,g,w);null===r?h=x:r.sibling=x;r=x}a&&n.forEach(function(a){return b(e,a)});return h}return function(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===Ve&&null===f.key&&(f=f.props.children);\nvar m=\"object\"===typeof f&&null!==f;if(m)switch(f.$$typeof){case Re:a:{var r=f.key;for(m=d;null!==m;){if(m.key===r)if(10===m.tag?f.type===Ve:m.type===f.type){c(a,m.sibling);d=e(m,f.type===Ve?f.props.children:f.props,h);d.ref=Ze(m,f);d[\"return\"]=a;a=d;break a}else{c(a,m);break}else b(a,m);m=m.sibling}f.type===Ve?(d=ue(f.props.children,a.internalContextTag,h,f.key),d[\"return\"]=a,a=d):(h=te(f,a.internalContextTag,h),h.ref=Ze(d,f),h[\"return\"]=a,a=h)}return g(a);case Se:a:{for(m=f.key;null!==d;){if(d.key===\nm)if(7===d.tag){c(a,d.sibling);d=e(d,f,h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=we(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a);case Te:a:{if(null!==d)if(9===d.tag){c(a,d.sibling);d=e(d,null,h);d.type=f.value;d[\"return\"]=a;a=d;break a}else c(a,d);d=xe(f,a.internalContextTag,h);d.type=f.value;d[\"return\"]=a;a=d}return g(a);case Ue:a:{for(m=f.key;null!==d;){if(d.key===m)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===\nf.implementation){c(a,d.sibling);d=e(d,f.children||[],h);d[\"return\"]=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=ye(f,a.internalContextTag,h);d[\"return\"]=a;a=d}return g(a)}if(\"string\"===typeof f||\"number\"===typeof f)return f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f,h)):(c(a,d),d=ve(f,a.internalContextTag,h)),d[\"return\"]=a,a=d,g(a);if(Ye(f))return L(a,d,f,h);if(Xe(f))return N(a,d,f,h);m&&$e(a,f);if(\"undefined\"===typeof f)switch(a.tag){case 2:case 1:h=a.type,E(\"152\",h.displayName||\nh.name||\"Component\")}return c(a,d)}}var bf=af(!0),cf=af(!1);\nfunction df(a,b,c,d,e){function f(a,b,c){var d=b.expirationTime;b.child=null===a?cf(b,null,c,d):bf(b,a.child,c,d)}function g(a,b){var c=b.ref;null===c||a&&a.ref===c||(b.effectTag|=128)}function h(a,b,c,d){g(a,b);if(!c)return d&&re(b,!1),q(a,b);c=b.stateNode;id.current=b;var e=c.render();b.effectTag|=1;f(a,b,e);b.memoizedState=c.state;b.memoizedProps=c.props;d&&re(b,!0);return b.child}function k(a){var b=a.stateNode;b.pendingContext?oe(a,b.pendingContext,b.pendingContext!==b.context):b.context&&oe(a,\nb.context,!1);I(a,b.containerInfo)}function q(a,b){null!==a&&b.child!==a.child?E(\"153\"):void 0;if(null!==b.child){a=b.child;var c=se(a,a.pendingProps,a.expirationTime);b.child=c;for(c[\"return\"]=b;null!==a.sibling;)a=a.sibling,c=c.sibling=se(a,a.pendingProps,a.expirationTime),c[\"return\"]=b;c.sibling=null}return b.child}function v(a,b){switch(b.tag){case 3:k(b);break;case 2:qe(b);break;case 4:I(b,b.stateNode.containerInfo)}return null}var y=a.shouldSetTextContent,u=a.useSyncScheduling,z=a.shouldDeprioritizeSubtree,\nG=b.pushHostContext,I=b.pushHostContainer,L=c.enterHydrationState,N=c.resetHydrationState,J=c.tryToClaimNextHydratableInstance;a=Le(d,e,function(a,b){a.memoizedProps=b},function(a,b){a.memoizedState=b});var w=a.adoptClassInstance,m=a.constructClassInstance,A=a.mountClassInstance,Ob=a.updateClassInstance;return{beginWork:function(a,b,c){if(0===b.expirationTime||b.expirationTime>c)return v(a,b);switch(b.tag){case 0:null!==a?E(\"155\"):void 0;var d=b.type,e=b.pendingProps,r=ke(b);r=me(b,r);d=d(e,r);b.effectTag|=\n1;\"object\"===typeof d&&null!==d&&\"function\"===typeof d.render?(b.tag=2,e=qe(b),w(b,d),A(b,c),b=h(a,b,!0,e)):(b.tag=1,f(a,b,d),b.memoizedProps=e,b=b.child);return b;case 1:a:{e=b.type;c=b.pendingProps;d=b.memoizedProps;if(X.current)null===c&&(c=d);else if(null===c||d===c){b=q(a,b);break a}d=ke(b);d=me(b,d);e=e(c,d);b.effectTag|=1;f(a,b,e);b.memoizedProps=c;b=b.child}return b;case 2:return e=qe(b),d=void 0,null===a?b.stateNode?E(\"153\"):(m(b,b.pendingProps),A(b,c),d=!0):d=Ob(a,b,c),h(a,b,d,e);case 3:return k(b),\ne=b.updateQueue,null!==e?(d=b.memoizedState,e=Je(a,b,e,null,null,c),d===e?(N(),b=q(a,b)):(d=e.element,r=b.stateNode,(null===a||null===a.child)&&r.hydrate&&L(b)?(b.effectTag|=2,b.child=cf(b,null,d,c)):(N(),f(a,b,d)),b.memoizedState=e,b=b.child)):(N(),b=q(a,b)),b;case 5:G(b);null===a&&J(b);e=b.type;var n=b.memoizedProps;d=b.pendingProps;null===d&&(d=n,null===d?E(\"154\"):void 0);r=null!==a?a.memoizedProps:null;X.current||null!==d&&n!==d?(n=d.children,y(e,d)?n=null:r&&y(e,r)&&(b.effectTag|=16),g(a,b),\n2147483647!==c&&!u&&z(e,d)?(b.expirationTime=2147483647,b=null):(f(a,b,n),b.memoizedProps=d,b=b.child)):b=q(a,b);return b;case 6:return null===a&&J(b),a=b.pendingProps,null===a&&(a=b.memoizedProps),b.memoizedProps=a,null;case 8:b.tag=7;case 7:e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null===e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e)e=b.memoizedProps;d=e.children;b.stateNode=null===a?cf(b,b.stateNode,d,c):bf(b,b.stateNode,d,c);b.memoizedProps=e;return b.stateNode;\ncase 9:return null;case 4:a:{I(b,b.stateNode.containerInfo);e=b.pendingProps;if(X.current)null===e&&(e=a&&a.memoizedProps,null==e?E(\"154\"):void 0);else if(null===e||b.memoizedProps===e){b=q(a,b);break a}null===a?b.child=bf(b,null,e,c):f(a,b,e);b.memoizedProps=e;b=b.child}return b;case 10:a:{c=b.pendingProps;if(X.current)null===c&&(c=b.memoizedProps);else if(null===c||b.memoizedProps===c){b=q(a,b);break a}f(a,b,c);b.memoizedProps=c;b=b.child}return b;default:E(\"156\")}},beginFailedWork:function(a,b,\nc){switch(b.tag){case 2:qe(b);break;case 3:k(b);break;default:E(\"157\")}b.effectTag|=64;null===a?b.child=null:b.child!==a.child&&(b.child=a.child);if(0===b.expirationTime||b.expirationTime>c)return v(a,b);b.firstEffect=null;b.lastEffect=null;b.child=null===a?cf(b,null,null,c):bf(b,a.child,null,c);2===b.tag&&(a=b.stateNode,b.memoizedProps=a.props,b.memoizedState=a.state);return b.child}}}\nfunction ef(a,b,c){function d(a){a.effectTag|=4}var e=a.createInstance,f=a.createTextInstance,g=a.appendInitialChild,h=a.finalizeInitialChildren,k=a.prepareUpdate,q=a.persistence,v=b.getRootHostContainer,y=b.popHostContext,u=b.getHostContext,z=b.popHostContainer,G=c.prepareToHydrateHostInstance,I=c.prepareToHydrateHostTextInstance,L=c.popHydrationState,N=void 0,J=void 0,w=void 0;a.mutation?(N=function(){},J=function(a,b,c){(b.updateQueue=c)&&d(b)},w=function(a,b,c,e){c!==e&&d(b)}):q?E(\"235\"):E(\"236\");\nreturn{completeWork:function(a,b,c){var m=b.pendingProps;if(null===m)m=b.memoizedProps;else if(2147483647!==b.expirationTime||2147483647===c)b.pendingProps=null;switch(b.tag){case 1:return null;case 2:return ne(b),null;case 3:z(b);V(X,b);V(ie,b);m=b.stateNode;m.pendingContext&&(m.context=m.pendingContext,m.pendingContext=null);if(null===a||null===a.child)L(b),b.effectTag&=-3;N(b);return null;case 5:y(b);c=v();var A=b.type;if(null!==a&&null!=b.stateNode){var p=a.memoizedProps,q=b.stateNode,x=u();q=\nk(q,A,p,m,c,x);J(a,b,q,A,p,m,c);a.ref!==b.ref&&(b.effectTag|=128)}else{if(!m)return null===b.stateNode?E(\"166\"):void 0,null;a=u();if(L(b))G(b,c,a)&&d(b);else{a=e(A,m,c,a,b);a:for(p=b.child;null!==p;){if(5===p.tag||6===p.tag)g(a,p.stateNode);else if(4!==p.tag&&null!==p.child){p.child[\"return\"]=p;p=p.child;continue}if(p===b)break;for(;null===p.sibling;){if(null===p[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}h(a,A,m,c)&&d(b);b.stateNode=a}null!==b.ref&&\n(b.effectTag|=128)}return null;case 6:if(a&&null!=b.stateNode)w(a,b,a.memoizedProps,m);else{if(\"string\"!==typeof m)return null===b.stateNode?E(\"166\"):void 0,null;a=v();c=u();L(b)?I(b)&&d(b):b.stateNode=f(m,a,c,b)}return null;case 7:(m=b.memoizedProps)?void 0:E(\"165\");b.tag=8;A=[];a:for((p=b.stateNode)&&(p[\"return\"]=b);null!==p;){if(5===p.tag||6===p.tag||4===p.tag)E(\"247\");else if(9===p.tag)A.push(p.type);else if(null!==p.child){p.child[\"return\"]=p;p=p.child;continue}for(;null===p.sibling;){if(null===\np[\"return\"]||p[\"return\"]===b)break a;p=p[\"return\"]}p.sibling[\"return\"]=p[\"return\"];p=p.sibling}p=m.handler;m=p(m.props,A);b.child=bf(b,null!==a?a.child:null,m,c);return b.child;case 8:return b.tag=7,null;case 9:return null;case 10:return null;case 4:return z(b),N(b),null;case 0:E(\"167\");default:E(\"156\")}}}}\nfunction ff(a,b){function c(a){var c=a.ref;if(null!==c)try{c(null)}catch(A){b(a,A)}}function d(a){\"function\"===typeof Ee&&Ee(a);switch(a.tag){case 2:c(a);var d=a.stateNode;if(\"function\"===typeof d.componentWillUnmount)try{d.props=a.memoizedProps,d.state=a.memoizedState,d.componentWillUnmount()}catch(A){b(a,A)}break;case 5:c(a);break;case 7:e(a.stateNode);break;case 4:k&&g(a)}}function e(a){for(var b=a;;)if(d(b),null===b.child||k&&4===b.tag){if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||\nb[\"return\"]===a)return;b=b[\"return\"]}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}else b.child[\"return\"]=b,b=b.child}function f(a){return 5===a.tag||3===a.tag||4===a.tag}function g(a){for(var b=a,c=!1,f=void 0,g=void 0;;){if(!c){c=b[\"return\"];a:for(;;){null===c?E(\"160\"):void 0;switch(c.tag){case 5:f=c.stateNode;g=!1;break a;case 3:f=c.stateNode.containerInfo;g=!0;break a;case 4:f=c.stateNode.containerInfo;g=!0;break a}c=c[\"return\"]}c=!0}if(5===b.tag||6===b.tag)e(b),g?J(f,b.stateNode):N(f,b.stateNode);\nelse if(4===b.tag?f=b.stateNode.containerInfo:d(b),null!==b.child){b.child[\"return\"]=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b[\"return\"]||b[\"return\"]===a)return;b=b[\"return\"];4===b.tag&&(c=!1)}b.sibling[\"return\"]=b[\"return\"];b=b.sibling}}var h=a.getPublicInstance,k=a.mutation;a=a.persistence;k||(a?E(\"235\"):E(\"236\"));var q=k.commitMount,v=k.commitUpdate,y=k.resetTextContent,u=k.commitTextUpdate,z=k.appendChild,G=k.appendChildToContainer,I=k.insertBefore,L=k.insertInContainerBefore,\nN=k.removeChild,J=k.removeChildFromContainer;return{commitResetTextContent:function(a){y(a.stateNode)},commitPlacement:function(a){a:{for(var b=a[\"return\"];null!==b;){if(f(b)){var c=b;break a}b=b[\"return\"]}E(\"160\");c=void 0}var d=b=void 0;switch(c.tag){case 5:b=c.stateNode;d=!1;break;case 3:b=c.stateNode.containerInfo;d=!0;break;case 4:b=c.stateNode.containerInfo;d=!0;break;default:E(\"161\")}c.effectTag&16&&(y(b),c.effectTag&=-17);a:b:for(c=a;;){for(;null===c.sibling;){if(null===c[\"return\"]||f(c[\"return\"])){c=\nnull;break a}c=c[\"return\"]}c.sibling[\"return\"]=c[\"return\"];for(c=c.sibling;5!==c.tag&&6!==c.tag;){if(c.effectTag&2)continue b;if(null===c.child||4===c.tag)continue b;else c.child[\"return\"]=c,c=c.child}if(!(c.effectTag&2)){c=c.stateNode;break a}}for(var e=a;;){if(5===e.tag||6===e.tag)c?d?L(b,e.stateNode,c):I(b,e.stateNode,c):d?G(b,e.stateNode):z(b,e.stateNode);else if(4!==e.tag&&null!==e.child){e.child[\"return\"]=e;e=e.child;continue}if(e===a)break;for(;null===e.sibling;){if(null===e[\"return\"]||e[\"return\"]===\na)return;e=e[\"return\"]}e.sibling[\"return\"]=e[\"return\"];e=e.sibling}},commitDeletion:function(a){g(a);a[\"return\"]=null;a.child=null;a.alternate&&(a.alternate.child=null,a.alternate[\"return\"]=null)},commitWork:function(a,b){switch(b.tag){case 2:break;case 5:var c=b.stateNode;if(null!=c){var d=b.memoizedProps;a=null!==a?a.memoizedProps:d;var e=b.type,f=b.updateQueue;b.updateQueue=null;null!==f&&v(c,f,e,a,d,b)}break;case 6:null===b.stateNode?E(\"162\"):void 0;c=b.memoizedProps;u(b.stateNode,null!==a?a.memoizedProps:\nc,c);break;case 3:break;default:E(\"163\")}},commitLifeCycles:function(a,b){switch(b.tag){case 2:var c=b.stateNode;if(b.effectTag&4)if(null===a)c.props=b.memoizedProps,c.state=b.memoizedState,c.componentDidMount();else{var d=a.memoizedProps;a=a.memoizedState;c.props=b.memoizedProps;c.state=b.memoizedState;c.componentDidUpdate(d,a)}b=b.updateQueue;null!==b&&Ke(b,c);break;case 3:c=b.updateQueue;null!==c&&Ke(c,null!==b.child?b.child.stateNode:null);break;case 5:c=b.stateNode;null===a&&b.effectTag&4&&q(c,\nb.type,b.memoizedProps,b);break;case 6:break;case 4:break;default:E(\"163\")}},commitAttachRef:function(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:b(h(c));break;default:b(c)}}},commitDetachRef:function(a){a=a.ref;null!==a&&a(null)}}}var gf={};\nfunction hf(a){function b(a){a===gf?E(\"174\"):void 0;return a}var c=a.getChildHostContext,d=a.getRootHostContext,e={current:gf},f={current:gf},g={current:gf};return{getHostContext:function(){return b(e.current)},getRootHostContainer:function(){return b(g.current)},popHostContainer:function(a){V(e,a);V(f,a);V(g,a)},popHostContext:function(a){f.current===a&&(V(e,a),V(f,a))},pushHostContainer:function(a,b){W(g,b,a);b=d(b);W(f,a,a);W(e,b,a)},pushHostContext:function(a){var d=b(g.current),h=b(e.current);\nd=c(h,a.type,d);h!==d&&(W(f,a,a),W(e,d,a))},resetHostContainer:function(){e.current=gf;g.current=gf}}}\nfunction jf(a){function b(a,b){var c=new Y(5,null,0);c.type=\"DELETED\";c.stateNode=b;c[\"return\"]=a;c.effectTag=8;null!==a.lastEffect?(a.lastEffect.nextEffect=c,a.lastEffect=c):a.firstEffect=a.lastEffect=c}function c(a,b){switch(a.tag){case 5:return b=f(b,a.type,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;case 6:return b=g(b,a.pendingProps),null!==b?(a.stateNode=b,!0):!1;default:return!1}}function d(a){for(a=a[\"return\"];null!==a&&5!==a.tag&&3!==a.tag;)a=a[\"return\"];y=a}var e=a.shouldSetTextContent;\na=a.hydration;if(!a)return{enterHydrationState:function(){return!1},resetHydrationState:function(){},tryToClaimNextHydratableInstance:function(){},prepareToHydrateHostInstance:function(){E(\"175\")},prepareToHydrateHostTextInstance:function(){E(\"176\")},popHydrationState:function(){return!1}};var f=a.canHydrateInstance,g=a.canHydrateTextInstance,h=a.getNextHydratableSibling,k=a.getFirstHydratableChild,q=a.hydrateInstance,v=a.hydrateTextInstance,y=null,u=null,z=!1;return{enterHydrationState:function(a){u=\nk(a.stateNode.containerInfo);y=a;return z=!0},resetHydrationState:function(){u=y=null;z=!1},tryToClaimNextHydratableInstance:function(a){if(z){var d=u;if(d){if(!c(a,d)){d=h(d);if(!d||!c(a,d)){a.effectTag|=2;z=!1;y=a;return}b(y,u)}y=a;u=k(d)}else a.effectTag|=2,z=!1,y=a}},prepareToHydrateHostInstance:function(a,b,c){b=q(a.stateNode,a.type,a.memoizedProps,b,c,a);a.updateQueue=b;return null!==b?!0:!1},prepareToHydrateHostTextInstance:function(a){return v(a.stateNode,a.memoizedProps,a)},popHydrationState:function(a){if(a!==\ny)return!1;if(!z)return d(a),z=!0,!1;var c=a.type;if(5!==a.tag||\"head\"!==c&&\"body\"!==c&&!e(c,a.memoizedProps))for(c=u;c;)b(a,c),c=h(c);d(a);u=y?h(a.stateNode):null;return!0}}}\nfunction kf(a){function b(a){Qb=ja=!0;var b=a.stateNode;b.current===a?E(\"177\"):void 0;b.isReadyForCommit=!1;id.current=null;if(1<a.effectTag)if(null!==a.lastEffect){a.lastEffect.nextEffect=a;var c=a.firstEffect}else c=a;else c=a.firstEffect;yg();for(t=c;null!==t;){var d=!1,e=void 0;try{for(;null!==t;){var f=t.effectTag;f&16&&zg(t);if(f&128){var g=t.alternate;null!==g&&Ag(g)}switch(f&-242){case 2:Ne(t);t.effectTag&=-3;break;case 6:Ne(t);t.effectTag&=-3;Oe(t.alternate,t);break;case 4:Oe(t.alternate,\nt);break;case 8:Sc=!0,Bg(t),Sc=!1}t=t.nextEffect}}catch(Tc){d=!0,e=Tc}d&&(null===t?E(\"178\"):void 0,h(t,e),null!==t&&(t=t.nextEffect))}Cg();b.current=a;for(t=c;null!==t;){c=!1;d=void 0;try{for(;null!==t;){var k=t.effectTag;k&36&&Dg(t.alternate,t);k&128&&Eg(t);if(k&64)switch(e=t,f=void 0,null!==R&&(f=R.get(e),R[\"delete\"](e),null==f&&null!==e.alternate&&(e=e.alternate,f=R.get(e),R[\"delete\"](e))),null==f?E(\"184\"):void 0,e.tag){case 2:e.stateNode.componentDidCatch(f.error,{componentStack:f.componentStack});\nbreak;case 3:null===ca&&(ca=f.error);break;default:E(\"157\")}var Qc=t.nextEffect;t.nextEffect=null;t=Qc}}catch(Tc){c=!0,d=Tc}c&&(null===t?E(\"178\"):void 0,h(t,d),null!==t&&(t=t.nextEffect))}ja=Qb=!1;\"function\"===typeof De&&De(a.stateNode);ha&&(ha.forEach(G),ha=null);null!==ca&&(a=ca,ca=null,Ob(a));b=b.current.expirationTime;0===b&&(qa=R=null);return b}function c(a){for(;;){var b=Fg(a.alternate,a,H),c=a[\"return\"],d=a.sibling;var e=a;if(2147483647===H||2147483647!==e.expirationTime){if(2!==e.tag&&3!==\ne.tag)var f=0;else f=e.updateQueue,f=null===f?0:f.expirationTime;for(var g=e.child;null!==g;)0!==g.expirationTime&&(0===f||f>g.expirationTime)&&(f=g.expirationTime),g=g.sibling;e.expirationTime=f}if(null!==b)return b;null!==c&&(null===c.firstEffect&&(c.firstEffect=a.firstEffect),null!==a.lastEffect&&(null!==c.lastEffect&&(c.lastEffect.nextEffect=a.firstEffect),c.lastEffect=a.lastEffect),1<a.effectTag&&(null!==c.lastEffect?c.lastEffect.nextEffect=a:c.firstEffect=a,c.lastEffect=a));if(null!==d)return d;\nif(null!==c)a=c;else{a.stateNode.isReadyForCommit=!0;break}}return null}function d(a){var b=rg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function e(a){var b=Gg(a.alternate,a,H);null===b&&(b=c(a));id.current=null;return b}function f(a){if(null!==R){if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=k(F)?e(F):d(F);else for(;null!==F&&!A();)F=k(F)?e(F):d(F)}else if(!(0===H||H>a))if(H<=Uc)for(;null!==F;)F=d(F);else for(;null!==F&&!A();)F=d(F)}function g(a,b){ja?E(\"243\"):void 0;ja=!0;a.isReadyForCommit=\n!1;if(a!==ra||b!==H||null===F){for(;-1<he;)ge[he]=null,he--;je=D;ie.current=D;X.current=!1;x();ra=a;H=b;F=se(ra.current,null,b)}var c=!1,d=null;try{f(b)}catch(Rc){c=!0,d=Rc}for(;c;){if(eb){ca=d;break}var g=F;if(null===g)eb=!0;else{var k=h(g,d);null===k?E(\"183\"):void 0;if(!eb){try{c=k;d=b;for(k=c;null!==g;){switch(g.tag){case 2:ne(g);break;case 5:qg(g);break;case 3:p(g);break;case 4:p(g)}if(g===k||g.alternate===k)break;g=g[\"return\"]}F=e(c);f(d)}catch(Rc){c=!0;d=Rc;continue}break}}}b=ca;eb=ja=!1;ca=\nnull;null!==b&&Ob(b);return a.isReadyForCommit?a.current.alternate:null}function h(a,b){var c=id.current=null,d=!1,e=!1,f=null;if(3===a.tag)c=a,q(a)&&(eb=!0);else for(var g=a[\"return\"];null!==g&&null===c;){2===g.tag?\"function\"===typeof g.stateNode.componentDidCatch&&(d=!0,f=jd(g),c=g,e=!0):3===g.tag&&(c=g);if(q(g)){if(Sc||null!==ha&&(ha.has(g)||null!==g.alternate&&ha.has(g.alternate)))return null;c=null;e=!1}g=g[\"return\"]}if(null!==c){null===qa&&(qa=new Set);qa.add(c);var h=\"\";g=a;do{a:switch(g.tag){case 0:case 1:case 2:case 5:var k=\ng._debugOwner,Qc=g._debugSource;var m=jd(g);var n=null;k&&(n=jd(k));k=Qc;m=\"\\n    in \"+(m||\"Unknown\")+(k?\" (at \"+k.fileName.replace(/^.*[\\\\\\/]/,\"\")+\":\"+k.lineNumber+\")\":n?\" (created by \"+n+\")\":\"\");break a;default:m=\"\"}h+=m;g=g[\"return\"]}while(g);g=h;a=jd(a);null===R&&(R=new Map);b={componentName:a,componentStack:g,error:b,errorBoundary:d?c.stateNode:null,errorBoundaryFound:d,errorBoundaryName:f,willRetry:e};R.set(c,b);try{var p=b.error;p&&p.suppressReactErrorLogging||console.error(p)}catch(Vc){Vc&&\nVc.suppressReactErrorLogging||console.error(Vc)}Qb?(null===ha&&(ha=new Set),ha.add(c)):G(c);return c}null===ca&&(ca=b);return null}function k(a){return null!==R&&(R.has(a)||null!==a.alternate&&R.has(a.alternate))}function q(a){return null!==qa&&(qa.has(a)||null!==a.alternate&&qa.has(a.alternate))}function v(){return 20*(((I()+100)/20|0)+1)}function y(a){return 0!==ka?ka:ja?Qb?1:H:!Hg||a.internalContextTag&1?v():1}function u(a,b){return z(a,b,!1)}function z(a,b){for(;null!==a;){if(0===a.expirationTime||\na.expirationTime>b)a.expirationTime=b;null!==a.alternate&&(0===a.alternate.expirationTime||a.alternate.expirationTime>b)&&(a.alternate.expirationTime=b);if(null===a[\"return\"])if(3===a.tag){var c=a.stateNode;!ja&&c===ra&&b<H&&(F=ra=null,H=0);var d=c,e=b;Rb>Ig&&E(\"185\");if(null===d.nextScheduledRoot)d.remainingExpirationTime=e,null===O?(sa=O=d,d.nextScheduledRoot=d):(O=O.nextScheduledRoot=d,O.nextScheduledRoot=sa);else{var f=d.remainingExpirationTime;if(0===f||e<f)d.remainingExpirationTime=e}Fa||(la?\nSb&&(ma=d,na=1,m(ma,na)):1===e?w(1,null):L(e));!ja&&c===ra&&b<H&&(F=ra=null,H=0)}else break;a=a[\"return\"]}}function G(a){z(a,1,!0)}function I(){return Uc=((Wc()-Pe)/10|0)+2}function L(a){if(0!==Tb){if(a>Tb)return;Jg(Xc)}var b=Wc()-Pe;Tb=a;Xc=Kg(J,{timeout:10*(a-2)-b})}function N(){var a=0,b=null;if(null!==O)for(var c=O,d=sa;null!==d;){var e=d.remainingExpirationTime;if(0===e){null===c||null===O?E(\"244\"):void 0;if(d===d.nextScheduledRoot){sa=O=d.nextScheduledRoot=null;break}else if(d===sa)sa=e=d.nextScheduledRoot,\nO.nextScheduledRoot=e,d.nextScheduledRoot=null;else if(d===O){O=c;O.nextScheduledRoot=sa;d.nextScheduledRoot=null;break}else c.nextScheduledRoot=d.nextScheduledRoot,d.nextScheduledRoot=null;d=c.nextScheduledRoot}else{if(0===a||e<a)a=e,b=d;if(d===O)break;c=d;d=d.nextScheduledRoot}}c=ma;null!==c&&c===b?Rb++:Rb=0;ma=b;na=a}function J(a){w(0,a)}function w(a,b){fb=b;for(N();null!==ma&&0!==na&&(0===a||na<=a)&&!Yc;)m(ma,na),N();null!==fb&&(Tb=0,Xc=-1);0!==na&&L(na);fb=null;Yc=!1;Rb=0;if(Ub)throw a=Zc,Zc=\nnull,Ub=!1,a;}function m(a,c){Fa?E(\"245\"):void 0;Fa=!0;if(c<=I()){var d=a.finishedWork;null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(a.remainingExpirationTime=b(d)))}else d=a.finishedWork,null!==d?(a.finishedWork=null,a.remainingExpirationTime=b(d)):(a.finishedWork=null,d=g(a,c),null!==d&&(A()?a.finishedWork=d:a.remainingExpirationTime=b(d)));Fa=!1}function A(){return null===fb||fb.timeRemaining()>Lg?!1:Yc=!0}function Ob(a){null===ma?E(\"246\"):\nvoid 0;ma.remainingExpirationTime=0;Ub||(Ub=!0,Zc=a)}var r=hf(a),n=jf(a),p=r.popHostContainer,qg=r.popHostContext,x=r.resetHostContainer,Me=df(a,r,n,u,y),rg=Me.beginWork,Gg=Me.beginFailedWork,Fg=ef(a,r,n).completeWork;r=ff(a,h);var zg=r.commitResetTextContent,Ne=r.commitPlacement,Bg=r.commitDeletion,Oe=r.commitWork,Dg=r.commitLifeCycles,Eg=r.commitAttachRef,Ag=r.commitDetachRef,Wc=a.now,Kg=a.scheduleDeferredCallback,Jg=a.cancelDeferredCallback,Hg=a.useSyncScheduling,yg=a.prepareForCommit,Cg=a.resetAfterCommit,\nPe=Wc(),Uc=2,ka=0,ja=!1,F=null,ra=null,H=0,t=null,R=null,qa=null,ha=null,ca=null,eb=!1,Qb=!1,Sc=!1,sa=null,O=null,Tb=0,Xc=-1,Fa=!1,ma=null,na=0,Yc=!1,Ub=!1,Zc=null,fb=null,la=!1,Sb=!1,Ig=1E3,Rb=0,Lg=1;return{computeAsyncExpiration:v,computeExpirationForFiber:y,scheduleWork:u,batchedUpdates:function(a,b){var c=la;la=!0;try{return a(b)}finally{(la=c)||Fa||w(1,null)}},unbatchedUpdates:function(a){if(la&&!Sb){Sb=!0;try{return a()}finally{Sb=!1}}return a()},flushSync:function(a){var b=la;la=!0;try{a:{var c=\nka;ka=1;try{var d=a();break a}finally{ka=c}d=void 0}return d}finally{la=b,Fa?E(\"187\"):void 0,w(1,null)}},deferredUpdates:function(a){var b=ka;ka=v();try{return a()}finally{ka=b}}}}\nfunction lf(a){function b(a){a=od(a);return null===a?null:a.stateNode}var c=a.getPublicInstance;a=kf(a);var d=a.computeAsyncExpiration,e=a.computeExpirationForFiber,f=a.scheduleWork;return{createContainer:function(a,b){var c=new Y(3,null,0);a={current:c,containerInfo:a,pendingChildren:null,remainingExpirationTime:0,isReadyForCommit:!1,finishedWork:null,context:null,pendingContext:null,hydrate:b,nextScheduledRoot:null};return c.stateNode=a},updateContainer:function(a,b,c,q){var g=b.current;if(c){c=\nc._reactInternalFiber;var h;b:{2===kd(c)&&2===c.tag?void 0:E(\"170\");for(h=c;3!==h.tag;){if(le(h)){h=h.stateNode.__reactInternalMemoizedMergedChildContext;break b}(h=h[\"return\"])?void 0:E(\"171\")}h=h.stateNode.context}c=le(c)?pe(c,h):h}else c=D;null===b.context?b.context=c:b.pendingContext=c;b=q;b=void 0===b?null:b;q=null!=a&&null!=a.type&&null!=a.type.prototype&&!0===a.type.prototype.unstable_isAsyncReactComponent?d():e(g);He(g,{expirationTime:q,partialState:{element:a},callback:b,isReplace:!1,isForced:!1,\nnextCallback:null,next:null});f(g,q)},batchedUpdates:a.batchedUpdates,unbatchedUpdates:a.unbatchedUpdates,deferredUpdates:a.deferredUpdates,flushSync:a.flushSync,getPublicRootInstance:function(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return c(a.child.stateNode);default:return a.child.stateNode}},findHostInstance:b,findHostInstanceWithNoPortals:function(a){a=pd(a);return null===a?null:a.stateNode},injectIntoDevTools:function(a){var c=a.findFiberByHostInstance;return Ce(B({},\na,{findHostInstanceByFiber:function(a){return b(a)},findFiberByHostInstance:function(a){return c?c(a):null}}))}}}var mf=Object.freeze({default:lf}),nf=mf&&lf||mf,of=nf[\"default\"]?nf[\"default\"]:nf;function pf(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ue,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}var qf=\"object\"===typeof performance&&\"function\"===typeof performance.now,rf=void 0;rf=qf?function(){return performance.now()}:function(){return Date.now()};\nvar sf=void 0,tf=void 0;\nif(l.canUseDOM)if(\"function\"!==typeof requestIdleCallback||\"function\"!==typeof cancelIdleCallback){var uf=null,vf=!1,wf=-1,xf=!1,yf=0,zf=33,Af=33,Bf;Bf=qf?{didTimeout:!1,timeRemaining:function(){var a=yf-performance.now();return 0<a?a:0}}:{didTimeout:!1,timeRemaining:function(){var a=yf-Date.now();return 0<a?a:0}};var Cf=\"__reactIdleCallback$\"+Math.random().toString(36).slice(2);window.addEventListener(\"message\",function(a){if(a.source===window&&a.data===Cf){vf=!1;a=rf();if(0>=yf-a)if(-1!==wf&&wf<=\na)Bf.didTimeout=!0;else{xf||(xf=!0,requestAnimationFrame(Df));return}else Bf.didTimeout=!1;wf=-1;a=uf;uf=null;null!==a&&a(Bf)}},!1);var Df=function(a){xf=!1;var b=a-yf+Af;b<Af&&zf<Af?(8>b&&(b=8),Af=b<zf?zf:b):zf=b;yf=a+Af;vf||(vf=!0,window.postMessage(Cf,\"*\"))};sf=function(a,b){uf=a;null!=b&&\"number\"===typeof b.timeout&&(wf=rf()+b.timeout);xf||(xf=!0,requestAnimationFrame(Df));return 0};tf=function(){uf=null;vf=!1;wf=-1}}else sf=window.requestIdleCallback,tf=window.cancelIdleCallback;else sf=function(a){return setTimeout(function(){a({timeRemaining:function(){return Infinity}})})},\ntf=function(a){clearTimeout(a)};var Ef=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,Ff={},Gf={};\nfunction Hf(a){if(Gf.hasOwnProperty(a))return!0;if(Ff.hasOwnProperty(a))return!1;if(Ef.test(a))return Gf[a]=!0;Ff[a]=!0;return!1}\nfunction If(a,b,c){var d=wa(b);if(d&&va(b,c)){var e=d.mutationMethod;e?e(a,c):null==c||d.hasBooleanValue&&!c||d.hasNumericValue&&isNaN(c)||d.hasPositiveNumericValue&&1>c||d.hasOverloadedBooleanValue&&!1===c?Jf(a,b):d.mustUseProperty?a[d.propertyName]=c:(b=d.attributeName,(e=d.attributeNamespace)?a.setAttributeNS(e,b,\"\"+c):d.hasBooleanValue||d.hasOverloadedBooleanValue&&!0===c?a.setAttribute(b,\"\"):a.setAttribute(b,\"\"+c))}else Kf(a,b,va(b,c)?c:null)}\nfunction Kf(a,b,c){Hf(b)&&(null==c?a.removeAttribute(b):a.setAttribute(b,\"\"+c))}function Jf(a,b){var c=wa(b);c?(b=c.mutationMethod)?b(a,void 0):c.mustUseProperty?a[c.propertyName]=c.hasBooleanValue?!1:\"\":a.removeAttribute(c.attributeName):a.removeAttribute(b)}\nfunction Lf(a,b){var c=b.value,d=b.checked;return B({type:void 0,step:void 0,min:void 0,max:void 0},b,{defaultChecked:void 0,defaultValue:void 0,value:null!=c?c:a._wrapperState.initialValue,checked:null!=d?d:a._wrapperState.initialChecked})}function Mf(a,b){var c=b.defaultValue;a._wrapperState={initialChecked:null!=b.checked?b.checked:b.defaultChecked,initialValue:null!=b.value?b.value:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}\nfunction Nf(a,b){b=b.checked;null!=b&&If(a,\"checked\",b)}function Of(a,b){Nf(a,b);var c=b.value;if(null!=c)if(0===c&&\"\"===a.value)a.value=\"0\";else if(\"number\"===b.type){if(b=parseFloat(a.value)||0,c!=b||c==b&&a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else null==b.value&&null!=b.defaultValue&&a.defaultValue!==\"\"+b.defaultValue&&(a.defaultValue=\"\"+b.defaultValue),null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction Pf(a,b){switch(b.type){case \"submit\":case \"reset\":break;case \"color\":case \"date\":case \"datetime\":case \"datetime-local\":case \"month\":case \"time\":case \"week\":a.value=\"\";a.value=a.defaultValue;break;default:a.value=a.value}b=a.name;\"\"!==b&&(a.name=\"\");a.defaultChecked=!a.defaultChecked;a.defaultChecked=!a.defaultChecked;\"\"!==b&&(a.name=b)}function Qf(a){var b=\"\";aa.Children.forEach(a,function(a){null==a||\"string\"!==typeof a&&\"number\"!==typeof a||(b+=a)});return b}\nfunction Rf(a,b){a=B({children:void 0},b);if(b=Qf(b.children))a.children=b;return a}function Sf(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+c;b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction Tf(a,b){var c=b.value;a._wrapperState={initialValue:null!=c?c:b.defaultValue,wasMultiple:!!b.multiple}}function Uf(a,b){null!=b.dangerouslySetInnerHTML?E(\"91\"):void 0;return B({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function Vf(a,b){var c=b.value;null==c&&(c=b.defaultValue,b=b.children,null!=b&&(null!=c?E(\"92\"):void 0,Array.isArray(b)&&(1>=b.length?void 0:E(\"93\"),b=b[0]),c=\"\"+b),null==c&&(c=\"\"));a._wrapperState={initialValue:\"\"+c}}\nfunction Wf(a,b){var c=b.value;null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&(a.defaultValue=c));null!=b.defaultValue&&(a.defaultValue=b.defaultValue)}function Xf(a){var b=a.textContent;b===a._wrapperState.initialValue&&(a.value=b)}var Yf={html:\"http://www.w3.org/1999/xhtml\",mathml:\"http://www.w3.org/1998/Math/MathML\",svg:\"http://www.w3.org/2000/svg\"};\nfunction Zf(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}function $f(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?Zf(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar ag=void 0,bg=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(a.namespaceURI!==Yf.svg||\"innerHTML\"in a)a.innerHTML=b;else{ag=ag||document.createElement(\"div\");ag.innerHTML=\"\\x3csvg\\x3e\"+b+\"\\x3c/svg\\x3e\";for(b=ag.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction cg(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar dg={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,\nstopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},eg=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(dg).forEach(function(a){eg.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);dg[b]=dg[a]})});\nfunction fg(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\");var e=c;var f=b[c];e=null==f||\"boolean\"===typeof f||\"\"===f?\"\":d||\"number\"!==typeof f||0===f||dg.hasOwnProperty(e)&&dg[e]?(\"\"+f).trim():f+\"px\";\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var gg=B({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction hg(a,b,c){b&&(gg[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML?E(\"137\",a,c()):void 0),null!=b.dangerouslySetInnerHTML&&(null!=b.children?E(\"60\"):void 0,\"object\"===typeof b.dangerouslySetInnerHTML&&\"__html\"in b.dangerouslySetInnerHTML?void 0:E(\"61\")),null!=b.style&&\"object\"!==typeof b.style?E(\"62\",c()):void 0)}\nfunction ig(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var jg=Yf.html,kg=C.thatReturns(\"\");\nfunction lg(a,b){a=9===a.nodeType||11===a.nodeType?a:a.ownerDocument;var c=Hd(a);b=Sa[b];for(var d=0;d<b.length;d++){var e=b[d];c.hasOwnProperty(e)&&c[e]||(\"topScroll\"===e?wd(\"topScroll\",\"scroll\",a):\"topFocus\"===e||\"topBlur\"===e?(wd(\"topFocus\",\"focus\",a),wd(\"topBlur\",\"blur\",a),c.topBlur=!0,c.topFocus=!0):\"topCancel\"===e?(yc(\"cancel\",!0)&&wd(\"topCancel\",\"cancel\",a),c.topCancel=!0):\"topClose\"===e?(yc(\"close\",!0)&&wd(\"topClose\",\"close\",a),c.topClose=!0):Dd.hasOwnProperty(e)&&U(e,Dd[e],a),c[e]=!0)}}\nvar mg={topAbort:\"abort\",topCanPlay:\"canplay\",topCanPlayThrough:\"canplaythrough\",topDurationChange:\"durationchange\",topEmptied:\"emptied\",topEncrypted:\"encrypted\",topEnded:\"ended\",topError:\"error\",topLoadedData:\"loadeddata\",topLoadedMetadata:\"loadedmetadata\",topLoadStart:\"loadstart\",topPause:\"pause\",topPlay:\"play\",topPlaying:\"playing\",topProgress:\"progress\",topRateChange:\"ratechange\",topSeeked:\"seeked\",topSeeking:\"seeking\",topStalled:\"stalled\",topSuspend:\"suspend\",topTimeUpdate:\"timeupdate\",topVolumeChange:\"volumechange\",\ntopWaiting:\"waiting\"};function ng(a,b,c,d){c=9===c.nodeType?c:c.ownerDocument;d===jg&&(d=Zf(a));d===jg?\"script\"===a?(a=c.createElement(\"div\"),a.innerHTML=\"\\x3cscript\\x3e\\x3c/script\\x3e\",a=a.removeChild(a.firstChild)):a=\"string\"===typeof b.is?c.createElement(a,{is:b.is}):c.createElement(a):a=c.createElementNS(d,a);return a}function og(a,b){return(9===b.nodeType?b:b.ownerDocument).createTextNode(a)}\nfunction pg(a,b,c,d){var e=ig(b,c);switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);var f=c;break;case \"video\":case \"audio\":for(f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);f=c;break;case \"source\":U(\"topError\",\"error\",a);f=c;break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);f=c;break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);f=c;break;case \"details\":U(\"topToggle\",\"toggle\",a);f=c;break;case \"input\":Mf(a,c);f=Lf(a,c);U(\"topInvalid\",\"invalid\",a);\nlg(d,\"onChange\");break;case \"option\":f=Rf(a,c);break;case \"select\":Tf(a,c);f=B({},c,{value:void 0});U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;case \"textarea\":Vf(a,c);f=Uf(a,c);U(\"topInvalid\",\"invalid\",a);lg(d,\"onChange\");break;default:f=c}hg(b,f,kg);var g=f,h;for(h in g)if(g.hasOwnProperty(h)){var k=g[h];\"style\"===h?fg(a,k,kg):\"dangerouslySetInnerHTML\"===h?(k=k?k.__html:void 0,null!=k&&bg(a,k)):\"children\"===h?\"string\"===typeof k?(\"textarea\"!==b||\"\"!==k)&&cg(a,k):\"number\"===typeof k&&cg(a,\n\"\"+k):\"suppressContentEditableWarning\"!==h&&\"suppressHydrationWarning\"!==h&&\"autoFocus\"!==h&&(Ra.hasOwnProperty(h)?null!=k&&lg(d,h):e?Kf(a,h,k):null!=k&&If(a,h,k))}switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"option\":null!=c.value&&a.setAttribute(\"value\",c.value);break;case \"select\":a.multiple=!!c.multiple;b=c.value;null!=b?Sf(a,!!c.multiple,b,!1):null!=c.defaultValue&&Sf(a,!!c.multiple,c.defaultValue,!0);break;default:\"function\"===typeof f.onClick&&(a.onclick=\nC)}}\nfunction sg(a,b,c,d,e){var f=null;switch(b){case \"input\":c=Lf(a,c);d=Lf(a,d);f=[];break;case \"option\":c=Rf(a,c);d=Rf(a,d);f=[];break;case \"select\":c=B({},c,{value:void 0});d=B({},d,{value:void 0});f=[];break;case \"textarea\":c=Uf(a,c);d=Uf(a,d);f=[];break;default:\"function\"!==typeof c.onClick&&\"function\"===typeof d.onClick&&(a.onclick=C)}hg(b,d,kg);var g,h;a=null;for(g in c)if(!d.hasOwnProperty(g)&&c.hasOwnProperty(g)&&null!=c[g])if(\"style\"===g)for(h in b=c[g],b)b.hasOwnProperty(h)&&(a||(a={}),a[h]=\n\"\");else\"dangerouslySetInnerHTML\"!==g&&\"children\"!==g&&\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&\"autoFocus\"!==g&&(Ra.hasOwnProperty(g)?f||(f=[]):(f=f||[]).push(g,null));for(g in d){var k=d[g];b=null!=c?c[g]:void 0;if(d.hasOwnProperty(g)&&k!==b&&(null!=k||null!=b))if(\"style\"===g)if(b){for(h in b)!b.hasOwnProperty(h)||k&&k.hasOwnProperty(h)||(a||(a={}),a[h]=\"\");for(h in k)k.hasOwnProperty(h)&&b[h]!==k[h]&&(a||(a={}),a[h]=k[h])}else a||(f||(f=[]),f.push(g,a)),a=k;else\"dangerouslySetInnerHTML\"===\ng?(k=k?k.__html:void 0,b=b?b.__html:void 0,null!=k&&b!==k&&(f=f||[]).push(g,\"\"+k)):\"children\"===g?b===k||\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(g,\"\"+k):\"suppressContentEditableWarning\"!==g&&\"suppressHydrationWarning\"!==g&&(Ra.hasOwnProperty(g)?(null!=k&&lg(e,g),f||b===k||(f=[])):(f=f||[]).push(g,k))}a&&(f=f||[]).push(\"style\",a);return f}\nfunction tg(a,b,c,d,e){\"input\"===c&&\"radio\"===e.type&&null!=e.name&&Nf(a,e);ig(c,d);d=ig(c,e);for(var f=0;f<b.length;f+=2){var g=b[f],h=b[f+1];\"style\"===g?fg(a,h,kg):\"dangerouslySetInnerHTML\"===g?bg(a,h):\"children\"===g?cg(a,h):d?null!=h?Kf(a,g,h):a.removeAttribute(g):null!=h?If(a,g,h):Jf(a,g)}switch(c){case \"input\":Of(a,e);break;case \"textarea\":Wf(a,e);break;case \"select\":a._wrapperState.initialValue=void 0,b=a._wrapperState.wasMultiple,a._wrapperState.wasMultiple=!!e.multiple,c=e.value,null!=c?Sf(a,\n!!e.multiple,c,!1):b!==!!e.multiple&&(null!=e.defaultValue?Sf(a,!!e.multiple,e.defaultValue,!0):Sf(a,!!e.multiple,e.multiple?[]:\"\",!1))}}\nfunction ug(a,b,c,d,e){switch(b){case \"iframe\":case \"object\":U(\"topLoad\",\"load\",a);break;case \"video\":case \"audio\":for(var f in mg)mg.hasOwnProperty(f)&&U(f,mg[f],a);break;case \"source\":U(\"topError\",\"error\",a);break;case \"img\":case \"image\":U(\"topError\",\"error\",a);U(\"topLoad\",\"load\",a);break;case \"form\":U(\"topReset\",\"reset\",a);U(\"topSubmit\",\"submit\",a);break;case \"details\":U(\"topToggle\",\"toggle\",a);break;case \"input\":Mf(a,c);U(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"select\":Tf(a,c);\nU(\"topInvalid\",\"invalid\",a);lg(e,\"onChange\");break;case \"textarea\":Vf(a,c),U(\"topInvalid\",\"invalid\",a),lg(e,\"onChange\")}hg(b,c,kg);d=null;for(var g in c)c.hasOwnProperty(g)&&(f=c[g],\"children\"===g?\"string\"===typeof f?a.textContent!==f&&(d=[\"children\",f]):\"number\"===typeof f&&a.textContent!==\"\"+f&&(d=[\"children\",\"\"+f]):Ra.hasOwnProperty(g)&&null!=f&&lg(e,g));switch(b){case \"input\":Bc(a);Pf(a,c);break;case \"textarea\":Bc(a);Xf(a,c);break;case \"select\":case \"option\":break;default:\"function\"===typeof c.onClick&&\n(a.onclick=C)}return d}function vg(a,b){return a.nodeValue!==b}\nvar wg=Object.freeze({createElement:ng,createTextNode:og,setInitialProperties:pg,diffProperties:sg,updateProperties:tg,diffHydratedProperties:ug,diffHydratedText:vg,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(a,b,c){switch(b){case \"input\":Of(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=\nc.parentNode;c=c.querySelectorAll(\"input[name\\x3d\"+JSON.stringify(\"\"+b)+'][type\\x3d\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=rb(d);e?void 0:E(\"90\");Cc(d);Of(d,e)}}}break;case \"textarea\":Wf(a,c);break;case \"select\":b=c.value,null!=b&&Sf(a,!!c.multiple,b,!1)}}});nc.injectFiberControlledHostComponent(wg);var xg=null,Mg=null;function Ng(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}\nfunction Og(a){a=a?9===a.nodeType?a.documentElement:a.firstChild:null;return!(!a||1!==a.nodeType||!a.hasAttribute(\"data-reactroot\"))}\nvar Z=of({getRootHostContext:function(a){var b=a.nodeType;switch(b){case 9:case 11:a=(a=a.documentElement)?a.namespaceURI:$f(null,\"\");break;default:b=8===b?a.parentNode:a,a=b.namespaceURI||null,b=b.tagName,a=$f(a,b)}return a},getChildHostContext:function(a,b){return $f(a,b)},getPublicInstance:function(a){return a},prepareForCommit:function(){xg=td;var a=da();if(Kd(a)){if(\"selectionStart\"in a)var b={start:a.selectionStart,end:a.selectionEnd};else a:{var c=window.getSelection&&window.getSelection();\nif(c&&0!==c.rangeCount){b=c.anchorNode;var d=c.anchorOffset,e=c.focusNode;c=c.focusOffset;try{b.nodeType,e.nodeType}catch(z){b=null;break a}var f=0,g=-1,h=-1,k=0,q=0,v=a,y=null;b:for(;;){for(var u;;){v!==b||0!==d&&3!==v.nodeType||(g=f+d);v!==e||0!==c&&3!==v.nodeType||(h=f+c);3===v.nodeType&&(f+=v.nodeValue.length);if(null===(u=v.firstChild))break;y=v;v=u}for(;;){if(v===a)break b;y===b&&++k===d&&(g=f);y===e&&++q===c&&(h=f);if(null!==(u=v.nextSibling))break;v=y;y=v.parentNode}v=u}b=-1===g||-1===h?null:\n{start:g,end:h}}else b=null}b=b||{start:0,end:0}}else b=null;Mg={focusedElem:a,selectionRange:b};ud(!1)},resetAfterCommit:function(){var a=Mg,b=da(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&fa(document.documentElement,c)){if(Kd(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(window.getSelection){b=window.getSelection();var e=c[Eb()].length;a=Math.min(d.start,e);d=void 0===d.end?a:Math.min(d.end,e);!b.extend&&a>\nd&&(e=d,d=a,a=e);e=Jd(c,a);var f=Jd(c,d);if(e&&f&&(1!==b.rangeCount||b.anchorNode!==e.node||b.anchorOffset!==e.offset||b.focusNode!==f.node||b.focusOffset!==f.offset)){var g=document.createRange();g.setStart(e.node,e.offset);b.removeAllRanges();a>d?(b.addRange(g),b.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),b.addRange(g))}}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});ia(c);for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=\na.top}Mg=null;ud(xg);xg=null},createInstance:function(a,b,c,d,e){a=ng(a,b,c,d);a[Q]=e;a[ob]=b;return a},appendInitialChild:function(a,b){a.appendChild(b)},finalizeInitialChildren:function(a,b,c,d){pg(a,b,c,d);a:{switch(b){case \"button\":case \"input\":case \"select\":case \"textarea\":a=!!c.autoFocus;break a}a=!1}return a},prepareUpdate:function(a,b,c,d,e){return sg(a,b,c,d,e)},shouldSetTextContent:function(a,b){return\"textarea\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===\ntypeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&\"string\"===typeof b.dangerouslySetInnerHTML.__html},shouldDeprioritizeSubtree:function(a,b){return!!b.hidden},createTextInstance:function(a,b,c,d){a=og(a,b);a[Q]=d;return a},now:rf,mutation:{commitMount:function(a){a.focus()},commitUpdate:function(a,b,c,d,e){a[ob]=e;tg(a,b,c,d,e)},resetTextContent:function(a){a.textContent=\"\"},commitTextUpdate:function(a,b,c){a.nodeValue=c},appendChild:function(a,b){a.appendChild(b)},appendChildToContainer:function(a,\nb){8===a.nodeType?a.parentNode.insertBefore(b,a):a.appendChild(b)},insertBefore:function(a,b,c){a.insertBefore(b,c)},insertInContainerBefore:function(a,b,c){8===a.nodeType?a.parentNode.insertBefore(b,c):a.insertBefore(b,c)},removeChild:function(a,b){a.removeChild(b)},removeChildFromContainer:function(a,b){8===a.nodeType?a.parentNode.removeChild(b):a.removeChild(b)}},hydration:{canHydrateInstance:function(a,b){return 1!==a.nodeType||b.toLowerCase()!==a.nodeName.toLowerCase()?null:a},canHydrateTextInstance:function(a,\nb){return\"\"===b||3!==a.nodeType?null:a},getNextHydratableSibling:function(a){for(a=a.nextSibling;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},getFirstHydratableChild:function(a){for(a=a.firstChild;a&&1!==a.nodeType&&3!==a.nodeType;)a=a.nextSibling;return a},hydrateInstance:function(a,b,c,d,e,f){a[Q]=f;a[ob]=c;return ug(a,b,c,e,d)},hydrateTextInstance:function(a,b,c){a[Q]=c;return vg(a,b)},didNotMatchHydratedContainerTextInstance:function(){},didNotMatchHydratedTextInstance:function(){},\ndidNotHydrateContainerInstance:function(){},didNotHydrateInstance:function(){},didNotFindHydratableContainerInstance:function(){},didNotFindHydratableContainerTextInstance:function(){},didNotFindHydratableInstance:function(){},didNotFindHydratableTextInstance:function(){}},scheduleDeferredCallback:sf,cancelDeferredCallback:tf,useSyncScheduling:!0});rc=Z.batchedUpdates;\nfunction Pg(a,b,c,d,e){Ng(c)?void 0:E(\"200\");var f=c._reactRootContainer;if(f)Z.updateContainer(b,f,a,e);else{d=d||Og(c);if(!d)for(f=void 0;f=c.lastChild;)c.removeChild(f);var g=Z.createContainer(c,d);f=c._reactRootContainer=g;Z.unbatchedUpdates(function(){Z.updateContainer(b,g,a,e)})}return Z.getPublicRootInstance(f)}function Qg(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;Ng(b)?void 0:E(\"200\");return pf(a,b,null,c)}\nfunction Rg(a,b){this._reactRootContainer=Z.createContainer(a,b)}Rg.prototype.render=function(a,b){Z.updateContainer(a,this._reactRootContainer,null,b)};Rg.prototype.unmount=function(a){Z.updateContainer(null,this._reactRootContainer,null,a)};\nvar Sg={createPortal:Qg,findDOMNode:function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternalFiber;if(b)return Z.findHostInstance(b);\"function\"===typeof a.render?E(\"188\"):E(\"213\",Object.keys(a))},hydrate:function(a,b,c){return Pg(null,a,b,!0,c)},render:function(a,b,c){return Pg(null,a,b,!1,c)},unstable_renderSubtreeIntoContainer:function(a,b,c,d){null==a||void 0===a._reactInternalFiber?E(\"38\"):void 0;return Pg(a,b,c,!1,d)},unmountComponentAtNode:function(a){Ng(a)?void 0:\nE(\"40\");return a._reactRootContainer?(Z.unbatchedUpdates(function(){Pg(null,null,a,!1,function(){a._reactRootContainer=null})}),!0):!1},unstable_createPortal:Qg,unstable_batchedUpdates:tc,unstable_deferredUpdates:Z.deferredUpdates,flushSync:Z.flushSync,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:mb,EventPluginRegistry:Va,EventPropagators:Cb,ReactControlledComponent:qc,ReactDOMComponentTree:sb,ReactDOMEventListener:xd}};\nZ.injectIntoDevTools({findFiberByHostInstance:pb,bundleType:0,version:\"16.2.0\",rendererPackageName:\"react-dom\"});var Tg=Object.freeze({default:Sg}),Ug=Tg&&Sg||Tg;module.exports=Ug[\"default\"]?Ug[\"default\"]:Ug;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react-dom/cjs/react-dom.production.min.js\n// module id = 45\n// module chunks = 0","/** @license React v16.2.0\n * react.production.min.js\n *\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var m=require(\"object-assign\"),n=require(\"fbjs/lib/emptyObject\"),p=require(\"fbjs/lib/emptyFunction\"),q=\"function\"===typeof Symbol&&Symbol[\"for\"],r=q?Symbol[\"for\"](\"react.element\"):60103,t=q?Symbol[\"for\"](\"react.call\"):60104,u=q?Symbol[\"for\"](\"react.return\"):60105,v=q?Symbol[\"for\"](\"react.portal\"):60106,w=q?Symbol[\"for\"](\"react.fragment\"):60107,x=\"function\"===typeof Symbol&&Symbol.iterator;\nfunction y(a){for(var b=arguments.length-1,e=\"Minified React error #\"+a+\"; visit http://facebook.github.io/react/docs/error-decoder.html?invariant\\x3d\"+a,c=0;c<b;c++)e+=\"\\x26args[]\\x3d\"+encodeURIComponent(arguments[c+1]);b=Error(e+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\");b.name=\"Invariant Violation\";b.framesToPop=1;throw b;}\nvar z={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function A(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}A.prototype.isReactComponent={};A.prototype.setState=function(a,b){\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a?y(\"85\"):void 0;this.updater.enqueueSetState(this,a,b,\"setState\")};A.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};\nfunction B(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}function C(){}C.prototype=A.prototype;var D=B.prototype=new C;D.constructor=B;m(D,A.prototype);D.isPureReactComponent=!0;function E(a,b,e){this.props=a;this.context=b;this.refs=n;this.updater=e||z}var F=E.prototype=new C;F.constructor=E;m(F,A.prototype);F.unstable_isAsyncReactComponent=!0;F.render=function(){return this.props.children};var G={current:null},H=Object.prototype.hasOwnProperty,I={key:!0,ref:!0,__self:!0,__source:!0};\nfunction J(a,b,e){var c,d={},g=null,k=null;if(null!=b)for(c in void 0!==b.ref&&(k=b.ref),void 0!==b.key&&(g=\"\"+b.key),b)H.call(b,c)&&!I.hasOwnProperty(c)&&(d[c]=b[c]);var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){for(var h=Array(f),l=0;l<f;l++)h[l]=arguments[l+2];d.children=h}if(a&&a.defaultProps)for(c in f=a.defaultProps,f)void 0===d[c]&&(d[c]=f[c]);return{$$typeof:r,type:a,key:g,ref:k,props:d,_owner:G.current}}function K(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===r}\nfunction escape(a){var b={\"\\x3d\":\"\\x3d0\",\":\":\"\\x3d2\"};return\"$\"+(\"\"+a).replace(/[=:]/g,function(a){return b[a]})}var L=/\\/+/g,M=[];function N(a,b,e,c){if(M.length){var d=M.pop();d.result=a;d.keyPrefix=b;d.func=e;d.context=c;d.count=0;return d}return{result:a,keyPrefix:b,func:e,context:c,count:0}}function O(a){a.result=null;a.keyPrefix=null;a.func=null;a.context=null;a.count=0;10>M.length&&M.push(a)}\nfunction P(a,b,e,c){var d=typeof a;if(\"undefined\"===d||\"boolean\"===d)a=null;var g=!1;if(null===a)g=!0;else switch(d){case \"string\":case \"number\":g=!0;break;case \"object\":switch(a.$$typeof){case r:case t:case u:case v:g=!0}}if(g)return e(c,a,\"\"===b?\".\"+Q(a,0):b),1;g=0;b=\"\"===b?\".\":b+\":\";if(Array.isArray(a))for(var k=0;k<a.length;k++){d=a[k];var f=b+Q(d,k);g+=P(d,f,e,c)}else if(null===a||\"undefined\"===typeof a?f=null:(f=x&&a[x]||a[\"@@iterator\"],f=\"function\"===typeof f?f:null),\"function\"===typeof f)for(a=\nf.call(a),k=0;!(d=a.next()).done;)d=d.value,f=b+Q(d,k++),g+=P(d,f,e,c);else\"object\"===d&&(e=\"\"+a,y(\"31\",\"[object Object]\"===e?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":e,\"\"));return g}function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(a.key):b.toString(36)}function R(a,b){a.func.call(a.context,b,a.count++)}\nfunction S(a,b,e){var c=a.result,d=a.keyPrefix;a=a.func.call(a.context,b,a.count++);Array.isArray(a)?T(a,c,e,p.thatReturnsArgument):null!=a&&(K(a)&&(b=d+(!a.key||b&&b.key===a.key?\"\":(\"\"+a.key).replace(L,\"$\\x26/\")+\"/\")+e,a={$$typeof:r,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}),c.push(a))}function T(a,b,e,c,d){var g=\"\";null!=e&&(g=(\"\"+e).replace(L,\"$\\x26/\")+\"/\");b=N(b,g,c,d);null==a||P(a,\"\",S,b);O(b)}\nvar U={Children:{map:function(a,b,e){if(null==a)return a;var c=[];T(a,c,null,b,e);return c},forEach:function(a,b,e){if(null==a)return a;b=N(null,null,b,e);null==a||P(a,\"\",R,b);O(b)},count:function(a){return null==a?0:P(a,\"\",p.thatReturnsNull,null)},toArray:function(a){var b=[];T(a,b,null,p.thatReturnsArgument);return b},only:function(a){K(a)?void 0:y(\"143\");return a}},Component:A,PureComponent:B,unstable_AsyncComponent:E,Fragment:w,createElement:J,cloneElement:function(a,b,e){var c=m({},a.props),\nd=a.key,g=a.ref,k=a._owner;if(null!=b){void 0!==b.ref&&(g=b.ref,k=G.current);void 0!==b.key&&(d=\"\"+b.key);if(a.type&&a.type.defaultProps)var f=a.type.defaultProps;for(h in b)H.call(b,h)&&!I.hasOwnProperty(h)&&(c[h]=void 0===b[h]&&void 0!==f?f[h]:b[h])}var h=arguments.length-2;if(1===h)c.children=e;else if(1<h){f=Array(h);for(var l=0;l<h;l++)f[l]=arguments[l+2];c.children=f}return{$$typeof:r,type:a.type,key:d,ref:g,props:c,_owner:k}},createFactory:function(a){var b=J.bind(null,a);b.type=a;return b},\nisValidElement:K,version:\"16.2.0\",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:G,assign:m}},V=Object.freeze({default:U}),W=V&&U||V;module.exports=W[\"default\"]?W[\"default\"]:W;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/react/cjs/react.production.min.js\n// module id = 46\n// module chunks = 0","module.exports = function(THREE) {\n\tvar MOUSE = THREE.MOUSE\n\tif (!MOUSE)\n\t\tMOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\n\n\t/**\n\t * @author qiao / https://github.com/qiao\n\t * @author mrdoob / http://mrdoob.com\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author erich666 / http://erichaines.com\n\t */\n\t/*global THREE, console */\n\n\tfunction OrbitConstraint ( object ) {\n\n\t\tthis.object = object;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\t// and where it pans with respect to.\n\t\tthis.target = new THREE.Vector3();\n\n\t\t// Limits to how far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// Limits to how far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.25;\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar EPS = 0.000001;\n\n\t\t// Current position in spherical coordinate system.\n\t\tvar theta;\n\t\tvar phi;\n\n\t\t// Pending changes\n\t\tvar phiDelta = 0;\n\t\tvar thetaDelta = 0;\n\t\tvar scale = 1;\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar zoomChanged = false;\n\n\t\t// API\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn theta;\n\n\t\t};\n\n\t\tthis.rotateLeft = function ( angle ) {\n\n\t\t\tthetaDelta -= angle;\n\n\t\t};\n\n\t\tthis.rotateUp = function ( angle ) {\n\n\t\t\tphiDelta -= angle;\n\n\t\t};\n\n\t\t// pass in distance in world space to move left\n\t\tthis.panLeft = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panLeft ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get X column of matrix\n\t\t\t\tv.set( te[ 0 ], te[ 1 ], te[ 2 ] );\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in distance in world space to move up\n\t\tthis.panUp = function() {\n\n\t\t\tvar v = new THREE.Vector3();\n\n\t\t\treturn function panUp ( distance ) {\n\n\t\t\t\tvar te = this.object.matrix.elements;\n\n\t\t\t\t// get Y column of matrix\n\t\t\t\tv.set( te[ 4 ], te[ 5 ], te[ 6 ] );\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tthis.pan = function ( deltaX, deltaY, screenWidth, screenHeight ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\t// perspective\n\t\t\t\tvar position = scope.object.position;\n\t\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\t\tvar targetDistance = offset.length();\n\n\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\t\tscope.panLeft( 2 * deltaX * targetDistance / screenHeight );\n\t\t\t\tscope.panUp( 2 * deltaY * targetDistance / screenHeight );\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\t// orthographic\n\t\t\t\tscope.panLeft( deltaX * ( scope.object.right - scope.object.left ) / screenWidth );\n\t\t\t\tscope.panUp( deltaY * ( scope.object.top - scope.object.bottom ) / screenHeight );\n\n\t\t\t} else {\n\n\t\t\t\t// camera neither orthographic or perspective\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyIn = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom * dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.dollyOut = function ( dollyScale ) {\n\n\t\t\tif ( scope.object instanceof THREE.PerspectiveCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else if ( scope.object instanceof THREE.OrthographicCamera ) {\n\n\t\t\t\tscope.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / dollyScale ) );\n\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function() {\n\n\t\t\tvar offset = new THREE.Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tvar quat = new THREE.Quaternion().setFromUnitVectors( object.up, new THREE.Vector3( 0, 1, 0 ) );\n\t\t\tvar quatInverse = quat.clone().inverse();\n\n\t\t\tvar lastPosition = new THREE.Vector3();\n\t\t\tvar lastQuaternion = new THREE.Quaternion();\n\n\t\t\treturn function () {\n\n\t\t\t\tvar position = this.object.position;\n\n\t\t\t\toffset.copy( position ).sub( this.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\n\t\t\t\ttheta = Math.atan2( offset.x, offset.z );\n\n\t\t\t\t// angle from y-axis\n\n\t\t\t\tphi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\t\t\ttheta += thetaDelta;\n\t\t\t\tphi += phiDelta;\n\n\t\t\t\t// restrict theta to be between desired limits\n\t\t\t\ttheta = Math.max( this.minAzimuthAngle, Math.min( this.maxAzimuthAngle, theta ) );\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\t\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\t\t\tvar radius = offset.length() * scale;\n\n\t\t\t\t// restrict radius to be between desired limits\n\t\t\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\n\t\t\t\t// move target to panned location\n\t\t\t\tthis.target.add( panOffset );\n\n\t\t\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\t\t\toffset.y = radius * Math.cos( phi );\n\t\t\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( this.target ).add( offset );\n\n\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\tif ( this.enableDamping === true ) {\n\n\t\t\t\t\tthetaDelta *= ( 1 - this.dampingFactor );\n\t\t\t\t\tphiDelta *= ( 1 - this.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthetaDelta = 0;\n\t\t\t\t\tphiDelta = 0;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\t lastPosition.distanceToSquared( this.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( this.object.quaternion ) ) > EPS ) {\n\n\t\t\t\t\tlastPosition.copy( this.object.position );\n\t\t\t\t\tlastQuaternion.copy( this.object.quaternion );\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t};\n\n\n\t// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n\t// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n\t// supported.\n\t//\n\t//    Orbit - left mouse / touch: one finger move\n\t//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n\t//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\n\tfunction OrbitControls ( object, domElement ) {\n\n\t\tvar constraint = new OrbitConstraint( object );\n\n\t\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t\t// API\n\n\t\tObject.defineProperty( this, 'constraint', {\n\n\t\t\tget: function() {\n\n\t\t\t\treturn constraint;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn constraint.getPolarAngle();\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn constraint.getAzimuthalAngle();\n\n\t\t};\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// center is old, deprecated; use \"target\" instead\n\t\tthis.center = this.target;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t\t// backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t\t// Set to false to disable use of the keys\n\t\tthis.enableKeys = true;\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n\t\t////////////\n\t\t// internals\n\n\t\tvar scope = this;\n\n\t\tvar rotateStart = new THREE.Vector2();\n\t\tvar rotateEnd = new THREE.Vector2();\n\t\tvar rotateDelta = new THREE.Vector2();\n\n\t\tvar panStart = new THREE.Vector2();\n\t\tvar panEnd = new THREE.Vector2();\n\t\tvar panDelta = new THREE.Vector2();\n\n\t\tvar dollyStart = new THREE.Vector2();\n\t\tvar dollyEnd = new THREE.Vector2();\n\t\tvar dollyDelta = new THREE.Vector2();\n\n\t\tvar STATE = { NONE : - 1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\n\t\tvar state = STATE.NONE;\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// events\n\n\t\tvar changeEvent = { type: 'change' };\n\t\tvar startEvent = { type: 'start' };\n\t\tvar endEvent = { type: 'end' };\n\n\t\t// pass in x,y of change desired in pixel space,\n\t\t// right and down are positive\n\t\tfunction pan( deltaX, deltaY ) {\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tconstraint.pan( deltaX, deltaY, element.clientWidth, element.clientHeight );\n\n\t\t}\n\n\t\tthis.update = function () {\n\n\t\t\tif ( this.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\tconstraint.rotateLeft( getAutoRotationAngle() );\n\n\t\t\t}\n\n\t\t\tif ( constraint.update() === true ) {\n\n\t\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tstate = STATE.NONE;\n\n\t\t\tthis.target.copy( this.target0 );\n\t\t\tthis.object.position.copy( this.position0 );\n\t\t\tthis.object.zoom = this.zoom0;\n\n\t\t\tthis.object.updateProjectionMatrix();\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tthis.update();\n\n\t\t};\n\n\t\tfunction getAutoRotationAngle() {\n\n\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tif ( event.button === scope.mouseButtons.ORBIT ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.ZOOM ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t\t} else if ( event.button === scope.mouseButtons.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tdocument.addEventListener( 'mousemove', onMouseMove, false );\n\t\t\t\tdocument.addEventListener( 'mouseup', onMouseUp, false );\n\t\t\t\tscope.dispatchEvent( startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.update();\n\n\t\t}\n\n\t\tfunction onMouseUp( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar delta = 0;\n\n\t\t\tif ( event.wheelDelta !== undefined ) {\n\n\t\t\t\t// WebKit / Opera / Explorer 9\n\n\t\t\t\tdelta = event.wheelDelta;\n\n\t\t\t} else if ( event.detail !== undefined ) {\n\n\t\t\t\t// Firefox\n\n\t\t\t\tdelta = - event.detail;\n\n\t\t\t}\n\n\t\t\tif ( delta > 0 ) {\n\n\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t} else if ( delta < 0 ) {\n\n\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\t\t\tscope.dispatchEvent( startEvent );\n\t\t\tscope.dispatchEvent( endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableKeys === false || scope.enablePan === false ) return;\n\n\t\t\tswitch ( event.keyCode ) {\n\n\t\t\t\tcase scope.keys.UP:\n\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchstart( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1:\t// one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\t// two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) scope.dispatchEvent( startEvent );\n\n\t\t}\n\n\t\tfunction touchmove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\n\t\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\t\tswitch ( event.touches.length ) {\n\n\t\t\t\tcase 1: // one-fingered touch: rotate\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) return;\n\n\t\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\t\tconstraint.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\t\tconstraint.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // two-fingered touch: dolly\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) return;\n\n\t\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyOut( getZoomScale() );\n\n\t\t\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\t\t\tconstraint.dollyIn( getZoomScale() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3: // three-fingered touch: pan\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\t\t\t\t\tif ( state !== STATE.TOUCH_PAN ) return;\n\n\t\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\n\t\t\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\t\t\tpanStart.copy( panEnd );\n\n\t\t\t\t\tscope.update();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction touchend( /* event */ ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tscope.dispatchEvent( endEvent );\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tthis.dispose = function() {\n\n\t\t\tthis.domElement.removeEventListener( 'contextmenu', contextmenu, false );\n\t\t\tthis.domElement.removeEventListener( 'mousedown', onMouseDown, false );\n\t\t\tthis.domElement.removeEventListener( 'mousewheel', onMouseWheel, false );\n\t\t\tthis.domElement.removeEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\t\tthis.domElement.removeEventListener( 'touchstart', touchstart, false );\n\t\t\tthis.domElement.removeEventListener( 'touchend', touchend, false );\n\t\t\tthis.domElement.removeEventListener( 'touchmove', touchmove, false );\n\n\t\t\tdocument.removeEventListener( 'mousemove', onMouseMove, false );\n\t\t\tdocument.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\t\twindow.removeEventListener( 'keydown', onKeyDown, false );\n\n\t\t}\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu, false );\n\n\t\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\t\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\t\tthis.domElement.addEventListener( 'MozMousePixelScroll', onMouseWheel, false ); // firefox\n\n\t\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\t\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\t\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n\t\twindow.addEventListener( 'keydown', onKeyDown, false );\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t};\n\n\tOrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n\tOrbitControls.prototype.constructor = OrbitControls;\n\n\tObject.defineProperties( OrbitControls.prototype, {\n\n\t\tobject: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.object;\n\n\t\t\t}\n\n\t\t},\n\n\t\ttarget: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.target;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: target is now immutable. Use target.set() instead.' );\n\t\t\t\tthis.constraint.target.copy( value );\n\n\t\t\t}\n\n\t\t},\n\n\t\tminDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxDistance : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxDistance;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxDistance = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxZoom : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxZoom = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxPolarAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxPolarAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxPolarAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tminAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.minAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.minAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmaxAzimuthAngle : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.maxAzimuthAngle;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.maxAzimuthAngle = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tenableDamping : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.enableDamping = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t// backward compatibility\n\n\t\tnoZoom: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\treturn ! this.enableZoom;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.' );\n\t\t\t\tthis.enableZoom = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoRotate: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\treturn ! this.enableRotate;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.' );\n\t\t\t\tthis.enableRotate = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoPan: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\treturn ! this.enablePan;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.' );\n\t\t\t\tthis.enablePan = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tnoKeys: {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\treturn ! this.enableKeys;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.' );\n\t\t\t\tthis.enableKeys = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tstaticMoving : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\treturn ! this.constraint.enableDamping;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.' );\n\t\t\t\tthis.constraint.enableDamping = ! value;\n\n\t\t\t}\n\n\t\t},\n\n\t\tdynamicDampingFactor : {\n\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\treturn this.constraint.dampingFactor;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.' );\n\t\t\t\tthis.constraint.dampingFactor = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\treturn OrbitControls;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three-orbit-controls/index.js\n// module id = 47\n// module chunks = 0","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '72' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\t\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\t\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n\r\n// polyfills\r\n\r\nif ( self.requestAnimationFrame === undefined || self.cancelAnimationFrame === undefined ) {\r\n\r\n\t// Missing in Android stock browser.\r\n\r\n\t( function () {\r\n\r\n\t\tvar lastTime = 0;\r\n\t\tvar vendors = [ 'ms', 'moz', 'webkit', 'o' ];\r\n\r\n\t\tfor ( var x = 0; x < vendors.length && ! self.requestAnimationFrame; ++ x ) {\r\n\r\n\t\t\tself.requestAnimationFrame = self[ vendors[ x ] + 'RequestAnimationFrame' ];\r\n\t\t\tself.cancelAnimationFrame = self[ vendors[ x ] + 'CancelAnimationFrame' ] || self[ vendors[ x ] + 'CancelRequestAnimationFrame' ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.requestAnimationFrame === undefined && self.setTimeout !== undefined ) {\r\n\r\n\t\t\tself.requestAnimationFrame = function ( callback ) {\r\n\r\n\t\t\t\tvar currTime = Date.now(), timeToCall = Math.max( 0, 16 - ( currTime - lastTime ) );\r\n\t\t\t\tvar id = self.setTimeout( function () {\r\n\r\n\t\t\t\t\tcallback( currTime + timeToCall );\r\n\r\n\t\t\t\t}, timeToCall );\r\n\t\t\t\tlastTime = currTime + timeToCall;\r\n\t\t\t\treturn id;\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( self.cancelAnimationFrame === undefined && self.clearTimeout !== undefined ) {\r\n\r\n\t\t\tself.cancelAnimationFrame = function ( id ) {\r\n\r\n\t\t\t\tself.clearTimeout( id );\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}() );\r\n\r\n}\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined && Object.defineProperty !== undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n// mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n// depth modes\r\n\r\nTHREE.NeverDepth = 0;\r\nTHREE.AlwaysDepth = 1;\r\nTHREE.LessDepth = 2;\r\nTHREE.LessEqualDepth = 3;\r\nTHREE.EqualDepth = 4;\r\nTHREE.GreaterEqualDepth = 5;\r\nTHREE.GreaterDepth = 6;\r\nTHREE.NotEqualDepth = 7;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb ( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tvar parseAlpha = function ( strAlpha ) {\r\n\r\n\t\t\tvar alpha = parseFloat( strAlpha );\r\n\r\n\t\t\tif ( alpha < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of color ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn alpha;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*([0-9]*\\.?[0-9]+)\\s*$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] );\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\t\t\t\t\t\tparseAlpha( color[ 4 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n};\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[ 2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[ 6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order);\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\t\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) x = new THREE.Vector3();\r\n\t\t\tif ( y === undefined ) y = new THREE.Vector3();\r\n\t\t\tif ( z === undefined ) z = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) vector = new THREE.Vector3();\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction descSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset renderDepth ( value ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRootObject = ( meta === undefined );\r\n\r\n\t\tvar data = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\tdata.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\r\n\t\tif ( this.visible !== true ) data.visible = this.visible;\r\n\r\n\t\tdata.matrix = this.matrix.toArray();\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tdata.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {};\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = data;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.rotationAutoUpdate = source.rotationAutoUpdate;\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.array.length / this.data.stride;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0, k = 0; i < vertices.length; i += 3, j += 2, k += 4 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.DirectGeometry.prototype = {\r\n\r\n\tconstructor: THREE.DirectGeometry,\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tvar morphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.DirectGeometry.prototype );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddIndex: function ( index ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\r\n\t},\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tget drawcalls() {\r\n\r\n\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\tget offsets() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\treturn this.groups;\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tif ( indexOffset !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\r\n\t},\r\n\r\n\tclearDrawCalls: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance',  lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.')\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.InstancedBufferGeometry.prototype );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.left = source.left;\r\n\tthis.right = source.right;\r\n\tthis.top = source.top;\r\n\tthis.bottom = source.bottom;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.left = this.left;\r\n\tdata.object.right = this.right;\r\n\tdata.object.top = this.top;\r\n\tdata.object.bottom = this.bottom;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (full-frame) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Camera.prototype.copy.call( this, source );\r\n\t\r\n\tthis.fov = source.fov;\r\n\tthis.aspect = source.aspect;\r\n\tthis.near = source.near;\r\n\tthis.far = source.far;\r\n\t\r\n\tthis.zoom = source.zoom;\r\n\t\r\n\treturn this;\r\n\t\t\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.zoom = this.zoom;\r\n\tdata.object.fov = this.fov;\r\n\tdata.object.aspect = this.aspect;\r\n\tdata.object.near = this.near;\r\n\tdata.object.far = this.far;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.color.copy( source.color );\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\r\n\tthis.shadowCameraLeft = source.shadowCameraLeft;\r\n\tthis.shadowCameraRight = source.shadowCameraRight;\r\n\tthis.shadowCameraTop = source.shadowCameraTop;\r\n\tthis.shadowCameraBottom = source.shadowCameraBottom;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.groundColor.copy( source.groundColor );\r\n\tthis.intensity = source.intensity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.groundColor = this.groundColor.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.decay = source.decay;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\tthis.intensity = source.intensity;\r\n\tthis.distance = source.distance;\r\n\tthis.angle = source.angle;\r\n\tthis.exponent = source.exponent;\r\n\tthis.decay = source.decay;\r\n\r\n\tthis.target = source.target.clone();\r\n\r\n\tthis.castShadow = source.castShadow;\r\n\tthis.onlyShadow = source.onlyShadow;\r\n\r\n\tthis.shadowCameraNear = source.shadowCameraNear;\r\n\tthis.shadowCameraFar = source.shadowCameraFar;\r\n\tthis.shadowCameraFov = source.shadowCameraFov;\r\n\r\n\tthis.shadowCameraVisible = source.shadowCameraVisible;\r\n\r\n\tthis.shadowBias = source.shadowBias;\r\n\tthis.shadowDarkness = source.shadowDarkness;\r\n\r\n\tthis.shadowMapWidth = source.shadowMapWidth;\r\n\tthis.shadowMapHeight = source.shadowMapHeight;\r\n\r\n\treturn this;\r\n}\r\n\r\nTHREE.SpotLight.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.color = this.color.getHex();\r\n\tdata.object.intensity = this.intensity;\r\n\tdata.object.distance = this.distance;\r\n\tdata.object.angle = this.angle;\r\n\tdata.object.exponent = this.exponent;\r\n\tdata.object.decay = this.decay;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar imageLoader;\r\n\r\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tif ( crossOrigin === undefined && scope.crossOrigin !== undefined ) crossOrigin = scope.crossOrigin;\r\n\r\n\t\t\tif ( imageLoader === undefined ) imageLoader = new THREE.ImageLoader();\r\n\r\n\t\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\t\tloader = imageLoader;\r\n\t\t\t\t\tloader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t\tTHREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset ) {\r\n\r\n\t\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhere[ name ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// defaults\r\n\r\n\t\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\t\tvar mpars = {};\r\n\r\n\t\t\t// parameters from model file\r\n\r\n\t\t\tif ( m.shading ) {\r\n\r\n\t\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\t\tmpars.transparent = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( mtype === 'MeshPhongMaterial' ) {\r\n\r\n\t\t\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// modifiers\r\n\r\n\t\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// textures\r\n\r\n\t\t\tif ( texturePath ) {\r\n\r\n\t\t\t\tif ( m.mapDiffuse ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapLight ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAO ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'aoMap', m.mapAO, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapBump ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapNormal ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapSpecular ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( m.mapAlpha ) {\r\n\r\n\t\t\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\t\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\t\tgeometry.animation = json.animation;\r\n\t\t\tgeometry.animations = json.animations;\r\n\r\n\t\t};\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tsrcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\t\tsrcColors = json.morphColors[ i ].colors;\r\n\r\n\t\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new self[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\t\tmaterial.uuid = json.uuid;\r\n\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale )\tmaterial.normalScale = new THREE.Vector2( json.normalScale, json.normalScale );\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MeshFaceMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereBufferGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.DodecahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.OctahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TetrahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.RingGeometry(\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TextGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TextGeometry(\r\n\t\t\t\t\t\t\tdata.text,\r\n\t\t\t\t\t\t\tdata.data\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}, onProgress, onError );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale; // Removed for now, causes issue in editor ui.js\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.vertexColors !== undefined && this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\t\tif ( this.shading !== undefined && this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.blending !== undefined && this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.side !== undefined && this.side !== THREE.FrontSide ) data.side = this.side;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.side = source.side;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blending = source.blending;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\t// Deprecated\r\n\r\n\tget wrapAround () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tset wrapAround ( boolean ) {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\r\n\t},\r\n\r\n\tget wrapRGB () {\r\n\r\n\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\treturn new THREE.Color();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\t\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.metal = source.metal;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.MeshFaceMaterial = THREE.MultiMaterial;\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\treturn new THREE.PointsMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.derivatives = false; // set to use derivatives\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.attributes = source.attributes;\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.shading = source.shading;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\tthis.lights = source.lights;\r\n\r\n\tthis.vertexColors = source.vertexColors;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.derivatives = source.derivatives;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.attributes = this.attributes;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\tthis.fog = source.fog;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Texture.prototype.copy.call( this, source );\r\n\t\r\n\tthis.images = source.images;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\t\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Points.prototype.constructor = THREE.Points;\r\n\r\nTHREE.Points.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Points.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Points.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\treturn new THREE.Points( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Line.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON();\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// DEPRECATED\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.LineSegments.prototype.constructor = THREE.LineSegments;\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\tvar tempA = new THREE.Vector3();\r\n\tvar tempB = new THREE.Vector3();\r\n\tvar tempC = new THREE.Vector3();\r\n\r\n\tvar uvA = new THREE.Vector2();\r\n\tvar uvB = new THREE.Vector2();\r\n\tvar uvC = new THREE.Vector2();\r\n\r\n\tvar barycoord = new THREE.Vector3();\r\n\r\n\tvar intersectionPoint = new THREE.Vector3();\r\n\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\treturn uv1.clone();\r\n\r\n\t}\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\t\tvar material = this.material;\r\n\r\n\t\tif ( material === undefined ) return;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar a, b, c;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar index = geometry.index;\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: Math.floor( i / 3 ), // triangle number in indices buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvA.fromArray( positions, i );\r\n\t\t\t\t\tvB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vC, vB, vA, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tvar uv;\r\n\r\n\t\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar uvs = attributes.uv.array;\r\n\t\t\t\t\t\tuvA.fromArray( uvs, i );\r\n\t\t\t\t\t\tuvB.fromArray( uvs, i + 2 );\r\n\t\t\t\t\t\tuvC.fromArray( uvs, i + 4 );\r\n\t\t\t\t\t\tuv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\t\tuv: uv,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tindex: a, // triangle number in positions buffer semantics\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar faces = geometry.faces;\r\n\r\n\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], a ), influence );\r\n\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], b ), influence );\r\n\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], c ), influence );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( faceMaterial.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( c, b, a, true, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ray.intersectTriangle( a, b, c, faceMaterial.side !== THREE.DoubleSide, intersectionPoint ) === null ) continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersectionPointWorld.copy( intersectionPoint );\r\n\t\t\t\tintersectionPointWorld.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tvar uv;\r\n\r\n\t\t\t\tif ( geometry.faceVertexUvs[ 0 ].length > 0 ) {\r\n\r\n\t\t\t\t\tvar uvs = geometry.faceVertexUvs[ 0 ][ f ];\r\n\t\t\t\t\tuvA.copy( uvs[ 0 ] );\r\n\t\t\t\t\tuvB.copy( uvs[ 1 ] );\r\n\t\t\t\t\tuvC.copy( uvs[ 2 ] );\r\n\t\t\t\t\tuv = uvIntersection( intersectionPoint, a, b, c, uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\t\tuv: uv,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta geometries cache\r\n\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t}\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t}\r\n\r\n\tdata.object.geometry = this.geometry.uuid;\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\nTHREE.Bone.prototype.copy = function ( source ) {\r\n\t\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\t\r\n\tthis.skin = source.skin;\r\n\t\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\t\t\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\treturn function update() {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Skeleton.prototype.clone = function () {\r\n\r\n\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n};\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\t\t\r\n\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function() {\r\n\r\n\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n};\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tinfluences[ this.lastKeyframe ] = 0;\r\n\t\tinfluences[ this.currentKeyframe ] = 1;\r\n\t\tinfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tinfluences[ this.currentKeyframe ] = mix;\r\n\tinfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > - 1 ) influences[ a ] = 1 - t;\r\n\tif ( b > - 1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Mesh.prototype.copy.call( this, source );\r\n\r\n\tthis.duration = source.duration;\r\n\tthis.mirroredLoop = source.mirroredLoop;\r\n\tthis.time = source.time;\r\n\r\n\tthis.lastKeyframe = source.lastKeyframe;\r\n\tthis.currentKeyframe = source.currentKeyframe;\r\n\r\n\tthis.direction = source.direction;\r\n\tthis.directionBackwards = source.directionBackwards;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t},\r\n\t\tobjects: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\t\treturn this.levels;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn levels[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function update( camera ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\tvar levels = source.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.object.levels = [];\r\n\r\n\tvar levels = this.levels;\r\n\r\n\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\tvar level = levels[ i ];\r\n\r\n\t\tdata.object.levels.push( {\r\n\t\t\tobject: level.object.uuid,\r\n\t\t\tdistance: level.distance\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function Sprite( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\tvar guessSizeSq = this.scale.x * this.scale.y;\r\n\r\n\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function () {\r\n\r\n\treturn new this.constructor( this.material ).copy( this );\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t// only serialize if not in meta materials cache\r\n\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON();\r\n\r\n\t}\r\n\r\n\tdata.object.material = this.material.uuid;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture,\t// THREE.Texture\r\n\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\tscale: 1, \t\t// scale\r\n\t\trotation: 0, \t\t// rotation\r\n\t\topacity: opacity,\t// opacity\r\n\t\tcolor: color,\t\t// color\r\n\t\tblending: blending\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.positionScreen.copy( source.positionScreen );\r\n\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment'] = \"#ifdef USE_AOMAP\\n\\n\ttotalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment'] = \"#ifdef USE_AOMAP\\n\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex'] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex'] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = color.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\n\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n\\n}\\n\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n\\n}\\n\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\n\treturn - distance * planeNormal + point;\\n\\n}\\n\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n\\n}\\n\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n\\n}\\n\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\\n\tif ( decayExponent > 0.0 ) {\\n\\n\t  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\n\t}\\n\\n\treturn 1.0;\\n\\n}\\n\\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\\n\\n\t// Original approximation by Christophe Schlick '94\\n\t//;float fresnel = pow( 1.0 - dotLH, 5.0 );\\n\\n\t// Optimized variant (presented by Epic at SIGGRAPH '13)\\n\tfloat fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\\n\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n\\n}\\n\\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\\n\\n\t// geometry term is (n⋅l)(n⋅v) / 4(n⋅l)(n⋅v)\\n\\n\treturn 0.25;\\n\\n}\\n\\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\\n\\n\t// factor of 1/PI in distribution term omitted\\n\\n\treturn ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n\\n}\\n\\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\\n\\n\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\n\t//float dotNL = saturate( dot( normal, lightDir ) );\\n\t//float dotNV = saturate( dot( normal, viewDir ) );\\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( lightDir, halfDir ) );\\n\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\n\tfloat G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\\n\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\n\treturn F * G * D;\\n\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n\\n\t#ifdef GAMMA_INPUT\\n\\n\t\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\\nvec3 linearToOutput( in vec3 a ) {\\n\\n\t#ifdef GAMMA_OUTPUT\\n\\n\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n\\n\t#else\\n\\n\t\treturn a;\\n\\n\t#endif\\n\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex'] = \"#ifdef USE_DISPLACEMENTMAP\\n\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\n\temissiveColor.rgb = inputToLinear( emissiveColor.rgb );\\n\\n\ttotalEmissiveLight *= emissiveColor.rgb;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment'] = \"#ifdef USE_EMISSIVEMAP\\n\\n\tuniform sampler2D emissiveMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\ttotalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\nvec3 normal = normalize( transformedNormal );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition - mvPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\t\tvLightFront += lightColor * attenuation * saturate( dotProduct );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += lightColor * attenuation * saturate( - dotProduct );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tvLightFront += lightColor * saturate( dotProduct );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += lightColor * saturate( - dotProduct );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tfloat hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 viewDir = normalize( vViewPosition );\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = pointLightColor[ i ];\\n\\n\t\tvec3 lightPosition = pointLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\t// attenuation\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = spotLightColor[ i ];\\n\\n\t\tvec3 lightPosition = spotLightPosition[ i ];\\n\t\tvec3 lVector = lightPosition + vViewPosition.xyz;\\n\t\tvec3 lightDir = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], lightDir );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\\n\\n\t\t\t// attenuation\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tattenuation *= spotEffect;\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\t\ttotalDiffuseLight += lightColor * attenuation * cosineTerm;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\t\ttotalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightColor = directionalLightColor[ i ];\\n\\n\t\tvec3 lightDir = directionalLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat cosineTerm = saturate( dot( normal, lightDir ) );\\n\\n\t\ttotalDiffuseLight += lightColor * cosineTerm;\\n\\n\t\t// specular\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lightDir = hemisphereLightDirection[ i ];\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lightDir );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += lightColor;\\n\\n\t\t// specular (sky term only)\\n\\n\t\tvec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\\n\\n\t\ttotalSpecularLight += brdf * specularStrength * lightColor * max( dotProduct, 0.0 );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t#endif\\n\\n\t}\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex'] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\" : { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\" : { type: \"f\", value: 1 },\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\" : { type: \"t\", value: null },\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\" : { type: \"t\", value: null },\r\n\t\t\"displacementScale\" : { type: \"f\", value: 1 },\r\n\t\t\"displacementBias\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = vec3( 1.0 );\", // hardwired\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb * totalAmbientLight;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"aomap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lightmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"emissivemap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bumpmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"displacementmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"displacementmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"uv2_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"beginnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"displacementmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = - mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"uv2_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"aomap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"emissivemap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\t\t\t\"\tvec3 totalAmbientLight = ambientLightColor;\",\r\n\t\t\t\"\tvec3 totalEmissiveLight = emissive;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"aomap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"emissivemap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"points\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"begin_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"project_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" ),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join( \"\\n\" )\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = -1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = -1;\r\n\r\n\tvar opaqueImmediateObjects = [];\r\n\tvar opaqueImmediateObjectsLastIndex = -1;\r\n\tvar transparentImmediateObjects = [];\r\n\tvar transparentImmediateObjectsLastIndex = -1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors: [], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value !== undefined ) pixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t};\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tif ( ! renderTarget || renderTargetProperties.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTargetProperties.__webglTexture );\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( numericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uniforms = program.getUniforms();\r\n\r\n\t\t\tif ( uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t\t_gl.uniform1fv( uniforms.morphTargetInfluences, morphInfluences );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group === undefined ) {\r\n\r\n\t\t\tvar count;\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\tcount = index.count;\r\n\r\n\t\t\t} else if ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\tcount = position.data.array.length / 3;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcount = position.count;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar drawRange = geometry.drawRange;\r\n\r\n\t\t\tgroup = {\r\n\t\t\t\tstart: drawRange.start,\r\n\t\t\t\tcount: Math.min( drawRange.count, count )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.InstancedBufferGeometry && geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * pixelRatio );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\t\t\trenderer.render( group.start, group.count );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, data.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferAttribute but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\textension.vertexAttribDivisorANGLE( programAttribute, geometryAttribute.meshPerAttribute );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = -1;\r\n\t\ttransparentObjectsLastIndex = -1;\r\n\r\n\t\topaqueImmediateObjectsLastIndex = -1;\r\n\t\ttransparentImmediateObjectsLastIndex = -1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\topaqueImmediateObjects.length = opaqueImmediateObjectsLastIndex + 1;\r\n\t\ttransparentImmediateObjects.length = transparentImmediateObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( opaqueImmediateObjects, camera, lights, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog );\r\n\t\t\trenderObjectsImmediate( transparentImmediateObjects, camera, lights, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushImmediateRenderItem( object ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( object.material.transparent ) {\r\n\r\n\t\t\tarray = transparentImmediateObjects;\r\n\t\t\tindex = ++ transparentImmediateObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueImmediateObjects;\r\n\t\t\tindex = ++ opaqueImmediateObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing position or grow the array\r\n\r\n\t\tif ( index < array.length ) {\r\n\r\n\t\t\tarray[ index ] = object;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( object );\r\n\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\tlights.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\tsprites.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\tlensFlares.push( object );\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\tpushImmediateRenderItem( object );\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\t_this.renderBufferDirect( camera, lights, fog, geometry, material, object, group );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material = overrideMaterial;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar object = renderList[ i ];\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( overrideMaterial === undefined ) material = object.material;\r\n\r\n\t\t\tsetMaterial( material );\r\n\r\n\t\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters( material, lights, fog, object );\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterialProperties.uniformsList = [];\r\n\r\n\t\tvar uniformLocations = materialProperties.program.getUniforms();\r\n\r\n\t\tfor ( var u in materialProperties.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = uniformLocations[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\r\n\t\t\t\tmaterialProperties.uniformsList.push( [ materialProperties.__webglShader.uniforms[ u ], location ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tsetMaterialFaces( material );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setMaterialFaces( material ) {\r\n\r\n\t\tmaterial.side !== THREE.DoubleSide ? state.enable( _gl.CULL_FACE ) : state.disable( _gl.CULL_FACE );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( material.needsUpdate || ! materialProperties.program ) {\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === - 1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== undefined ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== undefined ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( capabilities.floatVertexTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== undefined ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights, camera );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( materialProperties.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== undefined ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object.modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object.normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i2 = 0, il = value.length; i < il; i ++, i2 += 2 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i2 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i2 + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i3 = 0, il = value.length; i < il; i ++, i3 += 3 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i3 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i3 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i3 + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, i4 = 0, il = value.length; i < il; i ++, i4 += 4 ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i4 + 0 ] = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ i4 + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ i4 + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ i4 + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset + 0 ] = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset + 0 ] = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tpointPositions[ pointOffset + 0 ] = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.copy( _direction ).applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tspotPositions[ spotOffset + 0 ] = _vector3.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _vector3.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tspotDirections[ spotOffset + 0 ] = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset + 0 ] = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, properties.get( renderTarget ).__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTargetProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\t\t\t\trenderTargetProperties.__webglRenderbuffer = [];\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTargetProperties.__webglTexture );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTargetProperties.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, renderTargetProperties.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTargetProperties.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTargetProperties.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( renderTarget.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( properties.get( renderTarget ).__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( properties.get( renderTarget ).__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, properties.get( renderTarget ).__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, properties.get( renderTarget ).__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn capabilities.vertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsInstancedArrays = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tshadowMapEnabled: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.enabled;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\t\tshadowMap.enabled = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapType: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.type;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\t\tshadowMap.type = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapCullFace: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.cullFace;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\t\tshadowMap.cullFace = value;\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tshadowMapDebug: {\r\n\t\t\tget: function () {\r\n\r\n\t\t\t\treturn shadowMap.debug;\r\n\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug.' );\r\n\t\t\t\tshadowMap.debug = value;\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\r\n\t\tthis.shareDepthFrom = source.shareDepthFrom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.data.count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, position.count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, index.array.length, type, 0, geometry.maxInstancedCount );\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\t\tif ( property.wireframe ) deleteAttribute( property.wireframe );\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchUniformLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveUniform( program, i );\r\n\t\t\tvar name = info.name;\r\n\t\t\tvar location = gl.getUniformLocation( program, name );\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE UNIFORM:\", name);\r\n\r\n\t\t\tvar suffixPos = name.lastIndexOf( '[0]' );\r\n\t\t\tif ( suffixPos !== - 1 && suffixPos === name.length - 3 ) {\r\n\r\n\t\t\t\tuniforms[ name.substr( 0, suffixPos ) ] = location;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniforms[ name ] = location;\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tparameters.bumpMap || parameters.normalMap || parameters.flatShading || material.derivatives ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\trenderer.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\trenderer.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms = fetchUniformLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"envMap\", \"envMapMode\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"bumpMap\", \"normalMap\", \"specularMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"maxDirLights\", \"maxPointLights\",\r\n\t\t\"maxSpotLights\", \"maxHemiLights\", \"maxShadows\", \"shadowMapEnabled\",\r\n\t\t\"shadowMapType\", \"shadowMapDebug\", \"alphaTest\", \"metal\", \"doubleSided\",\r\n\t\t\"flipSided\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.initMaterial:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\t\t\tshadowMapDebug: renderer.shadowMap.debug,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tchunks.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tvar parameterName = parameterNames[ i ];\r\n\t\t\tchunks.push( parameterName );\r\n\t\t\tchunks.push( parameters[ parameterName ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\tvar _depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\tvar _depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\tvar _depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\tvar _depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\tthis.cullFace = THREE.CullFaceFront;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\r\n\t\t_state.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_state.setDepthTest( true );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( var i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( scope.type === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = light.shadowMap;\r\n\t\t\tvar shadowMatrix = light.shadowMatrix;\r\n\t\t\tvar shadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, groupMaterial ), object, group );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, null, geometry, getDepthMaterial( object, material ), object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\t\t_state.enable( _gl.BLEND );\r\n\r\n\t\tif ( scope.cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar useMorphing = geometry.morphTargets !== undefined && geometry.morphTargets.length > 0 && material.morphTargets;\r\n\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\tvar depthMaterial;\r\n\r\n\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\tdepthMaterial = object.customDepthMaterial;\r\n\r\n\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\tdepthMaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\tdepthMaterial = _depthMaterialMorph;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tdepthMaterial = _depthMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tdepthMaterial.visible = material.visible;\r\n\t\tdepthMaterial.wireframe = material.wireframe;\r\n\t\tdepthMaterial.wireframeLinewidth = material.wireframeLinewidth;\r\n\r\n\t\treturn depthMaterial;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = undefined;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tgl.clearColor( 0, 0, 0, 1 );\r\n\t\tgl.clearDepth( 1 );\r\n\t\tgl.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\tgl.frontFace( gl.CCW );\r\n\t\tgl.cullFace( gl.BACK );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tthis.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tthis.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonOffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === undefined ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t};\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t};\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face.toLowerCase() ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch ( e ) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tconsole.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\n\r\nTHREE.typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nif ( typeof self !== 'undefined' ) self._typeface_js = THREE.typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif ( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.start( 0, this.startTime );\r\n\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n\tthis.connect();\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.connect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.connect( this.filter );\r\n\t\tthis.filter.connect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.connect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.disconnect = function () {\r\n\r\n\tif ( this.filter !== undefined ) {\r\n\r\n\t\tthis.source.disconnect( this.filter );\r\n\t\tthis.filter.disconnect( this.panner );\r\n\r\n\t} else {\r\n\r\n\t\tthis.source.disconnect( this.panner );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setFilter = function ( value ) {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.disconnect();\r\n\t\tthis.filter = value;\r\n\t\tthis.connect();\r\n\r\n\t} else {\r\n\r\n\t\tthis.filter = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getFilter = function () {\r\n\r\n\treturn this.filter;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setPlaybackRate = function ( value ) {\r\n\r\n\tthis.playbackRate = value;\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getPlaybackRate = function () {\r\n\r\n\treturn this.playbackRate;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getLoop = function () {\r\n\r\n\treturn this.source.loop;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRefDistance = function () {\r\n\r\n\treturn this.panner.refDistance;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getRolloffFactor = function () {\r\n\r\n\treturn this.panner.rolloffFactor;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.getVolume = function () {\r\n\r\n\treturn this.gain.gain.value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\r\n\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t// determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t// add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub( pt1 );\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t}\r\n\r\n\t// Get length of sub-curve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[ 0 ] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistant sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0 ) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-Rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\t//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tvar args = [\r\n\t\taX, aY,\r\n\t\txRadius, yRadius,\r\n\t\taStartAngle, aEndAngle,\r\n\t\taClockwise,\r\n\t\taRotation || 0 // aRotation is optional.\r\n\t];\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise, aRotation );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint( 1 );\r\n\targs.push( lastPoint.x );\r\n\targs.push( lastPoint.y );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tvar cos, sin;\r\n\t\t\tif ( aRotation !== 0 ) {\r\n\t\t\r\n\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1 ];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < EPSILON &&\r\n\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < EPSILON )\r\n\t\tpoints.splice( points.length - 1, 1 );\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action === THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs( edgeDy ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length === 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length === 1 ) {\r\n\r\n\t\ttmpPath = subPaths[ 0 ];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[ mainIdx ] = undefined;\r\n\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\r\n\t\tvar ambiguous = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t}\r\n\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\ttmpShape = newShapes[ i ].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[ i ];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif ( this.useSpacedPoints ) {\r\n\r\n\t\treturn this.extractAllSpacedPoints( divisions );\r\n\r\n\t}\r\n\r\n\treturn this.extractAllPoints( divisions );\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - 1 ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3;\r\n\r\n\t\t\tif ( intPoint === 0 ) {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tp0 = points[ intPoint - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint ];\r\n\t\t\tp2 = points[ intPoint + 1 ];\r\n\r\n\t\t\tif ( intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ intPoint + 2 ]\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 2 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.add() has been deprecated.' );\r\n\r\n\t},\r\n\tget: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.get() has been deprecated.' );\r\n\r\n\t},\r\n\tremove: function () {\r\n\r\n\t\tconsole.warn( 'THREE.AnimationHandler.remove() has been deprecated.' );\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[ this.data.name ];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy( newQuat );\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys,\r\n\t\t\tsids = this.data.hierarchy[ h ].sids,\r\n\t\t\tobj = this.hierarchy[ h ];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[ 0 ].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[ keys.length - 1 ].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar frameTime = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / frameTime );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame !== this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( this.currentTime % frameTime ) / frameTime;\r\n\r\n\t\tinfluences[ frame ] = mix;\r\n\t\tinfluences[ this.lastFrame ] = 1 - mix;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.BoxGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.BoxGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.depth,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.depthSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry; // backwards compatibility\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push( center );\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\nTHREE.CircleGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 3 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i );\r\n\t\tindices.push( i + 1 );\r\n\t\tindices.push( 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\nTHREE.CircleBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CircleBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.segments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 1 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ], undefined, 2 ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\nTHREE.CylinderGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.CylinderGeometry(\r\n\t\tthis.parameters.radiusTop,\r\n\t\tthis.parameters.radiusBottom,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.openEnded,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\nTHREE.PlaneGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\nTHREE.PlaneBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PlaneBufferGeometry(\r\n\t\tthis.parameters.width,\r\n\t\tthis.parameters.height,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) {\r\n\r\n\t\t// concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) {\r\n\r\n\t\t\t// number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\nTHREE.RingGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.RingGeometry(\r\n\t\tthis.parameters.innerRadius,\r\n\t\tthis.parameters.outerRadius,\r\n\t\tthis.parameters.thetaSegments,\r\n\t\tthis.parameters.phiSegments,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\nTHREE.SphereGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\nTHREE.SphereBufferGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.widthSegments,\r\n\t\tthis.parameters.heightSegments,\r\n\t\tthis.parameters.phiStart,\r\n\t\tthis.parameters.phiLength,\r\n\t\tthis.parameters.thetaStart,\r\n\t\tthis.parameters.thetaLength\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\nTHREE.TorusGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.arc\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\nTHREE.TorusKnotGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TorusKnotGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.tube,\r\n\t\tthis.parameters.radialSegments,\r\n\t\tthis.parameters.tubularSegments,\r\n\t\tthis.parameters.p,\r\n\t\tthis.parameters.q,\r\n\t\tthis.parameters.heightScale\r\n\t);\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\nTHREE.PolyhedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.PolyhedronGeometry(\r\n\t\tthis.parameters.vertices,\r\n\t\tthis.parameters.indices,\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\treturn geometry.copy( this );\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Geometry.prototype.copy.call( this, source );\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\nTHREE.DodecahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.DodecahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\nTHREE.IcosahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.IcosahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\nTHREE.OctahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.OctahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\nTHREE.TetrahedronGeometry.prototype.clone = function () {\r\n\r\n\tvar geometry = new THREE.TetrahedronGeometry(\r\n\t\tthis.parameters.radius,\r\n\t\tthis.parameters.detail\r\n\t);\r\n\r\n\tgeometry.copy( this );\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t};\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addDrawCall( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar drawcall = drawcalls[ o ];\r\n\r\n\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\tvar count = drawcall.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\t\t\r\n\t\tif ( headLength < length ) {\r\n\t\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\t\tthis.line.matrixAutoUpdate = false;\r\n\t\t\tthis.add( this.line );\r\n\t\t}\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tif ( headLength < length ){\r\n\t\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\t\tthis.line.updateMatrix();\r\n\t}\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tif ( this.line !== undefined ) this.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tbox.setFromObject( object );\r\n\r\n\t\tif ( box.empty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t}\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.translate( 0, - 0.5, 0 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/three/three.js\n// module id = 48\n// module chunks = 0"],"sourceRoot":""}